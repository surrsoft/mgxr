{"version":3,"sources":["consts.tsx","utils/app-utils.tsx","api/airtable-api.ts","components/Settings/index.tsx","api/hogg/utils/HoggOffsetCount.ts","api/hogg/base-implements/BaseTuple.ts","api/hogg/base-implements/BaseCell.ts","api/hogg/utils/HoggResult.ts","api/hogg/connections/HoggConnectionAirtable.ts","components/PageDebug/index.tsx","components/Card/index.tsx","api/cards-api.ts","components/RandomCardViewer/index.tsx","components/PageNews/index.tsx","consts-uarw.tsx","utils/uarw/uarw-utils.ts","components/PageUarw/QCard/ToggleProgresses/index.tsx","components/PageUarw/QCard/index.tsx","utils/uarw/uarw-logic.ts","components/PageUarw/UarwNavbar/index.tsx","components/PageUarw/UarwSettings/index.tsx","components/PageUarw/UarwAbout/index.tsx","utils/BrPortalFCC.tsx","assets/svgs/question.svg","utils/useScrollFix.ts","utils/BrPopupFCC/BrPopupFCC.tsx","components/PageUarw/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CONF_AIRTABLE_DB_NAME","CONF_AIRTABLE_TABLE_NAME","MGXR_LS_AIRTABLE_API_KEY","Paths","Names","_classCallCheck","_createClass","key","value","path","_jsx","className","children","href","nameGet","_Names$values$find","values","find","el","link","name","MGXR","UARW","UARW2","UARW_SETTINGS","UARW_ABOUT","NEWS","SETTINGS","DEBUG","group","SOME","LSApiKey","localStorage","getItem","apiKey","str","length","test","setItem","TpCard","title","url","comm","body","id","tid","trans_count","arguments","undefined","trans_date_last","show_date_last","randomExcept","ix","arrExcept","_","isEmpty","random","arr0","_loop","ix0","some","push","rnd","MAirtable","apiKeyGet","dc","Airtable","default_config","endpointUrl","configure","alert","_recordsGet","_asyncToGenerator","_regeneratorRuntime","mark","_callee","maxRecords","_args","wrap","_context","prev","next","abrupt","Promise","resolve","reject","ret","selectCfg","base","select","eachPage","records","fetchNextPage","forEach","record","err","console","error","stop","apply","_recordUpdate","_callee2","fields","_context2","updOj","update","_x","_x2","Settings","_Component","_inherits","_super","_createSuper","props","_this","call","textInput","state","isLoading","React","createRef","this","setState","_this$textInput$curre","val","current","apiKeySet","_this2","_this$state","_jsxs","type","ref","defaultValue","onClick","handleSave","Component","HoggOffsetCount","getAll","offset","count","BaseTuple","cells","cell","BaseCell","columnName","HoggResult","code","HoggConnectionAirtable","dbName","columnNames","tableName","pFilterVusc","filter","_query","offsetCount","pageSize","filterByFormula","counter","table","tup","convertRecord","options","Error","concat","_update","tuples","_updConfsGet","updConfs","log","Date","now","updConfsGet","isOk","message","t0","_create","_callee3","createData","_context3","updConfsAtCreateGet","create","_x3","_delete2","_callee4","ids","_context4","destroy","_x4","cees","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","cee","tidCee","every","tuple","cellsGet","updConf","fieldName","columnNameGet","valueGet","PageDebug","_len","args","Array","_key","connection","_this$connection","init","columns","query","sent","_this$connection2","cellAdd","_this$connection3","_this$connection4","delete","db","nx","DateFieldShow","dateSt","dayjs","diff","Card","handleLinkPress","bind","_assertThisInitialized","extend","relativeTime","isBetween","_handleLinkPress","e","_this$props","card","handleLinkClick","target","rel","CardsB","FIELD_ID","FIELD_TID","FIELD_TITLE","FIELD_URL","FIELD_COMM","FIELD_BODY","index","get","FIELD_TRANS_COUNT","FIELD_TRANS_DATE_LAST","FIELD_SHOW_DATE_LAST","_fields","_defineProperty","recordUpdate","RandomCardViewer","cardHandleLinkClick","_cardHandleLinkClick","card0","_objectSpread","format","countShowed","countAll","handleShow","PageNews","cardsB","showedIxs","isApiKeySetted","errorStr","_handleShow","arr1","_toConsumableArray","getByIndex","_componentDidMount","recordsGet","countAllGet","statusCode","includes","UARW_COLUMN_NAME","UARW_PROGRESSES","colination","arr","sortByCount","currElem","retEl","ValCount","needSort","sort","a","b","ascending","valCounts","map","valCount","ValLabel","SortInfo","label","arrObjectsSortByStringProp","arrObjectsBack","propName","oj1","oj2","v1","v2","selectOptionToVusc","option","b51","isArray","PROGRESS","P1","stJoin","join","ToggleProgresses","ToggleButtonGroup","currValue","onChange","size","vls","vl","ToggleButton","disabled","disable","ClipLoader","loading","ReactMarkdown","require","QCard","_this$props$qcard2","P2","P3","P4","P5","progressesChange","_ref","_this$props$qcard","res","qcardProgressChange","progressDisable","qcard","progressValue","answerShowed","progress","_this$props$qcard3","_this$props$qcard4","_this$props$qcard5","scope","subscope","question","handleClick","answer","errMsg","UarwLogic","_qcardsGet","filterVusc","data","uarwTuples","connectionTableCreate","UarwTuples","qcards","_scopesAndProgressesGet","scopes","progresses","scopesVC","progressesVC","_args2","SCOPES","b19","_qcardProgressUpdate","cardTid","conn","TID","QCardOj","createMulti","pgs","QUESTION","ANSWER","SUBSCOPES","ID","UarwNavbar","onSelectHandle","eventKey","history","match","_Fragment","Navbar","Brand","Nav","onSelect","Link","UARW_SETTINGS_2","withRouter","UarwSettings","_useState","useState","_useState2","setCount","useHistory","UarwAbout","BrPortalFCC","document","createElement","$container","useEffect","appendChild","removeChild","ReactDOM","createPortal","_g","useScrollFix","toFix","$overflow","$overflowSet","scrollFix","isFix","tagName","node0","getElementsByTagName","item","style","overflow","fnScrollFix","BrPopupFCC","onClose","isOpened","_ref$overlayColor","overlayColor","role","tabIndex","backgroundColor","_excluded","_extends","assign","i","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgQuestion","svgRef","titleId","width","height","viewBox","xmlns","d","ForwardRef","SelectMode","RandomMode","fnOptionsRefresh","currSelectOption","newVL","np","PageUarw","uarwLogic","hadleQCardProgressChange","qcardTid","newProgress","hoggResult","qcardWithErr","qcardProgressUpdate","JSON","stringify","randomModeChange","mode","randomMode","loaded","loadedScopes","scopesSelectMode","errStr","selectScOptions","selectScSelectedOption","selectPrOptions","selectPrSelectedOption","selectMode","STRICT","A","popupOpened","$helpOpened","selectScHandleChange","selectPrHandleChange","handleShowCards","selectModeChange","helpCloseHandle","questionClickHandle","selectorsDataGetAndUpdate","_selectorsDataGetAndUpdate","_yield$this$uarwLogic","scopesVL","progressesVL","newSelectScSelectedOption","newSelectPrSelectedOption","newState","fnFilterVuscGet","scopesAndProgressesGet","asValLabels","_selectScHandleChange","_callee5","selectedOption","_context5","selectHandleChange","_selectPrHandleChange","_callee7","_this3","_context7","_callee6","_context6","_selectHandleChange","_callee8","_context8","_handleShowCards","_callee9","_this$uarwLogic","qcardOjs","_args9","_context9","qcardsGet","Math","B","filterScVusc","filterPrVusc","_selectModeChange","_callee10","_this4","_context10","FREE","_x5","text","_showRandomHandle","_callee11","_context11","_this5","Switch","Route","exact","render","component","Loader","position","top","ReactSelect","isMulti","placeholder","IconQuestion","fnRandomModeCommentGet","Button","variant","showRandomHandle","App","_React$Component","navSelectHandle","fnMain","_this$state$navEventK","Container","fluid","collapseOnSelect","expand","bg","Toggle","Collapse","defaultActiveKey","activeKey","navEventKey","NavDropdown","navDropdownTitle","active","navDropdownIsActive","Item","location","findOj","pathname","locationHandleToNav","listen","aTagGet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","HashRouter","getElementById"],"mappings":"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","file":"static/js/main.098c9b82.chunk.js","sourcesContent":["export const MGXR_APP_REV = '10';\r\n\r\nexport const CONF_AIRTABLE_DB_NAME = 'appXv6ry7Vn262nGR';\r\nexport const CONF_AIRTABLE_TABLE_NAME = 'main';\r\n\r\nexport const MGXR_LS_AIRTABLE_API_KEY = 'mgxr_ls_airtable_api_key';\r\n\r\nexport enum Paths {\r\n  MGXR = '/mgxr',\r\n  UARW = '/uarw',\r\n  UARW2 = '/uarw2',\r\n  UARW_SETTINGS = '/uarw-settings',\r\n  UARW_SETTINGS_2 = '/uarw-settings-2',\r\n  UARW_ABOUT = '/uarw-about',\r\n  NEWS = '/news',\r\n  SETTINGS = '/settings',\r\n  DEBUG = '/debug',\r\n  SOME = '/some'\r\n}\r\n\r\nexport class Names {\r\n  static values = [\r\n    {link: Paths.MGXR, name: \"Главная\"},\r\n    {link: Paths.UARW, name: `\"Карточки\"`},\r\n    {link: Paths.UARW2, name: `\"Карточки2\"`},\r\n    {link: Paths.UARW_SETTINGS, name: `Настройки`},\r\n    {link: Paths.UARW_ABOUT, name: `О проекте`},\r\n    {link: Paths.NEWS, name: `\"Новости\"`},\r\n    {link: Paths.SETTINGS, name: `Настройки`},\r\n    {link: Paths.DEBUG, group: 'dropdown-1', name: `Debug`},\r\n    {link: Paths.SOME, group: 'dropdown-1', name: `Some`},\r\n  ]\r\n\r\n  static aTagGet(path: Paths) {\r\n    return <div className=\"cls2040\"><a href={path}>{Names.nameGet(path)}</a></div>\r\n  }\r\n\r\n  static nameGet(path: Paths): string {\r\n    return Names.values.find(el => el.link === path)?.name || 'text'\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { MGXR_LS_AIRTABLE_API_KEY } from '../consts';\r\n\r\nexport class LSApiKey {\r\n  static apiKeyGet(): string | null {\r\n    return localStorage.getItem(MGXR_LS_AIRTABLE_API_KEY)\r\n  }\r\n\r\n  static apiKeySet(apiKey?: string): boolean {\r\n    if (isEmptyOrWhitespaces(apiKey)) {\r\n      return false\r\n    } else if (apiKey) {\r\n      localStorage.setItem(MGXR_LS_AIRTABLE_API_KEY, apiKey);\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport class TpCard {\r\n  constructor(\r\n    readonly title?: string,\r\n    readonly url?: string,\r\n    readonly comm?: string,\r\n    readonly body?: string,\r\n    readonly id?: string,\r\n    readonly tid?: string,\r\n    readonly trans_count: number = 0,\r\n    readonly trans_date_last?: string,\r\n    readonly show_date_last?: string,\r\n  ) {\r\n  }\r\n}\r\n\r\nexport const tpCards = [\r\n  new TpCard('Российская газета', 'https://rg.ru'),\r\n  new TpCard('Коммерсант', 'https://www.kommersant.ru/'),\r\n  new TpCard('РИА Новости', 'https://ria.ru/')\r\n]\r\n\r\n/**\r\n * Возвращает случайное число в диапазоне 0 .. (1) включая 0 и (1), но отсутствующее в (2).\r\n * Если такого случайного числа найти невозможно (из-за того что в (2) уже все индексы есть), то возвращает -1\r\n *\r\n * ID [[210219210500]], rev.2 1.1 2021-02-19\r\n *\r\n * @param ix (1) -- например 3\r\n * @param arrExcept -- например [0, 1]\r\n * @return например может вернуть только 2 или 3\r\n */\r\nexport function randomExcept(ix: number, arrExcept: [number]): number {\r\n  if (_.isEmpty(arrExcept)) {\r\n    return _.random(ix);\r\n  }\r\n  const arr0 = [];\r\n  for (let ix0 = 0; ix0 <= ix; ix0++) {\r\n    const b0 = arrExcept.some(el => el === ix0);\r\n    if (!b0) {\r\n      arr0.push(ix0)\r\n    }\r\n  }\r\n  if (arr0.length > (ix + 1) || arr0.length === 0) {\r\n    return -1\r\n  }\r\n  const rnd = _.random(arr0.length - 1);\r\n  return arr0[rnd];\r\n}\r\n\r\n/**\r\n * ID [210217114100], rev.1.0 2021-02-17\r\n */\r\nexport function isEmptyOrWhitespaces(str?: string) {\r\n  return (!str || str.length === 0 || /^\\s*$/.test(str))\r\n}\r\n\r\nexport function utilPathGet(name?: string): string[] {\r\n  if (!name) {\r\n    return [\"/\", \"/mgxr\"]\r\n  }\r\n  return [`/${name}`, `/mgxr/${name}`]\r\n}\r\n\r\n","import Airtable from 'airtable';\r\nimport Record from 'airtable/lib/record';\r\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../consts';\r\nimport { LSApiKey } from '../utils/app-utils';\r\n\r\nexport class MAirtable {\r\n\r\n  static init() {\r\n    const apiKey = LSApiKey.apiKeyGet()\r\n    if (!apiKey) {\r\n      alert('please add \"Airtable API Key\" at \"Settings\"')\r\n    } else {\r\n      const dc = Airtable.default_config()\r\n      dc.apiKey = apiKey\r\n      dc.endpointUrl = 'https://api.airtable.com'\r\n      Airtable.configure(dc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param maxRecords -- максимальное количество записей которое нужно вернуть, задействуется если > 0\r\n   */\r\n  static async recordsGet(maxRecords: number = 0): Promise<Record[]> {\r\n    return new Promise((resolve, reject) => {\r\n      const ret: Record[] = [];\r\n      const selectCfg = {}\r\n      if (maxRecords > 0) {\r\n        // @ts-ignore\r\n        selectCfg.maxRecords = maxRecords\r\n      }\r\n      Airtable\r\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\r\n        .select(selectCfg)\r\n        .eachPage(\r\n          function page(records, fetchNextPage) {\r\n            records.forEach(function (record) {\r\n              ret.push(record)\r\n            });\r\n            fetchNextPage();\r\n          },\r\n          function done(err) {\r\n            if (err) {\r\n              console.error(err);\r\n              reject(err)\r\n            }\r\n            resolve(ret)\r\n          }\r\n        )\r\n    });\r\n  }\r\n\r\n  static async recordUpdate(tid: string, fields: any) {\r\n    return new Promise((resolve, reject) => {\r\n      const updOj = {id: tid, fields}\r\n      Airtable\r\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\r\n        .update(\r\n          [updOj],\r\n          function (err: any, records: Record[] | undefined) {\r\n            if (err) {\r\n              reject(err);\r\n            }\r\n            resolve(records);\r\n          }\r\n        )\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles.css'\r\nimport { MGXR_APP_REV } from '../../consts';\r\nimport { LSApiKey } from '../../utils/app-utils';\r\n\r\nexport class Settings extends Component<any, any> {\r\n  private textInput: React.RefObject<HTMLInputElement>;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      apiKey: '',\r\n      isLoading: true\r\n    }\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      apiKey: LSApiKey.apiKeyGet(),\r\n      isLoading: false\r\n    })\r\n  }\r\n\r\n  handleSave() {\r\n    const val = this.textInput.current?.value\r\n    if (LSApiKey.apiKeySet(val)) {\r\n      this.setState({apiKey: val})\r\n      alert('saved')\r\n    } else {\r\n      alert('invalid value')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {apiKey, isLoading} = this.state;\r\n    return (<div className=\"app__settings\">\r\n      <div>Версия приложения: {MGXR_APP_REV}</div>\r\n      <div>\r\n        <label>Airtable API Key: </label>\r\n        {isLoading ? <span className=\"settings__loading\">Loading ...</span>\r\n          :\r\n          (<span>\r\n          <input className=\"settings__input\" type=\"text\" ref={this.textInput} defaultValue={apiKey}/>\r\n          <button className=\"settings__button\" onClick={() => this.handleSave()}>Save</button>\r\n        </span>)\r\n        }\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\n","export class HoggOffsetCount {\r\n  /**\r\n   *\r\n   * @param getAll (1) -- если TRUE, то это означает \"получить все записи\", тогда параметры (2), (3) должны\r\n   * игнорироваться\r\n   * @param offset (2) -- количество записей которые нужно пропустить\r\n   * набор\r\n   * @param count (3) -- количество записей которое нужно вернуть\r\n   */\r\n  constructor(\r\n    readonly getAll: boolean = false,\r\n    readonly offset: number = 0,\r\n    readonly count: number = 20\r\n  ) {\r\n  }\r\n}\r\n","import { HoggTupleNT } from '../interfaces/HoggTupleNT';\r\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\r\n\r\nexport class BaseTuple implements HoggTupleNT {\r\n  private cells: HoggCellNT[] = [];\r\n\r\n  create(cells: HoggCellNT[]): HoggTupleNT {\r\n    this.cells = cells;\r\n    return this;\r\n  }\r\n\r\n  cellsGet(): HoggCellNT[] {\r\n    return this.cells;\r\n  }\r\n\r\n  cellAdd(cell: HoggCellNT): HoggTupleNT {\r\n    this.cells.push(cell);\r\n    return this;\r\n  }\r\n\r\n}\r\n","import { HoggCellNT } from '../interfaces/HoggCellNT';\r\n\r\nexport class BaseCell implements HoggCellNT {\r\n  private columnName: string = '';\r\n  private value: string = '';\r\n\r\n  create(columnName: string, value: string): HoggCellNT {\r\n    this.columnName = columnName;\r\n    this.value = value;\r\n    return this;\r\n  }\r\n\r\n  columnNameGet(): string {\r\n    return this.columnName;\r\n  }\r\n\r\n  valueGet(): string {\r\n    return this.value;\r\n  }\r\n\r\n}\r\n","/**\r\n * Если value === TRUE то это означает успешный результат, иначе в code содержится код ошибки, а в comm - комментарий\r\n */\r\nexport class HoggResult<T> {\r\n  constructor(readonly value: T, readonly code: string = '', readonly comm: string = '') {\r\n  }\r\n}\r\n","import { HoggConnectionNT } from '../interfaces/HoggConnectionNT';\r\nimport { HoggTupleNT } from '../interfaces/HoggTupleNT';\r\nimport Airtable from 'airtable';\r\nimport Record from 'airtable/lib/record';\r\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\r\nimport { BaseTuple } from '../base-implements/BaseTuple';\r\nimport { BaseCell } from '../base-implements/BaseCell';\r\nimport { HoggOffsetCount } from '../utils/HoggOffsetCount';\r\nimport { HoggResult } from '../utils/HoggResult';\r\n\r\n\r\nexport class HoggConnectionAirtable implements HoggConnectionNT {\r\n\r\n  private dbName: string = '';\r\n  private columnNames: string[] = [];\r\n  private tableName: string = '';\r\n  // [vusc]\r\n  private pFilterVusc: string = '';\r\n\r\n  db(dbName: string): HoggConnectionNT {\r\n    this.dbName = dbName;\r\n    return this;\r\n  }\r\n\r\n  table(tableName: string): HoggConnectionNT {\r\n    this.tableName = tableName;\r\n    return this;\r\n  }\r\n\r\n  columns(columnNames: string[]): HoggConnectionNT {\r\n    this.columnNames = columnNames;\r\n    return this;\r\n  }\r\n\r\n  filterVusc(filter: string): HoggConnectionNT {\r\n    this.pFilterVusc = filter;\r\n    return this;\r\n  }\r\n\r\n  private static convertRecord(record: Record): HoggTupleNT {\r\n    const {fields} = record;\r\n    const cees: HoggCellNT[] = [];\r\n    for (const [key, value] of Object.entries(fields)) {\r\n      const cee: HoggCellNT = new BaseCell().create(key, value as string);\r\n      cees.push(cee);\r\n    }\r\n    const tidCee = new BaseCell().create('tid', record.id);\r\n    cees.push(tidCee);\r\n    return new BaseTuple().create(cees);\r\n  }\r\n\r\n  // TODO учесть columnNames\r\n  async query(offsetCount: HoggOffsetCount): Promise<HoggTupleNT[]> {\r\n    return new Promise((resolve, reject) => {\r\n      const ret: HoggTupleNT[] = [];\r\n      const selectCfg = {}\r\n      if (!offsetCount.getAll) {\r\n        const maxRecords = offsetCount.offset + offsetCount.count;\r\n        if (maxRecords > 0) {\r\n          // @ts-ignore\r\n          selectCfg.maxRecords = maxRecords;\r\n          // @ts-ignore\r\n          selectCfg.pageSize = maxRecords > 100 ? 100 : maxRecords;\r\n        }\r\n      }\r\n      if (this.columnNames && this.columnNames.length > 0) {\r\n        // @ts-ignore\r\n        selectCfg.fields = this.columnNames;\r\n      }\r\n      if (this.pFilterVusc) {\r\n        // @ts-ignore\r\n        selectCfg.filterByFormula = this.pFilterVusc;\r\n      }\r\n      let counter = 0;\r\n      Airtable\r\n        .base(this.dbName)\r\n        .table(this.tableName)\r\n        .select(selectCfg)\r\n        .eachPage(\r\n          function page(records, fetchNextPage) {\r\n            records.forEach(function (record) {\r\n              counter++;\r\n              if (counter > offsetCount.offset) {\r\n                const tup = HoggConnectionAirtable.convertRecord(record);\r\n                ret.push(tup)\r\n              }\r\n            });\r\n            fetchNextPage();\r\n          },\r\n          function done(err) {\r\n            if (err) {\r\n              console.error(err);\r\n              reject(err)\r\n            }\r\n            resolve(ret)\r\n          }\r\n        )\r\n    });\r\n  }\r\n\r\n  init(options: { apiKey: string }): void {\r\n    const {apiKey} = options;\r\n    if (apiKey) {\r\n      const dc = Airtable.default_config()\r\n      dc.apiKey = apiKey\r\n      dc.endpointUrl = 'https://api.airtable.com'\r\n      Airtable.configure(dc)\r\n    } else {\r\n      throw new Error(`[hogg]: [[210223092909]] invalid apiKey [${apiKey}]`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Среди ячеек в (1) должна быть ячейка с именем столбца 'tid'\r\n   * @param tuples\r\n   */\r\n  async update(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\r\n    console.log(`!!-!!-!! 2357-10 -> :::::::::::::: update() {210302235749}:${Date.now()}`); // del+\r\n    if (!(tuples && tuples.length > 0)) {\r\n      return new HoggResult<boolean>(false, '[[210223170254]]', 'tuples is empty')\r\n    } else {\r\n      // ---\r\n      const {updConfs, isOk} = updConfsGet(tuples);\r\n      // ---\r\n      if (!isOk) {\r\n        return new HoggResult(false, '[[210223191902]]', 'tid problem')\r\n      }\r\n      try {\r\n        return new Promise((resolve, reject) => {\r\n          Airtable\r\n            .base(this.dbName)\r\n            .table(this.tableName)\r\n            .update(updConfs, (err: any) => {\r\n              console.log('!!-!!-!! 2357-20 err {210302235801}\\n', err); // del+\r\n              if (err) {\r\n                resolve(new HoggResult(false, '[[210223202024]]', err.message))\r\n              } else {\r\n                resolve(new HoggResult<boolean>(true))\r\n              }\r\n            })\r\n        });\r\n      } catch (e) {\r\n        return new HoggResult<boolean>(false, '[[210223193709]]', (e as any)?.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  async create(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\r\n    if (!(tuples && tuples.length > 0)) {\r\n      return new HoggResult<boolean>(false, '[[210223170254-2]]', 'tuples is empty')\r\n    } else {\r\n      // ---\r\n      const createData = updConfsAtCreateGet(tuples);\r\n      // ---\r\n      try {\r\n        await Airtable\r\n          .base(this.dbName)\r\n          .table(this.tableName)\r\n          .create(createData, function (err: any) {\r\n            if (err) {\r\n              return new HoggResult(false, '[[210223202024-2]]', err.message)\r\n            }\r\n          })\r\n        return new HoggResult<boolean>(true)\r\n      } catch (e) {\r\n        return new HoggResult<boolean>(false, '[[210223193709-2]]', (e as any)?.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  async delete(ids: string[]): Promise<HoggResult<boolean>> {\r\n    await Airtable\r\n      .base(this.dbName)\r\n      .table(this.tableName)\r\n      .destroy(ids, function (err: any) {\r\n        if (err) {\r\n          return new HoggResult(false, '[[210223202024-3]]', err.message)\r\n        }\r\n      })\r\n    return new HoggResult(true)\r\n  }\r\n\r\n}\r\n\r\nfunction updConfsGet(tuples: HoggTupleNT[]) {\r\n  const updConfs: any[] = [];\r\n  const isOk = tuples.every(tuple => { // LOOP\r\n    const cells: HoggCellNT[] = tuple.cellsGet();\r\n    const updConf: any = {id: '', fields: {}}\r\n    cells.forEach(cell => { // LOOP-2\r\n      const fieldName = cell.columnNameGet()\r\n      if (fieldName === 'tid') {\r\n        updConf.id = cell.valueGet();\r\n      } else {\r\n        updConf.fields[fieldName] = cell.valueGet()\r\n      }\r\n    }) // LOOP-2\r\n    if (!updConf.id) {\r\n      return false; // stop loop\r\n    }\r\n    updConfs.push(updConf);\r\n    return true;\r\n  }) // LOOP\r\n  return {updConfs, isOk};\r\n}\r\n\r\nfunction updConfsAtCreateGet(tuples: HoggTupleNT[]) {\r\n  const updConfs: any[] = [];\r\n  tuples.forEach(tuple => { // LOOP\r\n    const cells: HoggCellNT[] = tuple.cellsGet();\r\n    const updConf: any = {fields: {}}\r\n    cells.forEach(cell => { // LOOP-2\r\n      const fieldName = cell.columnNameGet()\r\n      updConf.fields[fieldName] = cell.valueGet()\r\n    }) // LOOP-2\r\n    updConfs.push(updConf);\r\n    return true;\r\n  }) // LOOP\r\n  return updConfs;\r\n}\r\n","import { Component } from 'react';\r\nimport './styles.css';\r\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../../consts';\r\nimport { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\r\nimport { HoggOffsetCount } from '../../api/hogg/utils/HoggOffsetCount';\r\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\r\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\r\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\r\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\r\nimport { LSApiKey } from '../../utils/app-utils';\r\n\r\nexport class PageDebug extends Component<any, any> {\r\n  private connection?: HoggConnectionAirtable;\r\n\r\n  async query() {\r\n    const connection = new HoggConnectionAirtable();\r\n    connection.init({apiKey: LSApiKey.apiKeyGet() || ''})\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const res: HoggTupleNT[] | undefined = await this.connection\r\n      ?.columns(['id'])\r\n      .query(new HoggOffsetCount(false, 0, 10));\r\n  }\r\n\r\n  async update() {\r\n    const tuple = new BaseTuple()\r\n      .cellAdd(new BaseCell().create('tid', 'rec04BflzOVX54PWs'))\r\n      .cellAdd(new BaseCell().create('comm', '1-1-3'))\r\n    // ---\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const res: HoggResult<boolean> | undefined = await this.connection?.update([tuple])\r\n  }\r\n\r\n  async create() {\r\n    const tuples = [\r\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm')).cellAdd(new BaseCell().create('comm', '1-1-4')),\r\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm-2')).cellAdd(new BaseCell().create('comm', '1-1-5'))\r\n    ]\r\n    // ---\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const res: HoggResult<boolean> | undefined = await this.connection?.create(tuples)\r\n  }\r\n\r\n  async delete() {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const res = await this.connection?.delete(['recgsvfjiB1rDtNP5', 'recNGoZaZe7pPfzOH'])\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.connection = new HoggConnectionAirtable();\r\n    this.connection.init({apiKey: LSApiKey.apiKeyGet() || ''});\r\n    this.connection\r\n      .db(CONF_AIRTABLE_DB_NAME)\r\n      .table(CONF_AIRTABLE_TABLE_NAME);\r\n  }\r\n\r\n  nx() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.query()}>Query</button>\r\n        <button onClick={() => this.update()}>Update</button>\r\n        <button onClick={() => this.create()}>Create</button>\r\n        <button onClick={() => this.delete()}>Delete</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"page_debug\">{\r\n      this.nx()\r\n    }</div>\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport './card.css';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport { TpCard } from '../../utils/app-utils';\r\n\r\nexport interface CardProps {\r\n  card: TpCard,\r\n  handleLinkClick: (card: TpCard) => void\r\n}\r\n\r\nfunction DateFieldShow(name: string, dateSt?: string) {\r\n  return (<div>\r\n    {name}: {dateSt ?\r\n    (`${dateSt} (прошло дней: ${dayjs().diff(dateSt, 'day')})`)\r\n    : '-'}\r\n  </div>)\r\n}\r\n\r\nexport class Card extends Component<CardProps, any> {\r\n\r\n  constructor(props: CardProps) {\r\n    super(props);\r\n    this.handleLinkPress = this.handleLinkPress.bind(this);\r\n    dayjs.extend(relativeTime)\r\n    dayjs.extend(isBetween)\r\n  }\r\n\r\n  // @ts-ignore\r\n  async handleLinkPress(e) {\r\n    const {card, handleLinkClick} = this.props;\r\n    handleLinkClick(card);\r\n  }\r\n\r\n  render() {\r\n    const {card} = this.props;\r\n    if (!card) {\r\n      return <div>card is null</div>\r\n    }\r\n    // ---\r\n    return (<div className=\"card\">\r\n      <div className=\"card__title\">{card.title}</div>\r\n      <div className=\"card__link\">\r\n        <a\r\n          href={card.url}\r\n          onClick={this.handleLinkPress}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\">\r\n          {card.url}\r\n        </a>\r\n      </div>\r\n      <div>{card.comm}</div>\r\n      <div>{card.body}</div>\r\n      <div className=\"card__infos\">\r\n        <div>Число переходов: {card.trans_count}</div>\r\n        {DateFieldShow('Дата последнего перехода: ', card.trans_date_last)}\r\n        {DateFieldShow('Дата последнего показа: ', card.show_date_last)}\r\n      </div>\r\n    </div>);\r\n  }\r\n\r\n}\r\n","import cards from './cards.json';\r\nimport Record from 'airtable/lib/record';\r\nimport { MAirtable } from './airtable-api';\r\nimport { TpCard } from '../utils/app-utils';\r\n\r\nexport class Cards {\r\n  static allGet(): TpCard[] {\r\n    // @ts-ignore\r\n    return cards.cards.map(el => {\r\n      return el\r\n    })\r\n  }\r\n\r\n  static countAllGet(): number {\r\n    return cards.cards.length\r\n  }\r\n\r\n  static getByIndex(index: number): TpCard {\r\n    // @ts-ignore\r\n    return cards.cards[index]\r\n  }\r\n}\r\n\r\nexport class CardsB {\r\n  private FIELD_ID = 'id';\r\n  private FIELD_TID = 'tid';\r\n  private FIELD_TITLE = 'title';\r\n  private FIELD_URL = 'url';\r\n  private FIELD_COMM = 'comm';\r\n  private FIELD_BODY = 'body';\r\n  public static FIELD_TRANS_COUNT = 'trans_count';\r\n  // type - Date\r\n  public static FIELD_TRANS_DATE_LAST = 'trans_date_last';\r\n  public static FIELD_SHOW_DATE_LAST = 'show_date_last';\r\n\r\n  constructor(readonly records: Record[]) {\r\n  }\r\n\r\n  countAllGet(): number {\r\n    return this.records.length\r\n  }\r\n\r\n  // [[210222111416]]\r\n  getByIndex(index: number): TpCard {\r\n    const record = this.records[index]\r\n    return new TpCard(\r\n      record.get(this.FIELD_TITLE),\r\n      record.get(this.FIELD_URL),\r\n      record.get(this.FIELD_COMM),\r\n      record.get(this.FIELD_BODY),\r\n      record.get(this.FIELD_ID),\r\n      record.id,\r\n      record.get(CardsB.FIELD_TRANS_COUNT),\r\n      record.get(CardsB.FIELD_TRANS_DATE_LAST),\r\n      record.get(CardsB.FIELD_SHOW_DATE_LAST),\r\n    )\r\n  }\r\n\r\n  static async update(tid: string, card: TpCard) {\r\n    const fields = {\r\n      [CardsB.FIELD_TRANS_COUNT]: card.trans_count + 1,\r\n      [CardsB.FIELD_TRANS_DATE_LAST]: card.trans_date_last,\r\n      [CardsB.FIELD_SHOW_DATE_LAST]: card.show_date_last,\r\n    }\r\n    await MAirtable.recordUpdate(tid, fields)\r\n  }\r\n\r\n}\r\n","import { Component } from 'react';\r\nimport { Card } from '../Card';\r\nimport './styles.css'\r\nimport { CardsB } from '../../api/cards-api';\r\nimport dayjs from 'dayjs';\r\nimport { TpCard } from '../../utils/app-utils';\r\n\r\n\r\nexport class RandomCardViewer extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.cardHandleLinkClick.bind(this);\r\n  }\r\n\r\n  async cardHandleLinkClick(card: TpCard) {\r\n    const card0 = {\r\n      ...card,\r\n      [CardsB.FIELD_TRANS_DATE_LAST]: dayjs(Date.now()).format('YYYY-MM-DD')\r\n    }\r\n    await CardsB.update(card.tid || '', card0);\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"rc-viewer\">\r\n      <div>Показано: {this.props.countShowed} / {this.props.countAll}</div>\r\n      <button className=\"rc-viewer__button\" onClick={this.props.handleShow}>Show</button>\r\n      {\r\n        this.props.card ?\r\n          <div className=\"rc-viewer__card\">\r\n            <Card\r\n              card={this.props.card}\r\n              handleLinkClick={this.cardHandleLinkClick}\r\n            />\r\n          </div>\r\n          : null\r\n      }\r\n    </div>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport { RandomCardViewer } from '../RandomCardViewer';\r\nimport { CardsB } from '../../api/cards-api';\r\nimport dayjs from 'dayjs';\r\nimport { MAirtable } from '../../api/airtable-api';\r\nimport { LSApiKey, randomExcept, TpCard } from '../../utils/app-utils';\r\n\r\nexport class PageNews extends Component<any, any> {\r\n\r\n  private cardsB?: CardsB;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      card: null,\r\n      countShowed: 0,\r\n      countAll: 0,\r\n      showedIxs: [],\r\n      isLoading: true,\r\n      isApiKeySetted: false,\r\n      errorStr: ''\r\n    }\r\n  }\r\n\r\n  async handleShow() {\r\n    const rnd = randomExcept(this.state.countAll - 1, this.state.showedIxs);\r\n    if (rnd !== -1) {\r\n      const arr1 = [...this.state.showedIxs, rnd];\r\n      if (this.cardsB) {\r\n        const card: TpCard = this.cardsB.getByIndex(rnd);\r\n        this.setState({\r\n          card,\r\n          countShowed: this.state.countShowed + 1,\r\n          showedIxs: arr1\r\n        })\r\n        // ---\r\n        const card0 = {...card, [CardsB.FIELD_SHOW_DATE_LAST]: dayjs().format('YYYY-MM-DD')};\r\n        await CardsB.update(card.tid || '', card0);\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const apiKey = LSApiKey.apiKeyGet()\r\n    if (apiKey) {\r\n      try {\r\n        this.setState({isApiKeySetted: true});\r\n        // ---\r\n        // [[210222113321]]\r\n        const records = await MAirtable.recordsGet();\r\n        this.cardsB = new CardsB(records);\r\n        this.setState({\r\n          isLoading: false,\r\n          countAll: this.cardsB.countAllGet()\r\n        });\r\n      } catch (err: any) {\r\n        if (err.statusCode === 401 && err.message.includes('provide valid api key')) {\r\n          this.setState({errorStr: 'invalid Airtable API Key'})\r\n        } else {\r\n          throw new Error(err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {isApiKeySetted, isLoading, errorStr} = this.state;\r\n    // ---\r\n    return (\r\n      <div>{\r\n        errorStr ? <div className=\"app__error_string\">{errorStr}</div>\r\n          : isLoading ?\r\n          (<div>\r\n            {\r\n              isApiKeySetted ?\r\n                <div>Loading...</div> :\r\n                <div>please provide \"Airtable API Key\" at \"Settings\"</div>\r\n            }\r\n          </div>)\r\n          : <RandomCardViewer countAll={this.state.countAll} countShowed={this.state.countShowed}\r\n                              card={this.state.card}\r\n                              handleShow={() => this.handleShow()}/>\r\n      }\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n","export const UARW_CONF_AIRTABLE_DB_NAME = 'appL0eof6VFTiPyjm';\r\nexport const UARW_CONF_AIRTABLE_TABLE_NAME = 'main';\r\n// export const UARW_CONF_AIRTABLE_TABLE_NAME = 'main-test';\r\n\r\n// --- airtable fields\r\nexport enum UARW_COLUMN_NAME {\r\n  SCOPES = 'scopes',\r\n  SUBSCOPES = 'subscopes',\r\n  QUESTION = 'question',\r\n  ANSWER = 'answer',\r\n  PROGRESS = 'progress',\r\n  TID = 'tid',\r\n  ID = 'id',\r\n}\r\n\r\n// --- field \"progress\" values\r\nexport enum UARW_PROGRESSES {\r\n  P1 = '1',\r\n  P2 = '2',\r\n  P3 = '3',\r\n  P4 = '4',\r\n  P5 = '5'\r\n}\r\n","import { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\r\n\r\nexport function colination(arr: string[], sortByCount?: SortInfo): ValCount[] {\r\n  const ret: ValCount[] = [];\r\n  if (arr && arr.length > 0) {\r\n    arr.forEach(val => {\r\n      const currElem = ret.find(retEl => retEl.value === val)\r\n      if (!currElem) {\r\n        ret.push(new ValCount(val, 1))\r\n      } else {\r\n        currElem.count++\r\n      }\r\n    })\r\n    // ---\r\n    if (sortByCount && sortByCount.needSort) {\r\n      ret.sort((a, b) => {\r\n        if (sortByCount.ascending) {\r\n          return a.count - b.count\r\n        }\r\n        return b.count - a.count\r\n      })\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport class ValCount {\r\n  public count: number;\r\n\r\n  constructor(readonly value: string, count: number) {\r\n    this.count = count;\r\n  }\r\n\r\n  static asValLabels(valCounts: ValCount[]): ValLabel[] {\r\n    return valCounts.map(valCount => {\r\n      return new ValLabel(valCount.value, `${valCount.value} (${valCount.count})`)\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport class SortInfo {\r\n  constructor(readonly needSort: boolean = false, readonly ascending: boolean = true) {\r\n  }\r\n}\r\n\r\nexport class ValLabel {\r\n  constructor(readonly value: string, readonly label: string) {\r\n  }\r\n}\r\n\r\nexport function arrObjectsSortByStringProp(arrObjectsBack: object[], propName: string, ascending: boolean = true): void {\r\n  arrObjectsBack.sort((oj1, oj2) => {\r\n    // @ts-ignore\r\n    const v1 = oj1[propName];\r\n    // @ts-ignore\r\n    const v2 = oj2[propName];\r\n    if (v1 < v2) {\r\n      return ascending ? -1 : 1\r\n    }\r\n    if (v1 > v2) {\r\n      return ascending ? 1 : -1\r\n    }\r\n    return 0\r\n  })\r\n}\r\n\r\nexport function selectOptionToVusc(fieldName: string, option: { value: string } | { value: string }[] | null): string {\r\n  // --- values\r\n  const values = [];\r\n  let b51 = false;\r\n  if (option) {\r\n    if (Array.isArray(option)) {\r\n      option.forEach(el => {\r\n        values.push(el.value)\r\n        if (fieldName === UARW_COLUMN_NAME.PROGRESS && el.value === UARW_PROGRESSES.P1) {\r\n          b51 = true;\r\n        }\r\n      })\r\n    } else {\r\n      values.push(option.value)\r\n      if (fieldName === UARW_COLUMN_NAME.PROGRESS && option.value === UARW_PROGRESSES.P1) {\r\n        b51 = true;\r\n      }\r\n    }\r\n  }\r\n  // ---\r\n  const arr = values.map(val => `{${fieldName}} = '${val}'`)\r\n  if (b51) {\r\n    arr.push(`{${fieldName}} = ''`)\r\n  }\r\n  const stJoin = arr.join(', ')\r\n  return arr.length > 0 ? `OR(${stJoin})` : ''\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport './styles.scss';\r\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport { UARW_PROGRESSES } from '../../../../consts-uarw';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nclass Props {\r\n  vls: { value: string, label: string }[] = []\r\n  currValue: string = UARW_PROGRESSES.P1\r\n  onChange?: (val: string) => void = () => {\r\n  }\r\n  disable: boolean = false\r\n}\r\n\r\nclass State {\r\n\r\n}\r\n\r\nexport class ToggleProgresses extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"cls2255-container\">\r\n      <ToggleButtonGroup\r\n        name=\"value\"\r\n        type=\"radio\"\r\n        value={this.props.currValue}\r\n        onChange={this.props.onChange}\r\n        size=\"sm\"\r\n      >\r\n        {\r\n          this.props.vls.map((vl, index) => {\r\n            return <ToggleButton key={index} value={vl.value} disabled={this.props.disable}>\r\n              {vl.label}\r\n            </ToggleButton>\r\n          })\r\n        }\r\n      </ToggleButtonGroup>\r\n      <div className=\"cls2255-spinner\">\r\n        <ClipLoader loading={this.props.disable} size={16}/>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport './styles.scss';\r\nimport { QCardOj } from '../../../utils/uarw/uarw-logic';\r\nimport { ToggleProgresses } from './ToggleProgresses';\r\nimport {\r\n  UARW_PROGRESSES,\r\n} from '../../../consts-uarw';\r\n\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\nclass QCardProps {\r\n  qcard?: QCardOj\r\n  qcardProgressChange?: (qcardTid: string, newProgress: UARW_PROGRESSES) => Promise<boolean>\r\n}\r\n\r\nclass QCardState {\r\n  answerShowed: boolean = false\r\n  progressValue: string = UARW_PROGRESSES.P1\r\n  progressDisable: boolean = false\r\n}\r\n\r\nexport class QCard extends Component<QCardProps, QCardState> {\r\n  private vls: { value: string, label: string }[] = [\r\n    {value: UARW_PROGRESSES.P1, label: UARW_PROGRESSES.P1},\r\n    {value: UARW_PROGRESSES.P2, label: UARW_PROGRESSES.P2},\r\n    {value: UARW_PROGRESSES.P3, label: UARW_PROGRESSES.P3},\r\n    {value: UARW_PROGRESSES.P4, label: UARW_PROGRESSES.P4},\r\n    {value: UARW_PROGRESSES.P5, label: UARW_PROGRESSES.P5},\r\n  ];\r\n\r\n  constructor(props: QCardProps) {\r\n    super(props);\r\n    this.state = {\r\n      answerShowed: false,\r\n      progressValue: this.props.qcard?.progress || UARW_PROGRESSES.P1,\r\n      progressDisable: false\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({answerShowed: true})\r\n  }\r\n\r\n  progressesChange = async (val: string) => {\r\n    console.log(`!!-!!-!! -> :::::::::::::: progressesChange() {210301223647}:${Date.now()}`); // del+\r\n    if (this.props.qcardProgressChange) {\r\n      this.setState({progressDisable: true});\r\n      const res = await this.props.qcardProgressChange(this.props.qcard?.tid || '', val as UARW_PROGRESSES);\r\n      this.setState({progressDisable: false});\r\n      if (res) {\r\n        this.setState({progressValue: val})\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {qcard} = this.props;\r\n    console.log('!!-!!-!! qcard {220226182620}\\n', qcard) // del+\r\n    const {answerShowed} = this.state;\r\n    return (\r\n      <div className=\"qcard\">\r\n        <div className=\"qcard__1834\">\r\n          <div className=\"qcard__scope\">{qcard?.scope}</div>\r\n          {\r\n            !(qcard?.subscope && qcard.subscope.length > 0) ?\r\n              null :\r\n              qcard.subscope.map((el: any) => {\r\n                return (\r\n                  <div className=\"qcard__subscope\">{el}</div>\r\n                )\r\n              })\r\n          }\r\n        </div>\r\n        <ReactMarkdown className=\"qcard__question\">{qcard?.question}</ReactMarkdown>\r\n        <input className=\"qcard__button\" type=\"button\" value=\"show answer\" onClick={() => this.handleClick()}/>\r\n        {!answerShowed || <ReactMarkdown className=\"qcard__answer\">{this.props.qcard?.answer}</ReactMarkdown>}\r\n        <div className=\"toggle-progresses\">\r\n          <ToggleProgresses\r\n            vls={this.vls}\r\n            currValue={this.state.progressValue}\r\n            onChange={this.progressesChange}\r\n            disable={this.state.progressDisable}\r\n          />\r\n        </div>\r\n        {this.props.qcard?.errMsg && <div className=\"err-msg\">{this.props.qcard?.errMsg}</div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\r\nimport {\r\n  UARW_COLUMN_NAME,\r\n  UARW_CONF_AIRTABLE_DB_NAME,\r\n  UARW_CONF_AIRTABLE_TABLE_NAME,\r\n  UARW_PROGRESSES\r\n} from '../../consts-uarw';\r\nimport { arrObjectsSortByStringProp, colination, SortInfo, ValCount } from './uarw-utils';\r\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\r\nimport { HoggOffsetCount } from '../../api/hogg/utils/HoggOffsetCount';\r\nimport { HoggConnectionNT } from '../../api/hogg/interfaces/HoggConnectionNT';\r\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\r\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\r\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\r\nimport { LSApiKey } from '../app-utils';\r\n\r\nexport class UarwLogic {\r\n\r\n  private static connectionTableCreate(): HoggConnectionNT {\r\n    const connection = new HoggConnectionAirtable();\r\n    const apiKey = LSApiKey.apiKeyGet() || '';\r\n    connection.init({apiKey});\r\n    return connection\r\n      .db(UARW_CONF_AIRTABLE_DB_NAME)\r\n      .table(UARW_CONF_AIRTABLE_TABLE_NAME)\r\n  }\r\n\r\n  async qcardsGet(filterVusc: string): Promise<QCardOj[]> {\r\n    const data: HoggTupleNT[] = await UarwLogic.connectionTableCreate()\r\n      .filterVusc(filterVusc)\r\n      .query(new HoggOffsetCount(true))\r\n    const uarwTuples = new UarwTuples(data)\r\n    return uarwTuples.qcards\r\n  }\r\n\r\n  static async qcardProgressUpdate(cardTid: string, progress: UARW_PROGRESSES): Promise<HoggResult<boolean>> {\r\n    const conn = UarwLogic.connectionTableCreate();\r\n    const tuple = new BaseTuple()\r\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.TID, cardTid))\r\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.PROGRESS, progress))\r\n    const res = await conn.update([tuple])\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * получаем данные для фильтров \"область изучения\" и \"изученность\"\r\n   * @param filterVusc\r\n   */\r\n  async scopesAndProgressesGet(filterVusc: string = ''): Promise<{ scopes: ValCount[], progresses: ValCount[], countAll: number }> {\r\n    const tuples = await UarwLogic.connectionTableCreate()\r\n      .columns([\r\n        UARW_COLUMN_NAME.SCOPES,\r\n        UARW_COLUMN_NAME.PROGRESS,\r\n      ])\r\n      .filterVusc(filterVusc)\r\n      .query(new HoggOffsetCount(true))\r\n    // ---\r\n    const scopes: string[] = []\r\n    const progresses: string[] = []\r\n    tuples.forEach(tuple => {\r\n      let b19 = false;\r\n      tuple.cellsGet().forEach(cell => {\r\n        const columnName = cell.columnNameGet();\r\n        const value = cell.valueGet();\r\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\r\n          scopes.push(value)\r\n        }\r\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\r\n          progresses.push(value)\r\n          b19 = true\r\n        }\r\n      })\r\n      if (!b19) {\r\n        progresses.push(UARW_PROGRESSES.P1)\r\n      }\r\n    })\r\n    // ---\r\n    const scopesVC = colination(scopes, new SortInfo(false))\r\n    arrObjectsSortByStringProp(scopesVC, 'value', true)\r\n    const progressesVC = colination(progresses, new SortInfo(false))\r\n    arrObjectsSortByStringProp(progressesVC, 'value', true)\r\n    // ---\r\n    return {scopes: scopesVC, progresses: progressesVC, countAll: tuples.length}\r\n  }\r\n}\r\n\r\nexport class UarwTuples {\r\n  public qcards: QCardOj[];\r\n\r\n  constructor(readonly tuples: HoggTupleNT[]) {\r\n    this.qcards = QCardOj.createMulti(this.tuples)\r\n  }\r\n\r\n  scopesGet(): ValCount[] {\r\n    const scopes: string[] = [];\r\n    this.tuples.forEach(tuple => {\r\n      tuple.cellsGet().forEach(cell => {\r\n        const columnName = cell.columnNameGet()\r\n        const value = cell.valueGet()\r\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\r\n          scopes.push(value)\r\n        }\r\n      })\r\n    })\r\n    // ---\r\n    return colination(scopes, new SortInfo(true, false))\r\n  }\r\n\r\n  progressesGet(): ValCount[] {\r\n    const pgs: string[] = [];\r\n    this.tuples.forEach(tuple => {\r\n      tuple.cellsGet().forEach(cell => {\r\n        const columnName = cell.columnNameGet()\r\n        const value = cell.valueGet()\r\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\r\n          pgs.push(value)\r\n        }\r\n      })\r\n    })\r\n    // ---\r\n    const valCounts = colination(pgs);\r\n    arrObjectsSortByStringProp(valCounts, 'value', true);\r\n    return valCounts\r\n  }\r\n\r\n}\r\n\r\nexport class QCardOj {\r\n  question: string = ''\r\n  answer: string = ''\r\n  progress: string = ''\r\n  scope: string = ''\r\n  subscope: string[] = []\r\n  id: string = ''\r\n  tid: string = ''\r\n  errMsg: string = ''\r\n\r\n  static create(tuple: HoggTupleNT): QCardOj {\r\n    const cells = tuple.cellsGet()\r\n    const qcard = new QCardOj();\r\n    cells.forEach(cell => {\r\n      const columnName = cell.columnNameGet()\r\n      const value = cell.valueGet()\r\n      switch (columnName) {\r\n        case UARW_COLUMN_NAME.QUESTION:\r\n          qcard.question = value;\r\n          break;\r\n        case UARW_COLUMN_NAME.ANSWER:\r\n          qcard.answer = value;\r\n          break;\r\n        case UARW_COLUMN_NAME.PROGRESS:\r\n          qcard.progress = value;\r\n          break;\r\n        case UARW_COLUMN_NAME.SCOPES:\r\n          qcard.scope = value;\r\n          break;\r\n        case UARW_COLUMN_NAME.SUBSCOPES:\r\n          qcard.subscope = value as any;\r\n          break;\r\n        case UARW_COLUMN_NAME.TID:\r\n          qcard.tid = value;\r\n          break;\r\n        case UARW_COLUMN_NAME.ID:\r\n          qcard.id = value;\r\n          break;\r\n      }\r\n    })\r\n    if (!qcard.progress) {\r\n      qcard.progress = UARW_PROGRESSES.P1;\r\n    }\r\n    return qcard\r\n  }\r\n\r\n  static createMulti(tuples: HoggTupleNT[]): QCardOj[] {\r\n    return tuples.map(tuple => QCardOj.create(tuple))\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport './styles.scss';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { Names, Paths } from '../../../consts';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass State {\r\n\r\n}\r\n\r\nclass UarwNavbar extends Component<any, State> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  private onSelectHandle = (eventKey: string | null) => {\r\n    this.props.history.push(eventKey || '');\r\n  };\r\n\r\n  render() {\r\n    const {path} = this.props.match;\r\n    return <>\r\n      <Navbar>\r\n        <Navbar.Brand href={'#' + path}>UARW</Navbar.Brand>\r\n        <Nav onSelect={this.onSelectHandle}>\r\n          <Nav.Link eventKey={path}>Главная</Nav.Link>\r\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS}>{Names.nameGet(Paths.UARW_SETTINGS)}</Nav.Link>\r\n          <Nav.Link eventKey={path + Paths.UARW_ABOUT}>{Names.nameGet(Paths.UARW_ABOUT)}</Nav.Link>\r\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS_2}>Settings-2</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  }\r\n}\r\n\r\nexport default withRouter(UarwNavbar);\r\n","import './styles.scss';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function UarwSettings() {\r\n  const [count, setCount] = useState(0);\r\n  let history = useHistory();\r\n  console.log('!!-!!-!! history {210308225445}\\n', history); // del+\r\n\r\n  return (\r\n    <div>\r\n      <p>Вы кликнули {count} раз</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Нажми на меня\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport './styles.scss';\r\n\r\nclass Props {\r\n\r\n}\r\n\r\nclass State {\r\n\r\n}\r\n\r\nexport class UarwAbout extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <div>UarwAbout</div>\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default function BrPortalFCC({children}: any) {\r\n  const [$container] = useState(() => document.createElement('div'))\r\n\r\n  useEffect(() => {\r\n    document.body.appendChild($container)\r\n    return () => {\r\n      document.body.removeChild($container)\r\n    }\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(children, $container)\r\n}\r\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgQuestion(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12,2.25A9.75,9.75,0,1,0,21.75,12,9.761,9.761,0,0,0,12,2.25Zm0,18A8.25,8.25,0,1,1,20.25,12,8.259,8.259,0,0,1,12,20.25ZM15.691,9.326A3.647,3.647,0,0,1,13.9,13.107c-.941.625-1.146,1-1.191,1.133a.751.751,0,0,1-.711.51.766.766,0,0,1-.239-.039.751.751,0,0,1-.471-.951,4.094,4.094,0,0,1,1.782-1.9,2.153,2.153,0,0,0,1.142-2.273A2.251,2.251,0,0,0,9.75,10a.75.75,0,0,1-1.5,0,3.751,3.751,0,0,1,7.441-.674ZM13,17a1,1,0,1,1-1-1A1,1,0,0,1,13,17Z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestion);\nexport default __webpack_public_path__ + \"static/media/question.08e4c819.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * Отключает скролл всей страницы в зависимости от (1).\r\n * ПРИМЕНЕНИЕ: для диалогов и т.п.\r\n * ID [[220123125256]] rev 1 1.0.0 2022-01-23\r\n * GROUP [ueur]-copy-library\r\n * @param toFix (1) -- TRUE - скролл отключает, FALSE - скролл возвращает обратно\r\n * @return -- функция которой можно напрямую всключать/выключать скролл - TRUE чтобы вкючить, FALSE чтобы выключить\r\n */\r\nexport default function useScrollFix(toFix: boolean) {\r\n  const [$overflow, $overflowSet] = useState('');\r\n\r\n  const scrollFix = (isFix: boolean) => {\r\n    /**\r\n     * Если (2) is TRUE то отключаем скролл всей страницы, иначе наоборот включаем\r\n     * @param tagName\r\n     * @param isFix\r\n     */\r\n    const fnScrollFix = (tagName: string, isFix: boolean) => {\r\n      const node = document.getElementsByTagName(tagName)\r\n      const node0 = node.item(0)\r\n      const style = (node0 as any)?.style\r\n      if (style) {\r\n        if (isFix) {\r\n          // сохраняем существовавшее значение, чтобы его же потом и вернуть когда скролл снова нужно будет включить\r\n          $overflowSet(style.overflow)\r\n          style.overflow = 'hidden';\r\n        } else {\r\n          style.overflow = $overflow;\r\n        }\r\n      }\r\n    }\r\n\r\n    ['html', 'body'].forEach(el => fnScrollFix(el, isFix))\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollFix(toFix)\r\n  }, [toFix]);\r\n\r\n  return scrollFix;\r\n\r\n}\r\n","import { ReactNode } from 'react';\r\nimport BrPortalFCC from '../BrPortalFCC';\r\nimport './styles.scss';\r\nimport useScrollFix from '../useScrollFix';\r\n\r\ninterface Props {\r\n  children?: ReactNode | undefined\r\n  onClose: () => void\r\n  isOpened: boolean\r\n  overlayColor?: string\r\n}\r\n\r\n\r\nexport default function BrPopupFCC({\r\n                                     children,\r\n                                     onClose,\r\n                                     isOpened,\r\n                                     overlayColor = '#918C8C99'\r\n                                   }: Props) {\r\n  const scrollFix = useScrollFix(isOpened)\r\n\r\n  if (!isOpened) {\r\n    scrollFix(false)\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <BrPortalFCC>\r\n      <div className=\"br-popup\" role=\"dialog\">\r\n        <div\r\n          className=\"br-popup__overlay\"\r\n          tabIndex={0}\r\n          onClick={onClose}\r\n          role=\"button\"\r\n          style={{backgroundColor: overlayColor}}\r\n        />\r\n        <div className=\"br-popup__content\">{children}</div>\r\n      </div>\r\n    </BrPortalFCC>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader';\r\nimport { selectOptionToVusc, ValCount, ValLabel } from '../../utils/uarw/uarw-utils';\r\nimport ReactSelect from 'react-select';\r\nimport './styles.scss'\r\nimport { QCard } from './QCard';\r\nimport { QCardOj, UarwLogic, UarwTuples } from '../../utils/uarw/uarw-logic';\r\nimport { Button, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\r\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\r\nimport { Paths } from '../../consts';\r\nimport UarwNavbar from './UarwNavbar';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport { UarwSettings } from './UarwSettings';\r\nimport { UarwAbout } from './UarwAbout';\r\nimport BrPopupFCC from '../../utils/BrPopupFCC/BrPopupFCC';\r\nimport { ReactComponent as IconQuestion } from '../../assets/svgs/question.svg';\r\n\r\ninterface UarwState {\r\n  uarwTuples: UarwTuples | null,\r\n  loaded: boolean,\r\n  loadedScopes: boolean,\r\n  scopesSelectMode: boolean,\r\n  errStr: string,\r\n  selectScOptions: object[],\r\n  selectScSelectedOption: object | object[] | null,\r\n  selectPrOptions: object[],\r\n  selectPrSelectedOption: object | object[] | null,\r\n  qcards: QCardOj[],\r\n  countAll: number,\r\n  selectMode: number,\r\n  randomMode: number,\r\n  popupOpened: boolean,\r\n  $helpOpened: boolean,\r\n}\r\n\r\nenum SelectMode {\r\n  STRICT = 1,\r\n  FREE = 2\r\n}\r\n\r\nenum RandomMode {\r\n  /**\r\n   * Показать все карточки в случайном порядке\r\n   */\r\n  A = 1,\r\n  B\r\n}\r\n\r\nfunction fnOptionsRefresh(currSelectOption: object | object[] | null, newVL: ValLabel[]): object | object[] | null {\r\n  if (currSelectOption && newVL && newVL.length > 0) {\r\n    if (Array.isArray(currSelectOption)) {\r\n      return currSelectOption.map(el => {\r\n        // @ts-ignore\r\n        const np = newVL.find(nx => nx.value === el.value)\r\n        return np ? np : el\r\n      })\r\n    } else {\r\n      // @ts-ignore\r\n      const np = newVL.find(nx => nx.value === currSelectOption.value)\r\n      return np ? np : currSelectOption\r\n    }\r\n  }\r\n  return currSelectOption\r\n}\r\n\r\nclass PageUarw extends Component<any, UarwState> {\r\n  private uarwLogic?: UarwLogic;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      loadedScopes: false,\r\n      scopesSelectMode: true,\r\n      uarwTuples: null,\r\n      errStr: '',\r\n      selectScOptions: [],\r\n      selectScSelectedOption: null,\r\n      selectPrOptions: [],\r\n      selectPrSelectedOption: null,\r\n      qcards: [],\r\n      countAll: 0,\r\n      selectMode: SelectMode.STRICT,\r\n      randomMode: RandomMode.A,\r\n      popupOpened: false,\r\n      $helpOpened: false\r\n    }\r\n    this.selectScHandleChange = this.selectScHandleChange.bind(this);\r\n    this.selectPrHandleChange = this.selectPrHandleChange.bind(this);\r\n    this.handleShowCards = this.handleShowCards.bind(this);\r\n    this.selectModeChange = this.selectModeChange.bind(this);\r\n    this.helpCloseHandle = this.helpCloseHandle.bind(this);\r\n    this.questionClickHandle = this.questionClickHandle.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log('!!-!!-!! this.props {210308092038}\\n', this.props); // del+\r\n    this.setState({loaded: true});\r\n    this.uarwLogic = new UarwLogic();\r\n    await this.selectorsDataGetAndUpdate();\r\n  }\r\n\r\n  hadleQCardProgressChange = async (qcardTid: string, newProgress: UARW_PROGRESSES): Promise<boolean> => {\r\n    console.log(`!!-!!-!! -> :::::::::::::: hadleQCardProgressChange() {210302225851}:${Date.now()}`); // del+\r\n    // --- обновление прогресса *карточки на сервере\r\n    const hoggResult: HoggResult<boolean> = await UarwLogic.qcardProgressUpdate(qcardTid, newProgress)\r\n    console.log('!!-!!-!! hoggResult {210302225339}\\n', hoggResult); // del+\r\n    // ---\r\n    if (!hoggResult.value) {\r\n      const qcardWithErr = this.state.qcards.find(qcard => qcard.tid === qcardTid)\r\n      if (qcardWithErr) {\r\n        qcardWithErr.errMsg = JSON.stringify(hoggResult);\r\n        console.log('!!-!!-!! qcardWithErr {210303001137}\\n', qcardWithErr); // del+\r\n        this.setState({qcards: [...this.state.qcards]})\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Получение списка *скоупов и *прогрессов, в соответствии с выбранными в текущий момент *скоупами и *прогрессами\r\n   * @private\r\n   */\r\n  private async selectorsDataGetAndUpdate() {\r\n    if (this.uarwLogic) {\r\n      try {\r\n        this.setState({loadedScopes: false})\r\n        // ---\r\n        // получение текущих *скоупов/*прогрессов и формирование на их базе [vusc]-строки\r\n        const filterVusc = this.fnFilterVuscGet();\r\n        const {scopes, progresses, countAll} = await this.uarwLogic.scopesAndProgressesGet(filterVusc);\r\n        this.setState({loadedScopes: true, countAll});\r\n        // ---\r\n        const scopesVL: ValLabel[] = ValCount.asValLabels(scopes)\r\n        const progressesVL: ValLabel[] = ValCount.asValLabels(progresses)\r\n        // ---\r\n        const newSelectScSelectedOption = fnOptionsRefresh(this.state.selectScSelectedOption, scopesVL)\r\n        const newSelectPrSelectedOption = fnOptionsRefresh(this.state.selectPrSelectedOption, progressesVL)\r\n        const newState = {\r\n          selectScOptions: scopesVL,\r\n          selectScSelectedOption: newSelectScSelectedOption,\r\n          selectPrOptions: progressesVL,\r\n          selectPrSelectedOption: newSelectPrSelectedOption\r\n        };\r\n        this.setState(newState)\r\n      } catch (err: any) {\r\n        this.setState({errStr: err?.message})\r\n      }\r\n    }\r\n  }\r\n\r\n  async selectScHandleChange(selectedOption: any) {\r\n    this.setState({selectScSelectedOption: selectedOption, qcards: []}, async () => {\r\n      await this.selectHandleChange()\r\n    })\r\n  }\r\n\r\n  async selectPrHandleChange(selectedOption: any) {\r\n    this.setState({selectPrSelectedOption: selectedOption, qcards: []}, async () => {\r\n      await this.selectHandleChange()\r\n    })\r\n  }\r\n\r\n  async selectHandleChange() {\r\n    if (this.state.selectMode === SelectMode.STRICT) {\r\n      await this.selectorsDataGetAndUpdate();\r\n    }\r\n  }\r\n\r\n  async handleShowCards(random: boolean = false) {\r\n    try {\r\n      this.setState({loaded: false});\r\n      let filterVusc = this.fnFilterVuscGet();\r\n      const qcardOjs = await this.uarwLogic?.qcardsGet(filterVusc);\r\n      if (random) {\r\n        if (this.state.randomMode === RandomMode.A) {\r\n          qcardOjs?.sort(() => Math.random() - 0.5)\r\n        }\r\n        if (this.state.randomMode === RandomMode.B) {\r\n          alert('no realised!')\r\n        }\r\n      }\r\n      this.setState({\r\n        qcards: qcardOjs || [],\r\n        loaded: true,\r\n      })\r\n    } catch (err: any) {\r\n      this.setState({loaded: true, errStr: err?.message})\r\n    }\r\n  }\r\n\r\n  private fnFilterVuscGet() {\r\n    let filterScVusc = selectOptionToVusc(UARW_COLUMN_NAME.SCOPES, this.state.selectScSelectedOption as { value: string });\r\n    let filterPrVusc = selectOptionToVusc(UARW_COLUMN_NAME.PROGRESS, this.state.selectPrSelectedOption as { value: string });\r\n    if (filterScVusc && filterPrVusc) {\r\n      return `AND(${filterScVusc}, ${filterPrVusc})`\r\n    } else if (filterScVusc) {\r\n      return filterScVusc\r\n    } else {\r\n      return filterPrVusc\r\n    }\r\n  }\r\n\r\n  async selectModeChange(mode: SelectMode) {\r\n    this.setState({\r\n      selectMode: mode,\r\n      selectScSelectedOption: null,\r\n      selectPrSelectedOption: null,\r\n      qcards: []\r\n    }, () => {\r\n      if (mode === SelectMode.FREE) {\r\n        this.selectorsDataGetAndUpdate()\r\n      }\r\n    })\r\n  }\r\n\r\n  private fnRandomModeCommentGet() {\r\n    let text = '';\r\n    switch (this.state.randomMode) {\r\n      case RandomMode.A:\r\n        text = 'показ всех карточек, в случайном порядке'\r\n        break;\r\n      case RandomMode.B:\r\n        text = '-';\r\n        break;\r\n    }\r\n    return <div className=\"cls2121\">{text}</div>\r\n  }\r\n\r\n  randomModeChange = (mode: RandomMode) => {\r\n    this.setState({randomMode: mode})\r\n  }\r\n\r\n  async showRandomHandle() {\r\n    await this.handleShowCards(true)\r\n  }\r\n\r\n  helpCloseHandle() {\r\n    if (this.state.$helpOpened) {\r\n      this.setState({$helpOpened: false})\r\n    }\r\n  }\r\n\r\n  questionClickHandle() {\r\n    this.setState({$helpOpened: true})\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectScOptions,\r\n      selectScSelectedOption,\r\n      selectPrOptions,\r\n      selectPrSelectedOption,\r\n      qcards,\r\n      countAll\r\n    } = this.state;\r\n\r\n    return <div>\r\n      <UarwNavbar/>\r\n      <Switch>\r\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS_2} exact render={() => (<div>111-111</div>)}/>\r\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS} exact component={UarwSettings}/>\r\n        <Route path={Paths.UARW + Paths.UARW_ABOUT} exact component={UarwAbout}/>\r\n        <Route path={Paths.UARW} exact>\r\n          {this.state.errStr\r\n            ? <div>{this.state.errStr}</div>\r\n            :\r\n            <div className=\"uarw-container\">\r\n              <div className=\"cards-count\">\r\n                <div>Карточек: {countAll}</div>\r\n                <div><a href=\"https://airtable.com/appL0eof6VFTiPyjm/tbl7MTNBt99lPlJYJ/viwdPEO19Tpj54cc4?blocks=hide\"\r\n                        target=\"_blank\">airtable</a></div>\r\n              </div>\r\n              <Loader loaded={this.state.loadedScopes} position=\"relative\" top=\"30px\">\r\n                <button onClick={() => this.setState({popupOpened: true})}>test</button>\r\n                <div className=\"selects-container\">\r\n                  <ReactSelect\r\n                    className=\"select-scopes\"\r\n                    value={selectScSelectedOption}\r\n                    options={selectScOptions}\r\n                    onChange={this.selectScHandleChange}\r\n                    isMulti\r\n                    placeholder=\"область изучения\"\r\n                  />\r\n                  <ReactSelect\r\n                    className=\"select-progresses\"\r\n                    value={selectPrSelectedOption}\r\n                    options={selectPrOptions}\r\n                    onChange={this.selectPrHandleChange}\r\n                    isMulti\r\n                    placeholder=\"изученность\"\r\n                  />\r\n                  <div className=\"toggles\">\r\n                    <ToggleButtonGroup\r\n                      className=\"uarw-select-mode\"\r\n                      name=\"value\"\r\n                      type=\"radio\"\r\n                      value={this.state.selectMode}\r\n                      onChange={this.selectModeChange}\r\n                    >\r\n                      <ToggleButton value={SelectMode.STRICT} size=\"sm\">strict</ToggleButton>\r\n                      <ToggleButton value={SelectMode.FREE} size=\"sm\">free</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                    <div role=\"button\" className=\"uarw-icon mt-8-a\" onClick={this.questionClickHandle}>\r\n                      <IconQuestion/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"random-mode-container\">\r\n                  <div>random mode:</div>\r\n                  <ToggleButtonGroup\r\n                    className=\"random-mode-select\"\r\n                    name=\"value\"\r\n                    type=\"radio\"\r\n                    value={this.state.randomMode}\r\n                    onChange={this.randomModeChange}\r\n                  >\r\n                    <ToggleButton value={RandomMode.A} size=\"sm\">A</ToggleButton>\r\n                    <ToggleButton value={RandomMode.B} size=\"sm\">B</ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                  {this.fnRandomModeCommentGet()}\r\n                </div>\r\n                <div className=\"buttons\">\r\n                  <div className=\"show-random-btn\">\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={() => this.showRandomHandle()}\r\n                      disabled={this.state.randomMode === RandomMode.B}\r\n                    >show random</Button>\r\n                  </div>\r\n                  <div className=\"get-button\">\r\n                    <Button onClick={() => this.handleShowCards()} variant=\"success\" size=\"sm\">show all</Button>\r\n                  </div>\r\n                </div>\r\n              </Loader>\r\n              <Loader loaded={this.state.loaded} position='relative'>\r\n                <div className=\"qcards\">\r\n                  {\r\n                    qcards.map((qcard, index) => {\r\n                      return <QCard\r\n                        key={index}\r\n                        qcard={qcard}\r\n                        qcardProgressChange={this.hadleQCardProgressChange}\r\n                      />\r\n                    })\r\n                  }\r\n                </div>\r\n              </Loader>\r\n              <BrPopupFCC onClose={this.helpCloseHandle} isOpened={this.state.$helpOpened}>\r\n                <div className=\"cls1313\">\r\n                  <dl className=\"cls1313__1\">\r\n                    <dt><span className=\"cls1313__highlight\">strict</span></dt>\r\n                    <dd>в этом режиме, выпадающий список \"Изученность\" будет соответствовать тому что выбрано в\r\n                      выпадающем списке \"Область изучения\"\r\n                    </dd>\r\n                    <dt><span className=\"cls1313__highlight\">free</span></dt>\r\n                    <dd>в этом режиме, выпадающий список \"Изученность\" будет вести себя так будто в выпадающем списке\r\n                      \"Область изучения\" ничего не выбрано\r\n                    </dd>\r\n                  </dl>\r\n                  <button className=\"cls1313__btnclose\" onClick={this.helpCloseHandle}>закрыть</button>\r\n                </div>\r\n              </BrPopupFCC>\r\n            </div>\r\n          }\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(PageUarw);\r\n","import React from 'react';\r\nimport { Route, Router, Switch, withRouter } from 'react-router-dom';\r\nimport { Location as HLocation } from \"history\";\r\nimport { MAirtable } from './api/airtable-api';\r\nimport { Settings } from './components/Settings';\r\nimport { PageDebug } from './components/PageDebug';\r\nimport { PageNews } from './components/PageNews';\r\nimport PageUarw from './components/PageUarw';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport './App.scss';\r\nimport { MGXR_APP_REV, Names, Paths } from './consts';\r\n\r\nMAirtable.init();\r\n\r\n\r\ninterface State {\r\n  navEventKey: string | null,\r\n  navDropdownTitle: string,\r\n  navDropdownIsActive: boolean\r\n}\r\n\r\nclass App extends React.Component<any, State> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      navEventKey: Paths.MGXR,\r\n      navDropdownTitle: 'Другое',\r\n      navDropdownIsActive: false\r\n    }\r\n  }\r\n\r\n  locationHandleToNav(location: HLocation<unknown>) {\r\n    const findOj = Names.values.find(el => {\r\n      return el.link === location.pathname && el.group === 'dropdown-1';\r\n    });\r\n    this.setState({\r\n      navEventKey: location.pathname,\r\n      navDropdownTitle: findOj?.name || 'Другое',\r\n      navDropdownIsActive: !!findOj\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('!!-!!-!! this.props {210308091043}\\n', this.props); // del+\r\n    this.locationHandleToNav(this.props.history.location);\r\n    this.props.history.listen((location: HLocation<unknown>) => {\r\n      this.locationHandleToNav(location)\r\n    })\r\n  }\r\n\r\n  navSelectHandle = (eventKey: string | null) => {\r\n    this.props.history.push(eventKey || Paths.MGXR);\r\n  }\r\n\r\n  fnMain = () => {\r\n    return <div>\r\n      <div className=\"appRoutes\">\r\n        <Container fluid>\r\n          <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand href={Paths.MGXR}>MGXR</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav\r\n                variant=\"pills\"\r\n                className=\"mr-auto\"\r\n                defaultActiveKey={Paths.MGXR}\r\n                activeKey={this.state.navEventKey ?? undefined}\r\n                onSelect={this.navSelectHandle}\r\n              >\r\n                <Nav.Link eventKey={Paths.MGXR}>Главная</Nav.Link>\r\n                <Nav.Link eventKey={Paths.UARW}>\"Карточки\"</Nav.Link>\r\n                <Nav.Link eventKey={Paths.UARW2}>\"Карточки2\"</Nav.Link>\r\n                <Nav.Link eventKey={Paths.NEWS}>\"Новости\"</Nav.Link>\r\n                <Nav.Link eventKey={Paths.MGXR + Paths.SETTINGS}>Настройки</Nav.Link>\r\n                <NavDropdown\r\n                  id=\"elem1224\"\r\n                  title={this.state.navDropdownTitle}\r\n                  active={this.state.navDropdownIsActive}\r\n                >\r\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.DEBUG}>Debug</NavDropdown.Item>\r\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.SOME}>Some</NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </Container>\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Route path={Paths.MGXR}>\r\n          {this.fnMain()}\r\n        </Route>\r\n        <Route path={Paths.MGXR} exact>\r\n          <div>Проекты</div>\r\n          {Names.aTagGet(Paths.UARW)}\r\n          {Names.aTagGet(Paths.NEWS)}\r\n          <div>Версия приложения: {MGXR_APP_REV}</div>\r\n        </Route>\r\n        <Route path={Paths.MGXR + Paths.SETTINGS} exact>\r\n          <Settings/>\r\n        </Route>\r\n        <Route path={Paths.MGXR + Paths.DEBUG} exact>\r\n          <PageDebug/>\r\n        </Route>\r\n        <Route path={Paths.NEWS} exact>\r\n          {/* \"Новости\" */}\r\n          <PageNews/>\r\n        </Route>\r\n        <Route path={Paths.UARW}>\r\n          {/* \"Карточки\" */}\r\n          <PageUarw/>\r\n        </Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}