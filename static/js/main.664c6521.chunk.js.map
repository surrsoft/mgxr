{"version":3,"sources":["consts.tsx","utils/app-utils.tsx","api/airtable-api.ts","components/Settings/index.tsx","api/hogg/utils/HoggOffsetCount.ts","api/hogg/base-implements/BaseTuple.ts","api/hogg/base-implements/BaseCell.ts","api/hogg/utils/HoggResult.ts","api/hogg/connections/HoggConnectionAirtable.ts","components/PageDebug/index.tsx","components/Card/index.tsx","api/cards-api.ts","components/RandomCardViewer/index.tsx","consts-uarw.tsx","components/PageNews/index.tsx","utils/uarw/uarw-utils.ts","components/PageUarw/QCard/ToggleProgresses/index.tsx","components/PageUarw/QCard/index.tsx","utils/uarw/uarw-logic.ts","components/PageUarw/UarwNavbar/index.tsx","components/PageUarw/UarwSettings/index.tsx","components/PageUarw/UarwAbout/index.tsx","utils/BrPortalFCC.tsx","utils/useScrollFix.ts","utils/BrPopupFCC/BrPopupFCC.tsx","assets/svgs/question.svg","components/PageUarw/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paths","CONF_AIRTABLE_DB_NAME","CONF_AIRTABLE_TABLE_NAME","MGXR_LS_AIRTABLE_API_KEY","Names","path","className","href","nameGet","values","find","el","link","name","MGXR","UARW","UARW2","UARW_SETTINGS","UARW_ABOUT","NEWS","SETTINGS","DEBUG","group","SOME","LSApiKey","localStorage","getItem","apiKey","str","length","test","setItem","TpCard","title","url","comm","body","id","tid","trans_count","trans_date_last","show_date_last","randomExcept","ix","arrExcept","_","isEmpty","random","arr0","ix0","some","push","rnd","MAirtable","apiKeyGet","dc","Airtable","default_config","endpointUrl","configure","alert","maxRecords","Promise","resolve","reject","ret","selectCfg","base","select","eachPage","records","fetchNextPage","forEach","record","err","console","error","fields","updOj","update","Settings","props","textInput","state","isLoading","React","createRef","this","setState","val","current","value","apiKeySet","type","ref","defaultValue","onClick","handleSave","Component","HoggOffsetCount","getAll","offset","count","BaseTuple","cells","cell","BaseCell","columnName","HoggResult","code","HoggConnectionAirtable","dbName","columnNames","tableName","pFilterVusc","filter","offsetCount","a","pageSize","filterByFormula","counter","table","tup","convertRecord","options","Error","tuples","log","Date","now","updConfsGet","updConfs","isOk","message","createData","updConfsAtCreateGet","create","ids","destroy","cees","Object","entries","key","cee","tidCee","every","tuple","cellsGet","updConf","fieldName","columnNameGet","valueGet","PageDebug","connection","init","columns","query","cellAdd","delete","db","nx","DateFieldShow","dateSt","dayjs","diff","Card","handleLinkPress","bind","extend","relativeTime","isBetween","e","card","handleLinkClick","target","rel","CardsB","FIELD_ID","FIELD_TID","FIELD_TITLE","FIELD_URL","FIELD_COMM","FIELD_BODY","index","get","FIELD_TRANS_COUNT","FIELD_TRANS_DATE_LAST","FIELD_SHOW_DATE_LAST","recordUpdate","UARW_COLUMN_NAME","UARW_PROGRESSES","RandomCardViewer","cardHandleLinkClick","card0","format","countShowed","countAll","handleShow","PageNews","cardsB","showedIxs","isApiKeySetted","errorStr","arr1","getByIndex","recordsGet","countAllGet","statusCode","includes","colination","arr","sortByCount","currElem","retEl","ValCount","needSort","sort","b","ascending","valCounts","map","valCount","ValLabel","SortInfo","label","arrObjectsSortByStringProp","arrObjectsBack","propName","oj1","oj2","v1","v2","selectOptionToVusc","option","b51","Array","isArray","PROGRESS","P1","stJoin","join","ToggleProgresses","ToggleButtonGroup","currValue","onChange","size","vls","vl","ToggleButton","disabled","disable","loading","ReactMarkdown","require","QCard","P2","P3","P4","P5","progressesChange","qcardProgressChange","progressDisable","qcard","res","progressValue","answerShowed","progress","scope","subscope","question","handleClick","answer","errMsg","UarwLogic","filterVusc","connectionTableCreate","data","uarwTuples","UarwTuples","qcards","SCOPES","scopes","progresses","b19","scopesVC","progressesVC","cardTid","conn","TID","QCardOj","createMulti","pgs","QUESTION","ANSWER","SUBSCOPES","ID","UarwNavbar","onSelectHandle","eventKey","history","match","Navbar","Brand","Nav","onSelect","Link","UARW_SETTINGS_2","withRouter","UarwSettings","useState","setCount","useHistory","UarwAbout","BrPortalFCC","children","document","createElement","$container","useEffect","appendChild","removeChild","ReactDOM","createPortal","useScrollFix","toFix","$overflow","$overflowSet","scrollFix","isFix","tagName","node0","getElementsByTagName","item","style","overflow","fnScrollFix","BrPopupFCC","onClose","isOpened","overlayColor","role","tabIndex","backgroundColor","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgQuestion","_ref","svgRef","titleId","width","height","viewBox","xmlns","SelectMode","RandomMode","ForwardRef","fnOptionsRefresh","currSelectOption","newVL","np","PageUarw","uarwLogic","hadleQCardProgressChange","qcardTid","newProgress","qcardProgressUpdate","hoggResult","qcardWithErr","JSON","stringify","randomModeChange","mode","randomMode","loaded","loadedScopes","scopesSelectMode","errStr","selectScOptions","selectScSelectedOption","selectPrOptions","selectPrSelectedOption","selectMode","STRICT","A","popupOpened","$helpOpened","selectScHandleChange","selectPrHandleChange","handleShowCards","selectModeChange","helpCloseHandle","questionClickHandle","selectorsDataGetAndUpdate","fnFilterVuscGet","scopesAndProgressesGet","scopesVL","asValLabels","progressesVL","newSelectScSelectedOption","newSelectPrSelectedOption","newState","selectedOption","selectHandleChange","qcardsGet","qcardOjs","Math","B","filterScVusc","filterPrVusc","FREE","text","exact","render","component","position","top","isMulti","placeholder","fnRandomModeCommentGet","Button","variant","showRandomHandle","App","navSelectHandle","fnMain","Container","fluid","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","defaultActiveKey","activeKey","navEventKey","NavDropdown","navDropdownTitle","active","navDropdownIsActive","Item","location","findOj","pathname","locationHandleToNav","listen","aTagGet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.664c6521.chunk.js","sourcesContent":["export const MGXR_APP_REV = '10';\n\nexport const CONF_AIRTABLE_DB_NAME = 'appXv6ry7Vn262nGR';\nexport const CONF_AIRTABLE_TABLE_NAME = 'main';\n\nexport const MGXR_LS_AIRTABLE_API_KEY = 'mgxr_ls_airtable_api_key';\n\nexport enum Paths {\n  MGXR = '/mgxr',\n  UARW = '/uarw',\n  UARW2 = '/uarw2',\n  UARW_SETTINGS = '/uarw-settings',\n  UARW_SETTINGS_2 = '/uarw-settings-2',\n  UARW_ABOUT = '/uarw-about',\n  NEWS = '/news',\n  SETTINGS = '/settings',\n  DEBUG = '/debug',\n  SOME = '/some'\n}\n\nexport class Names {\n  static values = [\n    {link: Paths.MGXR, name: \"Главная\"},\n    {link: Paths.UARW, name: `\"Карточки\"`},\n    {link: Paths.UARW2, name: `\"Карточки2\"`},\n    {link: Paths.UARW_SETTINGS, name: `Настройки`},\n    {link: Paths.UARW_ABOUT, name: `О проекте`},\n    {link: Paths.NEWS, name: `\"Новости\"`},\n    {link: Paths.SETTINGS, name: `Настройки`},\n    {link: Paths.DEBUG, group: 'dropdown-1', name: `Debug`},\n    {link: Paths.SOME, group: 'dropdown-1', name: `Some`},\n  ]\n\n  static aTagGet(path: Paths) {\n    return <div className=\"cls2040\"><a href={path}>{Names.nameGet(path)}</a></div>\n  }\n\n  static nameGet(path: Paths): string {\n    return Names.values.find(el => el.link === path)?.name || 'text'\n  }\n}\n","import _ from 'lodash';\nimport { MGXR_LS_AIRTABLE_API_KEY } from '../consts';\n\nexport class LSApiKey {\n  static apiKeyGet(): string | null {\n    return localStorage.getItem(MGXR_LS_AIRTABLE_API_KEY)\n  }\n\n  static apiKeySet(apiKey?: string): boolean {\n    if (isEmptyOrWhitespaces(apiKey)) {\n      return false\n    } else if (apiKey) {\n      localStorage.setItem(MGXR_LS_AIRTABLE_API_KEY, apiKey);\n      return true\n    }\n    return false\n  }\n}\n\nexport class TpCard {\n  constructor(\n    readonly title?: string,\n    readonly url?: string,\n    readonly comm?: string,\n    readonly body?: string,\n    readonly id?: string,\n    readonly tid?: string,\n    readonly trans_count: number = 0,\n    readonly trans_date_last?: string,\n    readonly show_date_last?: string,\n  ) {\n  }\n}\n\nexport const tpCards = [\n  new TpCard('Российская газета', 'https://rg.ru'),\n  new TpCard('Коммерсант', 'https://www.kommersant.ru/'),\n  new TpCard('РИА Новости', 'https://ria.ru/')\n]\n\n/**\n * Возвращает случайное число в диапазоне 0 .. (1) включая 0 и (1), но отсутствующее в (2).\n * Если такого случайного числа найти невозможно (из-за того что в (2) уже все индексы есть), то возвращает -1\n *\n * ID [[210219210500]], rev.2 1.1 2021-02-19\n *\n * @param ix (1) -- например 3\n * @param arrExcept -- например [0, 1]\n * @return например может вернуть только 2 или 3\n */\nexport function randomExcept(ix: number, arrExcept: [number]): number {\n  if (_.isEmpty(arrExcept)) {\n    return _.random(ix);\n  }\n  const arr0 = [];\n  for (let ix0 = 0; ix0 <= ix; ix0++) {\n    const b0 = arrExcept.some(el => el === ix0);\n    if (!b0) {\n      arr0.push(ix0)\n    }\n  }\n  if (arr0.length > (ix + 1) || arr0.length === 0) {\n    return -1\n  }\n  const rnd = _.random(arr0.length - 1);\n  return arr0[rnd];\n}\n\n/**\n * ID [210217114100], rev.1.0 2021-02-17\n */\nexport function isEmptyOrWhitespaces(str?: string) {\n  return (!str || str.length === 0 || /^\\s*$/.test(str))\n}\n\nexport function utilPathGet(name?: string): string[] {\n  if (!name) {\n    return [\"/\", \"/mgxr\"]\n  }\n  return [`/${name}`, `/mgxr/${name}`]\n}\n\n","import Airtable from 'airtable';\nimport Record from 'airtable/lib/record';\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../consts';\nimport { LSApiKey } from '../utils/app-utils';\n\nexport class MAirtable {\n\n  static init() {\n    const apiKey = LSApiKey.apiKeyGet()\n    if (!apiKey) {\n      alert('please add \"Airtable API Key\" at \"Settings\"')\n    } else {\n      const dc = Airtable.default_config()\n      dc.apiKey = apiKey\n      dc.endpointUrl = 'https://api.airtable.com'\n      Airtable.configure(dc)\n    }\n  }\n\n  /**\n   *\n   * @param maxRecords -- максимальное количество записей которое нужно вернуть, задействуется если > 0\n   */\n  static async recordsGet(maxRecords: number = 0): Promise<Record[]> {\n    return new Promise((resolve, reject) => {\n      const ret: Record[] = [];\n      const selectCfg = {}\n      if (maxRecords > 0) {\n        // @ts-ignore\n        selectCfg.maxRecords = maxRecords\n      }\n      Airtable\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\n        .select(selectCfg)\n        .eachPage(\n          function page(records, fetchNextPage) {\n            records.forEach(function (record) {\n              ret.push(record)\n            });\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              reject(err)\n            }\n            resolve(ret)\n          }\n        )\n    });\n  }\n\n  static async recordUpdate(tid: string, fields: any) {\n    return new Promise((resolve, reject) => {\n      const updOj = {id: tid, fields}\n      Airtable\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\n        .update(\n          [updOj],\n          function (err: any, records: Record[] | undefined) {\n            if (err) {\n              reject(err);\n            }\n            resolve(records);\n          }\n        )\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './styles.css'\nimport { MGXR_APP_REV } from '../../consts';\nimport { LSApiKey } from '../../utils/app-utils';\n\nexport class Settings extends Component<any, any> {\n  private textInput: React.RefObject<HTMLInputElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      apiKey: '',\n      isLoading: true\n    }\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      apiKey: LSApiKey.apiKeyGet(),\n      isLoading: false\n    })\n  }\n\n  handleSave() {\n    const val = this.textInput.current?.value\n    if (LSApiKey.apiKeySet(val)) {\n      this.setState({apiKey: val})\n      alert('saved')\n    } else {\n      alert('invalid value')\n    }\n  }\n\n  render() {\n    const {apiKey, isLoading} = this.state;\n    return (<div className=\"app__settings\">\n      <div>Версия приложения: {MGXR_APP_REV}</div>\n      <div>\n        <label>Airtable API Key: </label>\n        {isLoading ? <span className=\"settings__loading\">Loading ...</span>\n          :\n          (<span>\n          <input className=\"settings__input\" type=\"text\" ref={this.textInput} defaultValue={apiKey}/>\n          <button className=\"settings__button\" onClick={() => this.handleSave()}>Save</button>\n        </span>)\n        }\n      </div>\n    </div>)\n  }\n}\n","export class HoggOffsetCount {\n  /**\n   *\n   * @param getAll (1) -- если TRUE, то это означает \"получить все записи\", тогда параметры (2), (3) должны\n   * игнорироваться\n   * @param offset (2) -- количество записей которые нужно пропустить\n   * набор\n   * @param count (3) -- количество записей которое нужно вернуть\n   */\n  constructor(\n    readonly getAll: boolean = false,\n    readonly offset: number = 0,\n    readonly count: number = 20\n  ) {\n  }\n}\n","import { HoggTupleNT } from '../interfaces/HoggTupleNT';\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\n\nexport class BaseTuple implements HoggTupleNT {\n  private cells: HoggCellNT[] = [];\n\n  create(cells: HoggCellNT[]): HoggTupleNT {\n    this.cells = cells;\n    return this;\n  }\n\n  cellsGet(): HoggCellNT[] {\n    return this.cells;\n  }\n\n  cellAdd(cell: HoggCellNT): HoggTupleNT {\n    this.cells.push(cell);\n    return this;\n  }\n\n}\n","import { HoggCellNT } from '../interfaces/HoggCellNT';\n\nexport class BaseCell implements HoggCellNT {\n  private columnName: string = '';\n  private value: string = '';\n\n  create(columnName: string, value: string): HoggCellNT {\n    this.columnName = columnName;\n    this.value = value;\n    return this;\n  }\n\n  columnNameGet(): string {\n    return this.columnName;\n  }\n\n  valueGet(): string {\n    return this.value;\n  }\n\n}\n","/**\n * Если value === TRUE то это означает успешный результат, иначе в code содержится код ошибки, а в comm - комментарий\n */\nexport class HoggResult<T> {\n  constructor(readonly value: T, readonly code: string = '', readonly comm: string = '') {\n  }\n}\n","import { HoggConnectionNT } from '../interfaces/HoggConnectionNT';\nimport { HoggTupleNT } from '../interfaces/HoggTupleNT';\nimport Airtable from 'airtable';\nimport Record from 'airtable/lib/record';\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\nimport { BaseTuple } from '../base-implements/BaseTuple';\nimport { BaseCell } from '../base-implements/BaseCell';\nimport { HoggOffsetCount } from '../utils/HoggOffsetCount';\nimport { HoggResult } from '../utils/HoggResult';\n\n\nexport class HoggConnectionAirtable implements HoggConnectionNT {\n\n  private dbName: string = '';\n  private columnNames: string[] = [];\n  private tableName: string = '';\n  // [vusc]\n  private pFilterVusc: string = '';\n\n  db(dbName: string): HoggConnectionNT {\n    this.dbName = dbName;\n    return this;\n  }\n\n  table(tableName: string): HoggConnectionNT {\n    this.tableName = tableName;\n    return this;\n  }\n\n  columns(columnNames: string[]): HoggConnectionNT {\n    this.columnNames = columnNames;\n    return this;\n  }\n\n  filterVusc(filter: string): HoggConnectionNT {\n    this.pFilterVusc = filter;\n    return this;\n  }\n\n  private static convertRecord(record: Record): HoggTupleNT {\n    const {fields} = record;\n    const cees: HoggCellNT[] = [];\n    for (const [key, value] of Object.entries(fields)) {\n      const cee: HoggCellNT = new BaseCell().create(key, value as string);\n      cees.push(cee);\n    }\n    const tidCee = new BaseCell().create('tid', record.id);\n    cees.push(tidCee);\n    return new BaseTuple().create(cees);\n  }\n\n  // TODO учесть columnNames\n  async query(offsetCount: HoggOffsetCount): Promise<HoggTupleNT[]> {\n    return new Promise((resolve, reject) => {\n      const ret: HoggTupleNT[] = [];\n      const selectCfg = {}\n      if (!offsetCount.getAll) {\n        const maxRecords = offsetCount.offset + offsetCount.count;\n        if (maxRecords > 0) {\n          // @ts-ignore\n          selectCfg.maxRecords = maxRecords;\n          // @ts-ignore\n          selectCfg.pageSize = maxRecords > 100 ? 100 : maxRecords;\n        }\n      }\n      if (this.columnNames && this.columnNames.length > 0) {\n        // @ts-ignore\n        selectCfg.fields = this.columnNames;\n      }\n      if (this.pFilterVusc) {\n        // @ts-ignore\n        selectCfg.filterByFormula = this.pFilterVusc;\n      }\n      let counter = 0;\n      Airtable\n        .base(this.dbName)\n        .table(this.tableName)\n        .select(selectCfg)\n        .eachPage(\n          function page(records, fetchNextPage) {\n            records.forEach(function (record) {\n              counter++;\n              if (counter > offsetCount.offset) {\n                const tup = HoggConnectionAirtable.convertRecord(record);\n                ret.push(tup)\n              }\n            });\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              reject(err)\n            }\n            resolve(ret)\n          }\n        )\n    });\n  }\n\n  init(options: { apiKey: string }): void {\n    const {apiKey} = options;\n    if (apiKey) {\n      const dc = Airtable.default_config()\n      dc.apiKey = apiKey\n      dc.endpointUrl = 'https://api.airtable.com'\n      Airtable.configure(dc)\n    } else {\n      throw new Error(`[hogg]: [[210223092909]] invalid apiKey [${apiKey}]`)\n    }\n  }\n\n  /**\n   * Среди ячеек в (1) должна быть ячейка с именем столбца 'tid'\n   * @param tuples\n   */\n  async update(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\n    console.log(`!!-!!-!! 2357-10 -> :::::::::::::: update() {210302235749}:${Date.now()}`); // del+\n    if (!(tuples && tuples.length > 0)) {\n      return new HoggResult<boolean>(false, '[[210223170254]]', 'tuples is empty')\n    } else {\n      // ---\n      const {updConfs, isOk} = updConfsGet(tuples);\n      // ---\n      if (!isOk) {\n        return new HoggResult(false, '[[210223191902]]', 'tid problem')\n      }\n      try {\n        return new Promise((resolve, reject) => {\n          Airtable\n            .base(this.dbName)\n            .table(this.tableName)\n            .update(updConfs, (err: any) => {\n              console.log('!!-!!-!! 2357-20 err {210302235801}\\n', err); // del+\n              if (err) {\n                resolve(new HoggResult(false, '[[210223202024]]', err.message))\n              } else {\n                resolve(new HoggResult<boolean>(true))\n              }\n            })\n        });\n      } catch (e) {\n        return new HoggResult<boolean>(false, '[[210223193709]]', e.message)\n      }\n    }\n  }\n\n  async create(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\n    if (!(tuples && tuples.length > 0)) {\n      return new HoggResult<boolean>(false, '[[210223170254-2]]', 'tuples is empty')\n    } else {\n      // ---\n      const createData = updConfsAtCreateGet(tuples);\n      // ---\n      try {\n        await Airtable\n          .base(this.dbName)\n          .table(this.tableName)\n          .create(createData, function (err: any) {\n            if (err) {\n              return new HoggResult(false, '[[210223202024-2]]', err.message)\n            }\n          })\n        return new HoggResult<boolean>(true)\n      } catch (e) {\n        return new HoggResult<boolean>(false, '[[210223193709-2]]', e.message)\n      }\n    }\n  }\n\n  async delete(ids: string[]): Promise<HoggResult<boolean>> {\n    await Airtable\n      .base(this.dbName)\n      .table(this.tableName)\n      .destroy(ids, function (err: any) {\n        if (err) {\n          return new HoggResult(false, '[[210223202024-3]]', err.message)\n        }\n      })\n    return new HoggResult(true)\n  }\n\n}\n\nfunction updConfsGet(tuples: HoggTupleNT[]) {\n  const updConfs: any[] = [];\n  const isOk = tuples.every(tuple => { // LOOP\n    const cells: HoggCellNT[] = tuple.cellsGet();\n    const updConf: any = {id: '', fields: {}}\n    cells.forEach(cell => { // LOOP-2\n      const fieldName = cell.columnNameGet()\n      if (fieldName === 'tid') {\n        updConf.id = cell.valueGet();\n      } else {\n        updConf.fields[fieldName] = cell.valueGet()\n      }\n    }) // LOOP-2\n    if (!updConf.id) {\n      return false; // stop loop\n    }\n    updConfs.push(updConf);\n    return true;\n  }) // LOOP\n  return {updConfs, isOk};\n}\n\nfunction updConfsAtCreateGet(tuples: HoggTupleNT[]) {\n  const updConfs: any[] = [];\n  tuples.forEach(tuple => { // LOOP\n    const cells: HoggCellNT[] = tuple.cellsGet();\n    const updConf: any = {fields: {}}\n    cells.forEach(cell => { // LOOP-2\n      const fieldName = cell.columnNameGet()\n      updConf.fields[fieldName] = cell.valueGet()\n    }) // LOOP-2\n    updConfs.push(updConf);\n    return true;\n  }) // LOOP\n  return updConfs;\n}\n","import { Component } from 'react';\nimport './styles.css';\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../../consts';\nimport { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\nimport { HoggOffsetCount } from '../../api/hogg/utils/HoggOffsetCount';\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\nimport { LSApiKey } from '../../utils/app-utils';\n\nexport class PageDebug extends Component<any, any> {\n  private connection?: HoggConnectionAirtable;\n\n  async query() {\n    const connection = new HoggConnectionAirtable();\n    connection.init({apiKey: LSApiKey.apiKeyGet() || ''})\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggTupleNT[] | undefined = await this.connection\n      ?.columns(['id'])\n      .query(new HoggOffsetCount(false, 0, 10));\n  }\n\n  async update() {\n    const tuple = new BaseTuple()\n      .cellAdd(new BaseCell().create('tid', 'rec04BflzOVX54PWs'))\n      .cellAdd(new BaseCell().create('comm', '1-1-3'))\n    // ---\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggResult<boolean> | undefined = await this.connection?.update([tuple])\n  }\n\n  async create() {\n    const tuples = [\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm')).cellAdd(new BaseCell().create('comm', '1-1-4')),\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm-2')).cellAdd(new BaseCell().create('comm', '1-1-5'))\n    ]\n    // ---\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggResult<boolean> | undefined = await this.connection?.create(tuples)\n  }\n\n  async delete() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res = await this.connection?.delete(['recgsvfjiB1rDtNP5', 'recNGoZaZe7pPfzOH'])\n  }\n\n  componentDidMount() {\n    this.connection = new HoggConnectionAirtable();\n    this.connection.init({apiKey: LSApiKey.apiKeyGet() || ''});\n    this.connection\n      .db(CONF_AIRTABLE_DB_NAME)\n      .table(CONF_AIRTABLE_TABLE_NAME);\n  }\n\n  nx() {\n    return (\n      <div>\n        <button onClick={() => this.query()}>Query</button>\n        <button onClick={() => this.update()}>Update</button>\n        <button onClick={() => this.create()}>Create</button>\n        <button onClick={() => this.delete()}>Delete</button>\n      </div>\n    )\n  }\n\n  render() {\n    return <div className=\"page_debug\">{\n      this.nx()\n    }</div>\n  }\n}\n","import { Component } from 'react';\nimport './card.css';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TpCard } from '../../utils/app-utils';\n\nexport interface CardProps {\n  card: TpCard,\n  handleLinkClick: (card: TpCard) => void\n}\n\nfunction DateFieldShow(name: string, dateSt?: string) {\n  return (<div>\n    {name}: {dateSt ?\n    (`${dateSt} (прошло дней: ${dayjs().diff(dateSt, 'day')})`)\n    : '-'}\n  </div>)\n}\n\nexport class Card extends Component<CardProps, any> {\n\n  constructor(props: CardProps) {\n    super(props);\n    this.handleLinkPress = this.handleLinkPress.bind(this);\n    dayjs.extend(relativeTime)\n    dayjs.extend(isBetween)\n  }\n\n  // @ts-ignore\n  async handleLinkPress(e) {\n    const {card, handleLinkClick} = this.props;\n    handleLinkClick(card);\n  }\n\n  render() {\n    const {card} = this.props;\n    if (!card) {\n      return <div>card is null</div>\n    }\n    // ---\n    return (<div className=\"card\">\n      <div className=\"card__title\">{card.title}</div>\n      <div className=\"card__link\">\n        <a\n          href={card.url}\n          onClick={this.handleLinkPress}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          {card.url}\n        </a>\n      </div>\n      <div>{card.comm}</div>\n      <div>{card.body}</div>\n      <div className=\"card__infos\">\n        <div>Число переходов: {card.trans_count}</div>\n        {DateFieldShow('Дата последнего перехода: ', card.trans_date_last)}\n        {DateFieldShow('Дата последнего показа: ', card.show_date_last)}\n      </div>\n    </div>);\n  }\n\n}\n","import cards from './cards.json';\nimport Record from 'airtable/lib/record';\nimport { MAirtable } from './airtable-api';\nimport { TpCard } from '../utils/app-utils';\n\nexport class Cards {\n  static allGet(): TpCard[] {\n    // @ts-ignore\n    return cards.cards.map(el => {\n      return el\n    })\n  }\n\n  static countAllGet(): number {\n    return cards.cards.length\n  }\n\n  static getByIndex(index: number): TpCard {\n    // @ts-ignore\n    return cards.cards[index]\n  }\n}\n\nexport class CardsB {\n  private FIELD_ID = 'id';\n  private FIELD_TID = 'tid';\n  private FIELD_TITLE = 'title';\n  private FIELD_URL = 'url';\n  private FIELD_COMM = 'comm';\n  private FIELD_BODY = 'body';\n  public static FIELD_TRANS_COUNT = 'trans_count';\n  // type - Date\n  public static FIELD_TRANS_DATE_LAST = 'trans_date_last';\n  public static FIELD_SHOW_DATE_LAST = 'show_date_last';\n\n  constructor(readonly records: Record[]) {\n  }\n\n  countAllGet(): number {\n    return this.records.length\n  }\n\n  // [[210222111416]]\n  getByIndex(index: number): TpCard {\n    const record = this.records[index]\n    return new TpCard(\n      record.get(this.FIELD_TITLE),\n      record.get(this.FIELD_URL),\n      record.get(this.FIELD_COMM),\n      record.get(this.FIELD_BODY),\n      record.get(this.FIELD_ID),\n      record.id,\n      record.get(CardsB.FIELD_TRANS_COUNT),\n      record.get(CardsB.FIELD_TRANS_DATE_LAST),\n      record.get(CardsB.FIELD_SHOW_DATE_LAST),\n    )\n  }\n\n  static async update(tid: string, card: TpCard) {\n    const fields = {\n      [CardsB.FIELD_TRANS_COUNT]: card.trans_count + 1,\n      [CardsB.FIELD_TRANS_DATE_LAST]: card.trans_date_last,\n      [CardsB.FIELD_SHOW_DATE_LAST]: card.show_date_last,\n    }\n    await MAirtable.recordUpdate(tid, fields)\n  }\n\n}\n","import { Component } from 'react';\nimport { Card } from '../Card';\nimport './styles.css'\nimport { CardsB } from '../../api/cards-api';\nimport dayjs from 'dayjs';\nimport { TpCard } from '../../utils/app-utils';\n\n\nexport class RandomCardViewer extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.cardHandleLinkClick.bind(this);\n  }\n\n  async cardHandleLinkClick(card: TpCard) {\n    const card0 = {\n      ...card,\n      [CardsB.FIELD_TRANS_DATE_LAST]: dayjs(Date.now()).format('YYYY-MM-DD')\n    }\n    await CardsB.update(card.tid || '', card0);\n  }\n\n  render() {\n    return (<div className=\"rc-viewer\">\n      <div>Показано: {this.props.countShowed} / {this.props.countAll}</div>\n      <button className=\"rc-viewer__button\" onClick={this.props.handleShow}>Show</button>\n      {\n        this.props.card ?\n          <div className=\"rc-viewer__card\">\n            <Card\n              card={this.props.card}\n              handleLinkClick={this.cardHandleLinkClick}\n            />\n          </div>\n          : null\n      }\n    </div>);\n  }\n}\n","export const UARW_CONF_AIRTABLE_DB_NAME = 'appL0eof6VFTiPyjm';\nexport const UARW_CONF_AIRTABLE_TABLE_NAME = 'main';\n// export const UARW_CONF_AIRTABLE_TABLE_NAME = 'main-test';\n\n// --- airtable fields\nexport enum UARW_COLUMN_NAME {\n  SCOPES = 'scopes',\n  SUBSCOPES = 'subscopes',\n  QUESTION = 'question',\n  ANSWER = 'answer',\n  PROGRESS = 'progress',\n  TID = 'tid',\n  ID = 'id',\n}\n\n// --- field \"progress\" values\nexport enum UARW_PROGRESSES {\n  P1 = '1',\n  P2 = '2',\n  P3 = '3',\n  P4 = '4',\n  P5 = '5'\n}\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { RandomCardViewer } from '../RandomCardViewer';\nimport { CardsB } from '../../api/cards-api';\nimport dayjs from 'dayjs';\nimport { MAirtable } from '../../api/airtable-api';\nimport { LSApiKey, randomExcept, TpCard } from '../../utils/app-utils';\n\nexport class PageNews extends Component<any, any> {\n\n  private cardsB?: CardsB;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      card: null,\n      countShowed: 0,\n      countAll: 0,\n      showedIxs: [],\n      isLoading: true,\n      isApiKeySetted: false,\n      errorStr: ''\n    }\n  }\n\n  async handleShow() {\n    const rnd = randomExcept(this.state.countAll - 1, this.state.showedIxs);\n    if (rnd !== -1) {\n      const arr1 = [...this.state.showedIxs, rnd];\n      if (this.cardsB) {\n        const card: TpCard = this.cardsB.getByIndex(rnd);\n        this.setState({\n          card,\n          countShowed: this.state.countShowed + 1,\n          showedIxs: arr1\n        })\n        // ---\n        const card0 = {...card, [CardsB.FIELD_SHOW_DATE_LAST]: dayjs().format('YYYY-MM-DD')};\n        await CardsB.update(card.tid || '', card0);\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const apiKey = LSApiKey.apiKeyGet()\n    if (apiKey) {\n      try {\n        this.setState({isApiKeySetted: true});\n        // ---\n        // [[210222113321]]\n        const records = await MAirtable.recordsGet();\n        this.cardsB = new CardsB(records);\n        this.setState({\n          isLoading: false,\n          countAll: this.cardsB.countAllGet()\n        });\n      } catch (err) {\n        if (err.statusCode === 401 && err.message.includes('provide valid api key')) {\n          this.setState({errorStr: 'invalid Airtable API Key'})\n        } else {\n          throw new Error(err);\n        }\n      }\n    }\n  }\n\n  render() {\n    const {isApiKeySetted, isLoading, errorStr} = this.state;\n    // ---\n    return (\n      <div>{\n        errorStr ? <div className=\"app__error_string\">{errorStr}</div>\n          : isLoading ?\n          (<div>\n            {\n              isApiKeySetted ?\n                <div>Loading...</div> :\n                <div>please provide \"Airtable API Key\" at \"Settings\"</div>\n            }\n          </div>)\n          : <RandomCardViewer countAll={this.state.countAll} countShowed={this.state.countShowed}\n                              card={this.state.card}\n                              handleShow={() => this.handleShow()}/>\n      }\n      </div>\n    )\n\n  }\n}\n","import { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\n\nexport function colination(arr: string[], sortByCount?: SortInfo): ValCount[] {\n  const ret: ValCount[] = [];\n  if (arr && arr.length > 0) {\n    arr.forEach(val => {\n      const currElem = ret.find(retEl => retEl.value === val)\n      if (!currElem) {\n        ret.push(new ValCount(val, 1))\n      } else {\n        currElem.count++\n      }\n    })\n    // ---\n    if (sortByCount && sortByCount.needSort) {\n      ret.sort((a, b) => {\n        if (sortByCount.ascending) {\n          return a.count - b.count\n        }\n        return b.count - a.count\n      })\n    }\n  }\n  return ret;\n}\n\nexport class ValCount {\n  public count: number;\n\n  constructor(readonly value: string, count: number) {\n    this.count = count;\n  }\n\n  static asValLabels(valCounts: ValCount[]): ValLabel[] {\n    return valCounts.map(valCount => {\n      return new ValLabel(valCount.value, `${valCount.value} (${valCount.count})`)\n    })\n  }\n\n}\n\nexport class SortInfo {\n  constructor(readonly needSort: boolean = false, readonly ascending: boolean = true) {\n  }\n}\n\nexport class ValLabel {\n  constructor(readonly value: string, readonly label: string) {\n  }\n}\n\nexport function arrObjectsSortByStringProp(arrObjectsBack: object[], propName: string, ascending: boolean = true): void {\n  arrObjectsBack.sort((oj1, oj2) => {\n    // @ts-ignore\n    const v1 = oj1[propName];\n    // @ts-ignore\n    const v2 = oj2[propName];\n    if (v1 < v2) {\n      return ascending ? -1 : 1\n    }\n    if (v1 > v2) {\n      return ascending ? 1 : -1\n    }\n    return 0\n  })\n}\n\nexport function selectOptionToVusc(fieldName: string, option: { value: string } | { value: string }[] | null): string {\n  // --- values\n  const values = [];\n  let b51 = false;\n  if (option) {\n    if (Array.isArray(option)) {\n      option.forEach(el => {\n        values.push(el.value)\n        if (fieldName === UARW_COLUMN_NAME.PROGRESS && el.value === UARW_PROGRESSES.P1) {\n          b51 = true;\n        }\n      })\n    } else {\n      values.push(option.value)\n      if (fieldName === UARW_COLUMN_NAME.PROGRESS && option.value === UARW_PROGRESSES.P1) {\n        b51 = true;\n      }\n    }\n  }\n  // ---\n  const arr = values.map(val => `{${fieldName}} = '${val}'`)\n  if (b51) {\n    arr.push(`{${fieldName}} = ''`)\n  }\n  const stJoin = arr.join(', ')\n  return arr.length > 0 ? `OR(${stJoin})` : ''\n}\n\n","import { Component } from 'react';\nimport './styles.scss';\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { UARW_PROGRESSES } from '../../../../consts-uarw';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass Props {\n  vls: { value: string, label: string }[] = []\n  currValue: string = UARW_PROGRESSES.P1\n  onChange?: (val: string) => void = () => {\n  }\n  disable: boolean = false\n}\n\nclass State {\n\n}\n\nexport class ToggleProgresses extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return <div className=\"cls2255-container\">\n      <ToggleButtonGroup\n        name=\"value\"\n        type=\"radio\"\n        value={this.props.currValue}\n        onChange={this.props.onChange}\n        size=\"sm\"\n      >\n        {\n          this.props.vls.map((vl, index) => {\n            return <ToggleButton key={index} value={vl.value} disabled={this.props.disable}>\n              {vl.label}\n            </ToggleButton>\n          })\n        }\n      </ToggleButtonGroup>\n      <div className=\"cls2255-spinner\">\n        <ClipLoader loading={this.props.disable} size={16}/>\n      </div>\n    </div>\n  }\n}\n","import { Component } from 'react';\nimport './styles.scss';\nimport { QCardOj } from '../../../utils/uarw/uarw-logic';\nimport { ToggleProgresses } from './ToggleProgresses';\nimport {\n  UARW_PROGRESSES,\n} from '../../../consts-uarw';\n\nconst ReactMarkdown = require('react-markdown');\n\nclass QCardProps {\n  qcard?: QCardOj\n  qcardProgressChange?: (qcardTid: string, newProgress: UARW_PROGRESSES) => Promise<boolean>\n}\n\nclass QCardState {\n  answerShowed: boolean = false\n  progressValue: string = UARW_PROGRESSES.P1\n  progressDisable: boolean = false\n}\n\nexport class QCard extends Component<QCardProps, QCardState> {\n  private vls: { value: string, label: string }[] = [\n    {value: UARW_PROGRESSES.P1, label: UARW_PROGRESSES.P1},\n    {value: UARW_PROGRESSES.P2, label: UARW_PROGRESSES.P2},\n    {value: UARW_PROGRESSES.P3, label: UARW_PROGRESSES.P3},\n    {value: UARW_PROGRESSES.P4, label: UARW_PROGRESSES.P4},\n    {value: UARW_PROGRESSES.P5, label: UARW_PROGRESSES.P5},\n  ];\n\n  constructor(props: QCardProps) {\n    super(props);\n    this.state = {\n      answerShowed: false,\n      progressValue: this.props.qcard?.progress || UARW_PROGRESSES.P1,\n      progressDisable: false\n    }\n  }\n\n  handleClick() {\n    this.setState({answerShowed: true})\n  }\n\n  progressesChange = async (val: string) => {\n    console.log(`!!-!!-!! -> :::::::::::::: progressesChange() {210301223647}:${Date.now()}`); // del+\n    if (this.props.qcardProgressChange) {\n      this.setState({progressDisable: true});\n      const res = await this.props.qcardProgressChange(this.props.qcard?.tid || '', val as UARW_PROGRESSES);\n      this.setState({progressDisable: false});\n      if (res) {\n        this.setState({progressValue: val})\n      }\n    }\n  }\n\n  render() {\n    const {qcard} = this.props;\n    console.log('!!-!!-!! qcard {220226182620}\\n', qcard) // del+\n    const {answerShowed} = this.state;\n    return (\n      <div className=\"qcard\">\n        <div className=\"qcard__1834\">\n          <div className=\"qcard__scope\">{qcard?.scope}</div>\n          {\n            !(qcard?.subscope && qcard.subscope.length > 0) ?\n              null :\n              qcard.subscope.map((el: any) => {\n                return (\n                  <div className=\"qcard__subscope\">{el}</div>\n                )\n              })\n          }\n        </div>\n        <ReactMarkdown className=\"qcard__question\">{qcard?.question}</ReactMarkdown>\n        <input className=\"qcard__button\" type=\"button\" value=\"show answer\" onClick={() => this.handleClick()}/>\n        {!answerShowed || <ReactMarkdown className=\"qcard__answer\">{this.props.qcard?.answer}</ReactMarkdown>}\n        <div className=\"toggle-progresses\">\n          <ToggleProgresses\n            vls={this.vls}\n            currValue={this.state.progressValue}\n            onChange={this.progressesChange}\n            disable={this.state.progressDisable}\n          />\n        </div>\n        {this.props.qcard?.errMsg && <div className=\"err-msg\">{this.props.qcard?.errMsg}</div>}\n      </div>\n    )\n  }\n}\n","import { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\nimport {\n  UARW_COLUMN_NAME,\n  UARW_CONF_AIRTABLE_DB_NAME,\n  UARW_CONF_AIRTABLE_TABLE_NAME,\n  UARW_PROGRESSES\n} from '../../consts-uarw';\nimport { arrObjectsSortByStringProp, colination, SortInfo, ValCount } from './uarw-utils';\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\nimport { HoggOffsetCount } from '../../api/hogg/utils/HoggOffsetCount';\nimport { HoggConnectionNT } from '../../api/hogg/interfaces/HoggConnectionNT';\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { LSApiKey } from '../app-utils';\n\nexport class UarwLogic {\n\n  private static connectionTableCreate(): HoggConnectionNT {\n    const connection = new HoggConnectionAirtable();\n    const apiKey = LSApiKey.apiKeyGet() || '';\n    connection.init({apiKey});\n    return connection\n      .db(UARW_CONF_AIRTABLE_DB_NAME)\n      .table(UARW_CONF_AIRTABLE_TABLE_NAME)\n  }\n\n  async qcardsGet(filterVusc: string): Promise<QCardOj[]> {\n    const data: HoggTupleNT[] = await UarwLogic.connectionTableCreate()\n      .filterVusc(filterVusc)\n      .query(new HoggOffsetCount(true))\n    const uarwTuples = new UarwTuples(data)\n    return uarwTuples.qcards\n  }\n\n  static async qcardProgressUpdate(cardTid: string, progress: UARW_PROGRESSES): Promise<HoggResult<boolean>> {\n    const conn = UarwLogic.connectionTableCreate();\n    const tuple = new BaseTuple()\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.TID, cardTid))\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.PROGRESS, progress))\n    const res = await conn.update([tuple])\n    return res;\n  }\n\n  /**\n   * получаем данные для фильтров \"область изучения\" и \"изученность\"\n   * @param filterVusc\n   */\n  async scopesAndProgressesGet(filterVusc: string = ''): Promise<{ scopes: ValCount[], progresses: ValCount[], countAll: number }> {\n    const tuples = await UarwLogic.connectionTableCreate()\n      .columns([\n        UARW_COLUMN_NAME.SCOPES,\n        UARW_COLUMN_NAME.PROGRESS,\n      ])\n      .filterVusc(filterVusc)\n      .query(new HoggOffsetCount(true))\n    // ---\n    const scopes: string[] = []\n    const progresses: string[] = []\n    tuples.forEach(tuple => {\n      let b19 = false;\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet();\n        const value = cell.valueGet();\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\n          scopes.push(value)\n        }\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\n          progresses.push(value)\n          b19 = true\n        }\n      })\n      if (!b19) {\n        progresses.push(UARW_PROGRESSES.P1)\n      }\n    })\n    // ---\n    const scopesVC = colination(scopes, new SortInfo(false))\n    arrObjectsSortByStringProp(scopesVC, 'value', true)\n    const progressesVC = colination(progresses, new SortInfo(false))\n    arrObjectsSortByStringProp(progressesVC, 'value', true)\n    // ---\n    return {scopes: scopesVC, progresses: progressesVC, countAll: tuples.length}\n  }\n}\n\nexport class UarwTuples {\n  public qcards: QCardOj[];\n\n  constructor(readonly tuples: HoggTupleNT[]) {\n    this.qcards = QCardOj.createMulti(this.tuples)\n  }\n\n  scopesGet(): ValCount[] {\n    const scopes: string[] = [];\n    this.tuples.forEach(tuple => {\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet()\n        const value = cell.valueGet()\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\n          scopes.push(value)\n        }\n      })\n    })\n    // ---\n    return colination(scopes, new SortInfo(true, false))\n  }\n\n  progressesGet(): ValCount[] {\n    const pgs: string[] = [];\n    this.tuples.forEach(tuple => {\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet()\n        const value = cell.valueGet()\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\n          pgs.push(value)\n        }\n      })\n    })\n    // ---\n    const valCounts = colination(pgs);\n    arrObjectsSortByStringProp(valCounts, 'value', true);\n    return valCounts\n  }\n\n}\n\nexport class QCardOj {\n  question: string = ''\n  answer: string = ''\n  progress: string = ''\n  scope: string = ''\n  subscope: string[] = []\n  id: string = ''\n  tid: string = ''\n  errMsg: string = ''\n\n  static create(tuple: HoggTupleNT): QCardOj {\n    const cells = tuple.cellsGet()\n    const qcard = new QCardOj();\n    cells.forEach(cell => {\n      const columnName = cell.columnNameGet()\n      const value = cell.valueGet()\n      switch (columnName) {\n        case UARW_COLUMN_NAME.QUESTION:\n          qcard.question = value;\n          break;\n        case UARW_COLUMN_NAME.ANSWER:\n          qcard.answer = value;\n          break;\n        case UARW_COLUMN_NAME.PROGRESS:\n          qcard.progress = value;\n          break;\n        case UARW_COLUMN_NAME.SCOPES:\n          qcard.scope = value;\n          break;\n        case UARW_COLUMN_NAME.SUBSCOPES:\n          qcard.subscope = value as any;\n          break;\n        case UARW_COLUMN_NAME.TID:\n          qcard.tid = value;\n          break;\n        case UARW_COLUMN_NAME.ID:\n          qcard.id = value;\n          break;\n      }\n    })\n    if (!qcard.progress) {\n      qcard.progress = UARW_PROGRESSES.P1;\n    }\n    return qcard\n  }\n\n  static createMulti(tuples: HoggTupleNT[]): QCardOj[] {\n    return tuples.map(tuple => QCardOj.create(tuple))\n  }\n}\n","import { Component } from 'react';\nimport './styles.scss';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Names, Paths } from '../../../consts';\nimport { withRouter } from 'react-router-dom';\n\nclass State {\n\n}\n\nclass UarwNavbar extends Component<any, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  private onSelectHandle = (eventKey: string | null) => {\n    this.props.history.push(eventKey || '');\n  };\n\n  render() {\n    const {path} = this.props.match;\n    return <>\n      <Navbar>\n        <Navbar.Brand href={'#' + path}>UARW</Navbar.Brand>\n        <Nav onSelect={this.onSelectHandle}>\n          <Nav.Link eventKey={path}>Главная</Nav.Link>\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS}>{Names.nameGet(Paths.UARW_SETTINGS)}</Nav.Link>\n          <Nav.Link eventKey={path + Paths.UARW_ABOUT}>{Names.nameGet(Paths.UARW_ABOUT)}</Nav.Link>\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS_2}>Settings-2</Nav.Link>\n        </Nav>\n      </Navbar>\n    </>\n  }\n}\n\nexport default withRouter(UarwNavbar);\n","import './styles.scss';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport function UarwSettings() {\n  const [count, setCount] = useState(0);\n  let history = useHistory();\n  console.log('!!-!!-!! history {210308225445}\\n', history); // del+\n\n  return (\n    <div>\n      <p>Вы кликнули {count} раз</p>\n      <button onClick={() => setCount(count + 1)}>\n        Нажми на меня\n      </button>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport './styles.scss';\n\nclass Props {\n\n}\n\nclass State {\n\n}\n\nexport class UarwAbout extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return <div>UarwAbout</div>\n  }\n}\n","import { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function BrPortalFCC({children}: any) {\n  const [$container] = useState(() => document.createElement('div'))\n\n  useEffect(() => {\n    document.body.appendChild($container)\n    return () => {\n      document.body.removeChild($container)\n    }\n  }, []);\n\n  return ReactDOM.createPortal(children, $container)\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * Отключает скролл всей страницы в зависимости от (1).\n * ПРИМЕНЕНИЕ: для диалогов и т.п.\n * ID [[220123125256]] rev 1 1.0.0 2022-01-23\n * GROUP [ueur]-copy-library\n * @param toFix (1) -- TRUE - скролл отключает, FALSE - скролл возвращает обратно\n * @return -- функция которой можно напрямую всключать/выключать скролл - TRUE чтобы вкючить, FALSE чтобы выключить\n */\nexport default function useScrollFix(toFix: boolean) {\n  const [$overflow, $overflowSet] = useState('');\n\n  const scrollFix = (isFix: boolean) => {\n    /**\n     * Если (2) is TRUE то отключаем скролл всей страницы, иначе наоборот включаем\n     * @param tagName\n     * @param isFix\n     */\n    const fnScrollFix = (tagName: string, isFix: boolean) => {\n      const node = document.getElementsByTagName(tagName)\n      const node0 = node.item(0)\n      const style = (node0 as any)?.style\n      if (style) {\n        if (isFix) {\n          // сохраняем существовавшее значение, чтобы его же потом и вернуть когда скролл снова нужно будет включить\n          $overflowSet(style.overflow)\n          style.overflow = 'hidden';\n        } else {\n          style.overflow = $overflow;\n        }\n      }\n    }\n\n    ['html', 'body'].forEach(el => fnScrollFix(el, isFix))\n  }\n\n  useEffect(() => {\n    scrollFix(toFix)\n  }, [toFix]);\n\n  return scrollFix;\n\n}\n","import { ReactNode } from 'react';\nimport BrPortalFCC from '../BrPortalFCC';\nimport './styles.scss';\nimport useScrollFix from '../useScrollFix';\n\ninterface Props {\n  children?: ReactNode | undefined\n  onClose: () => void\n  isOpened: boolean\n  overlayColor?: string\n}\n\n\nexport default function BrPopupFCC({\n                                     children,\n                                     onClose,\n                                     isOpened,\n                                     overlayColor = '#918C8C99'\n                                   }: Props) {\n  const scrollFix = useScrollFix(isOpened)\n\n  if (!isOpened) {\n    scrollFix(false)\n    return null;\n  }\n\n  return (\n    <BrPortalFCC>\n      <div className=\"br-popup\" role=\"dialog\">\n        <div\n          className=\"br-popup__overlay\"\n          tabIndex={0}\n          onClick={onClose}\n          role=\"button\"\n          style={{backgroundColor: overlayColor}}\n        />\n        <div className=\"br-popup__content\">{children}</div>\n      </div>\n    </BrPortalFCC>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12,2.25A9.75,9.75,0,1,0,21.75,12,9.761,9.761,0,0,0,12,2.25Zm0,18A8.25,8.25,0,1,1,20.25,12,8.259,8.259,0,0,1,12,20.25ZM15.691,9.326A3.647,3.647,0,0,1,13.9,13.107c-.941.625-1.146,1-1.191,1.133a.751.751,0,0,1-.711.51.766.766,0,0,1-.239-.039.751.751,0,0,1-.471-.951,4.094,4.094,0,0,1,1.782-1.9,2.153,2.153,0,0,0,1.142-2.273A2.251,2.251,0,0,0,9.75,10a.75.75,0,0,1-1.5,0,3.751,3.751,0,0,1,7.441-.674ZM13,17a1,1,0,1,1-1-1A1,1,0,0,1,13,17Z\"\n}));\n\nfunction SvgQuestion(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestion);\nexport default __webpack_public_path__ + \"static/media/question.166ff226.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport Loader from 'react-loader';\nimport { selectOptionToVusc, ValCount, ValLabel } from '../../utils/uarw/uarw-utils';\nimport ReactSelect from 'react-select';\nimport './styles.scss'\nimport { QCard } from './QCard';\nimport { QCardOj, UarwLogic, UarwTuples } from '../../utils/uarw/uarw-logic';\nimport { Button, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { Paths } from '../../consts';\nimport UarwNavbar from './UarwNavbar';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { UarwSettings } from './UarwSettings';\nimport { UarwAbout } from './UarwAbout';\nimport BrPopupFCC from '../../utils/BrPopupFCC/BrPopupFCC';\nimport { ReactComponent as IconQuestion } from '../../assets/svgs/question.svg';\n\ninterface UarwState {\n  uarwTuples: UarwTuples | null,\n  loaded: boolean,\n  loadedScopes: boolean,\n  scopesSelectMode: boolean,\n  errStr: string,\n  selectScOptions: object[],\n  selectScSelectedOption: object | object[] | null,\n  selectPrOptions: object[],\n  selectPrSelectedOption: object | object[] | null,\n  qcards: QCardOj[],\n  countAll: number,\n  selectMode: number,\n  randomMode: number,\n  popupOpened: boolean,\n  $helpOpened: boolean,\n}\n\nenum SelectMode {\n  STRICT = 1,\n  FREE = 2\n}\n\nenum RandomMode {\n  /**\n   * Показать все карточки в случайном порядке\n   */\n  A = 1,\n  B\n}\n\nfunction fnOptionsRefresh(currSelectOption: object | object[] | null, newVL: ValLabel[]): object | object[] | null {\n  if (currSelectOption && newVL && newVL.length > 0) {\n    if (Array.isArray(currSelectOption)) {\n      return currSelectOption.map(el => {\n        // @ts-ignore\n        const np = newVL.find(nx => nx.value === el.value)\n        return np ? np : el\n      })\n    } else {\n      // @ts-ignore\n      const np = newVL.find(nx => nx.value === currSelectOption.value)\n      return np ? np : currSelectOption\n    }\n  }\n  return currSelectOption\n}\n\nclass PageUarw extends Component<any, UarwState> {\n  private uarwLogic?: UarwLogic;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loadedScopes: false,\n      scopesSelectMode: true,\n      uarwTuples: null,\n      errStr: '',\n      selectScOptions: [],\n      selectScSelectedOption: null,\n      selectPrOptions: [],\n      selectPrSelectedOption: null,\n      qcards: [],\n      countAll: 0,\n      selectMode: SelectMode.STRICT,\n      randomMode: RandomMode.A,\n      popupOpened: false,\n      $helpOpened: false\n    }\n    this.selectScHandleChange = this.selectScHandleChange.bind(this);\n    this.selectPrHandleChange = this.selectPrHandleChange.bind(this);\n    this.handleShowCards = this.handleShowCards.bind(this);\n    this.selectModeChange = this.selectModeChange.bind(this);\n    this.helpCloseHandle = this.helpCloseHandle.bind(this);\n    this.questionClickHandle = this.questionClickHandle.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log('!!-!!-!! this.props {210308092038}\\n', this.props); // del+\n    this.setState({loaded: true});\n    this.uarwLogic = new UarwLogic();\n    await this.selectorsDataGetAndUpdate();\n  }\n\n  hadleQCardProgressChange = async (qcardTid: string, newProgress: UARW_PROGRESSES): Promise<boolean> => {\n    console.log(`!!-!!-!! -> :::::::::::::: hadleQCardProgressChange() {210302225851}:${Date.now()}`); // del+\n    // --- обновление прогресса *карточки на сервере\n    const hoggResult: HoggResult<boolean> = await UarwLogic.qcardProgressUpdate(qcardTid, newProgress)\n    console.log('!!-!!-!! hoggResult {210302225339}\\n', hoggResult); // del+\n    // ---\n    if (!hoggResult.value) {\n      const qcardWithErr = this.state.qcards.find(qcard => qcard.tid === qcardTid)\n      if (qcardWithErr) {\n        qcardWithErr.errMsg = JSON.stringify(hoggResult);\n        console.log('!!-!!-!! qcardWithErr {210303001137}\\n', qcardWithErr); // del+\n        this.setState({qcards: [...this.state.qcards]})\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Получение списка *скоупов и *прогрессов, в соответствии с выбранными в текущий момент *скоупами и *прогрессами\n   * @private\n   */\n  private async selectorsDataGetAndUpdate() {\n    if (this.uarwLogic) {\n      try {\n        this.setState({loadedScopes: false})\n        // ---\n        // получение текущих *скоупов/*прогрессов и формирование на их базе [vusc]-строки\n        const filterVusc = this.fnFilterVuscGet();\n        const {scopes, progresses, countAll} = await this.uarwLogic.scopesAndProgressesGet(filterVusc);\n        this.setState({loadedScopes: true, countAll});\n        // ---\n        const scopesVL: ValLabel[] = ValCount.asValLabels(scopes)\n        const progressesVL: ValLabel[] = ValCount.asValLabels(progresses)\n        // ---\n        const newSelectScSelectedOption = fnOptionsRefresh(this.state.selectScSelectedOption, scopesVL)\n        const newSelectPrSelectedOption = fnOptionsRefresh(this.state.selectPrSelectedOption, progressesVL)\n        const newState = {\n          selectScOptions: scopesVL,\n          selectScSelectedOption: newSelectScSelectedOption,\n          selectPrOptions: progressesVL,\n          selectPrSelectedOption: newSelectPrSelectedOption\n        };\n        this.setState(newState)\n      } catch (err) {\n        this.setState({errStr: err.message})\n      }\n    }\n  }\n\n  async selectScHandleChange(selectedOption: any) {\n    this.setState({selectScSelectedOption: selectedOption, qcards: []}, async () => {\n      await this.selectHandleChange()\n    })\n  }\n\n  async selectPrHandleChange(selectedOption: any) {\n    this.setState({selectPrSelectedOption: selectedOption, qcards: []}, async () => {\n      await this.selectHandleChange()\n    })\n  }\n\n  async selectHandleChange() {\n    if (this.state.selectMode === SelectMode.STRICT) {\n      await this.selectorsDataGetAndUpdate();\n    }\n  }\n\n  async handleShowCards(random: boolean = false) {\n    try {\n      this.setState({loaded: false});\n      let filterVusc = this.fnFilterVuscGet();\n      const qcardOjs = await this.uarwLogic?.qcardsGet(filterVusc);\n      if (random) {\n        if (this.state.randomMode === RandomMode.A) {\n          qcardOjs?.sort(() => Math.random() - 0.5)\n        }\n        if (this.state.randomMode === RandomMode.B) {\n          alert('no realised!')\n        }\n      }\n      this.setState({\n        qcards: qcardOjs || [],\n        loaded: true,\n      })\n    } catch (err) {\n      this.setState({loaded: true, errStr: err.message})\n    }\n  }\n\n  private fnFilterVuscGet() {\n    let filterScVusc = selectOptionToVusc(UARW_COLUMN_NAME.SCOPES, this.state.selectScSelectedOption as { value: string });\n    let filterPrVusc = selectOptionToVusc(UARW_COLUMN_NAME.PROGRESS, this.state.selectPrSelectedOption as { value: string });\n    if (filterScVusc && filterPrVusc) {\n      return `AND(${filterScVusc}, ${filterPrVusc})`\n    } else if (filterScVusc) {\n      return filterScVusc\n    } else {\n      return filterPrVusc\n    }\n  }\n\n  async selectModeChange(mode: SelectMode) {\n    this.setState({\n      selectMode: mode,\n      selectScSelectedOption: null,\n      selectPrSelectedOption: null,\n      qcards: []\n    }, () => {\n      if (mode === SelectMode.FREE) {\n        this.selectorsDataGetAndUpdate()\n      }\n    })\n  }\n\n  private fnRandomModeCommentGet() {\n    let text = '';\n    switch (this.state.randomMode) {\n      case RandomMode.A:\n        text = 'показ всех карточек, в случайном порядке'\n        break;\n      case RandomMode.B:\n        text = '-';\n        break;\n    }\n    return <div className=\"cls2121\">{text}</div>\n  }\n\n  randomModeChange = (mode: RandomMode) => {\n    this.setState({randomMode: mode})\n  }\n\n  async showRandomHandle() {\n    await this.handleShowCards(true)\n  }\n\n  helpCloseHandle() {\n    if (this.state.$helpOpened) {\n      this.setState({$helpOpened: false})\n    }\n  }\n\n  questionClickHandle() {\n    this.setState({$helpOpened: true})\n  }\n\n  render() {\n    const {\n      selectScOptions,\n      selectScSelectedOption,\n      selectPrOptions,\n      selectPrSelectedOption,\n      qcards,\n      countAll\n    } = this.state;\n\n    return <div>\n      <UarwNavbar/>\n      <Switch>\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS_2} exact render={() => (<div>111-111</div>)}/>\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS} exact component={UarwSettings}/>\n        <Route path={Paths.UARW + Paths.UARW_ABOUT} exact component={UarwAbout}/>\n        <Route path={Paths.UARW} exact>\n          {this.state.errStr\n            ? <div>{this.state.errStr}</div>\n            :\n            <div className=\"uarw-container\">\n              <div className=\"cards-count\">\n                <div>Карточек: {countAll}</div>\n                <div><a href=\"https://airtable.com/appL0eof6VFTiPyjm/tbl7MTNBt99lPlJYJ/viwdPEO19Tpj54cc4?blocks=hide\"\n                        target=\"_blank\">airtable</a></div>\n              </div>\n              <Loader loaded={this.state.loadedScopes} position=\"relative\" top=\"30px\">\n                <button onClick={() => this.setState({popupOpened: true})}>test</button>\n                <div className=\"selects-container\">\n                  <ReactSelect\n                    className=\"select-scopes\"\n                    value={selectScSelectedOption}\n                    options={selectScOptions}\n                    onChange={this.selectScHandleChange}\n                    isMulti\n                    placeholder=\"область изучения\"\n                  />\n                  <ReactSelect\n                    className=\"select-progresses\"\n                    value={selectPrSelectedOption}\n                    options={selectPrOptions}\n                    onChange={this.selectPrHandleChange}\n                    isMulti\n                    placeholder=\"изученность\"\n                  />\n                  <div className=\"toggles\">\n                    <ToggleButtonGroup\n                      className=\"uarw-select-mode\"\n                      name=\"value\"\n                      type=\"radio\"\n                      value={this.state.selectMode}\n                      onChange={this.selectModeChange}\n                    >\n                      <ToggleButton value={SelectMode.STRICT} size=\"sm\">strict</ToggleButton>\n                      <ToggleButton value={SelectMode.FREE} size=\"sm\">free</ToggleButton>\n                    </ToggleButtonGroup>\n                    <div role=\"button\" className=\"uarw-icon mt-8-a\" onClick={this.questionClickHandle}>\n                      <IconQuestion/>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"random-mode-container\">\n                  <div>random mode:</div>\n                  <ToggleButtonGroup\n                    className=\"random-mode-select\"\n                    name=\"value\"\n                    type=\"radio\"\n                    value={this.state.randomMode}\n                    onChange={this.randomModeChange}\n                  >\n                    <ToggleButton value={RandomMode.A} size=\"sm\">A</ToggleButton>\n                    <ToggleButton value={RandomMode.B} size=\"sm\">B</ToggleButton>\n                  </ToggleButtonGroup>\n                  {this.fnRandomModeCommentGet()}\n                </div>\n                <div className=\"buttons\">\n                  <div className=\"show-random-btn\">\n                    <Button\n                      variant=\"success\"\n                      size=\"sm\"\n                      onClick={() => this.showRandomHandle()}\n                      disabled={this.state.randomMode === RandomMode.B}\n                    >show random</Button>\n                  </div>\n                  <div className=\"get-button\">\n                    <Button onClick={() => this.handleShowCards()} variant=\"success\" size=\"sm\">show all</Button>\n                  </div>\n                </div>\n              </Loader>\n              <Loader loaded={this.state.loaded} position='relative'>\n                <div className=\"qcards\">\n                  {\n                    qcards.map((qcard, index) => {\n                      return <QCard\n                        key={index}\n                        qcard={qcard}\n                        qcardProgressChange={this.hadleQCardProgressChange}\n                      />\n                    })\n                  }\n                </div>\n              </Loader>\n              <BrPopupFCC onClose={this.helpCloseHandle} isOpened={this.state.$helpOpened}>\n                <div className=\"cls1313\">\n                  <dl className=\"cls1313__1\">\n                    <dt><span className=\"cls1313__highlight\">strict</span></dt>\n                    <dd>в этом режиме, выпадающий список \"Изученность\" будет соответствовать тому что выбрано в\n                      выпадающем списке \"Область изучения\"\n                    </dd>\n                    <dt><span className=\"cls1313__highlight\">free</span></dt>\n                    <dd>в этом режиме, выпадающий список \"Изученность\" будет вести себя так будто в выпадающем списке\n                      \"Область изучения\" ничего не выбрано\n                    </dd>\n                  </dl>\n                  <button className=\"cls1313__btnclose\" onClick={this.helpCloseHandle}>закрыть</button>\n                </div>\n              </BrPopupFCC>\n            </div>\n          }\n        </Route>\n      </Switch>\n    </div>\n  }\n\n}\n\nexport default withRouter(PageUarw);\n","import React from 'react';\nimport { Route, Router, Switch, withRouter } from 'react-router-dom';\nimport { Location as HLocation } from \"history\";\nimport { MAirtable } from './api/airtable-api';\nimport { Settings } from './components/Settings';\nimport { PageDebug } from './components/PageDebug';\nimport { PageNews } from './components/PageNews';\nimport PageUarw from './components/PageUarw';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport './App.scss';\nimport { MGXR_APP_REV, Names, Paths } from './consts';\n\nMAirtable.init();\n\n\ninterface State {\n  navEventKey: string | null,\n  navDropdownTitle: string,\n  navDropdownIsActive: boolean\n}\n\nclass App extends React.Component<any, State> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      navEventKey: Paths.MGXR,\n      navDropdownTitle: 'Другое',\n      navDropdownIsActive: false\n    }\n  }\n\n  locationHandleToNav(location: HLocation<unknown>) {\n    const findOj = Names.values.find(el => {\n      return el.link === location.pathname && el.group === 'dropdown-1';\n    });\n    this.setState({\n      navEventKey: location.pathname,\n      navDropdownTitle: findOj?.name || 'Другое',\n      navDropdownIsActive: !!findOj\n    })\n  }\n\n  componentDidMount() {\n    console.log('!!-!!-!! this.props {210308091043}\\n', this.props); // del+\n    this.locationHandleToNav(this.props.history.location);\n    this.props.history.listen((location: HLocation<unknown>) => {\n      this.locationHandleToNav(location)\n    })\n  }\n\n  navSelectHandle = (eventKey: string | null) => {\n    this.props.history.push(eventKey || Paths.MGXR);\n  }\n\n  fnMain = () => {\n    return <div>\n      <div className=\"appRoutes\">\n        <Container fluid>\n          <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\">\n            <Navbar.Brand href={Paths.MGXR}>MGXR</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav\n                variant=\"pills\"\n                className=\"mr-auto\"\n                defaultActiveKey={Paths.MGXR}\n                activeKey={this.state.navEventKey}\n                onSelect={this.navSelectHandle}\n              >\n                <Nav.Link eventKey={Paths.MGXR}>Главная</Nav.Link>\n                <Nav.Link eventKey={Paths.UARW}>\"Карточки\"</Nav.Link>\n                <Nav.Link eventKey={Paths.UARW2}>\"Карточки2\"</Nav.Link>\n                <Nav.Link eventKey={Paths.NEWS}>\"Новости\"</Nav.Link>\n                <Nav.Link eventKey={Paths.MGXR + Paths.SETTINGS}>Настройки</Nav.Link>\n                <NavDropdown\n                  id=\"elem1224\"\n                  title={this.state.navDropdownTitle}\n                  active={this.state.navDropdownIsActive}\n                >\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.DEBUG}>Debug</NavDropdown.Item>\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.SOME}>Some</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </Container>\n      </div>\n\n    </div>\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Route path={Paths.MGXR}>\n          {this.fnMain()}\n        </Route>\n        <Route path={Paths.MGXR} exact>\n          <div>Проекты</div>\n          {Names.aTagGet(Paths.UARW)}\n          {Names.aTagGet(Paths.NEWS)}\n          <div>Версия приложения: {MGXR_APP_REV}</div>\n        </Route>\n        <Route path={Paths.MGXR + Paths.SETTINGS} exact>\n          <Settings/>\n        </Route>\n        <Route path={Paths.MGXR + Paths.DEBUG} exact>\n          <PageDebug/>\n        </Route>\n        <Route path={Paths.NEWS} exact>\n          {/* \"Новости\" */}\n          <PageNews/>\n        </Route>\n        <Route path={Paths.UARW}>\n          {/* \"Карточки\" */}\n          <PageUarw/>\n        </Route>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}