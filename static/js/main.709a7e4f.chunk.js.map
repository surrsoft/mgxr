{"version":3,"sources":["consts.tsx","utils/app-utils.tsx","api/airtable-api.ts","components/Settings/index.tsx","api/hogg/connections/HoggOffsetCount.ts","api/hogg/base-implements/BaseTuple.ts","api/hogg/base-implements/BaseCell.ts","api/hogg/utils/HoggResult.ts","api/hogg/connections/HoggConnectionAirtable.ts","components/PageDebug/index.tsx","components/Card/index.tsx","api/cards-api.ts","components/RandomCardViewer/index.tsx","consts-uarw.tsx","components/PageNews/index.tsx","utils/uarw/uarw-utils.ts","components/PageUarw/index.tsx","components/PageUarw/QCard/ToggleProgresses/index.tsx","components/PageUarw/QCard/index.tsx","utils/uarw/uarw-logic.ts","components/PageUarw/UarwNavbar/index.tsx","components/PageUarw/UarwSettings/index.tsx","components/PageUarw/UarwAbout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paths","CONF_AIRTABLE_DB_NAME","CONF_AIRTABLE_TABLE_NAME","MGXR_LS_AIRTABLE_API_KEY","Names","path","className","href","nameGet","values","find","el","link","name","MGXR","UARW","UARW_SETTINGS","UARW_ABOUT","NEWS","SETTINGS","DEBUG","group","SOME","LSApiKey","localStorage","getItem","apiKey","str","length","test","setItem","TpCard","title","url","comm","body","id","tid","trans_count","trans_date_last","show_date_last","randomExcept","ix","arrExcept","_","isEmpty","random","arr0","ix0","some","push","rnd","MAirtable","apiKeyGet","dc","Airtable","default_config","endpointUrl","configure","alert","maxRecords","Promise","resolve","reject","ret","selectCfg","base","select","eachPage","records","fetchNextPage","forEach","record","err","console","error","fields","updOj","update","Settings","props","textInput","state","isLoading","React","createRef","this","setState","val","current","value","apiKeySet","type","ref","defaultValue","onClick","handleSave","Component","HoggOffsetCount","getAll","offset","count","BaseTuple","cells","cell","BaseCell","columnName","HoggResult","code","HoggConnectionAirtable","dbName","columnNames","tableName","pFilterVusc","filter","offsetCount","a","pageSize","filterByFormula","counter","table","tup","convertRecord","options","Error","tuples","log","Date","now","updConfsGet","updConfs","isOk","message","createData","updConfsAtCreateGet","create","ids","destroy","cees","Object","entries","key","cee","tidCee","every","tuple","cellsGet","updConf","fieldName","columnNameGet","valueGet","PageDebug","connection","init","columns","query","cellAdd","delete","db","nx","DateFieldShow","dateSt","dayjs","diff","Card","handleLinkPress","bind","extend","relativeTime","isBetween","e","card","handleLinkClick","target","rel","CardsB","FIELD_ID","FIELD_TID","FIELD_TITLE","FIELD_URL","FIELD_COMM","FIELD_BODY","index","get","FIELD_TRANS_COUNT","FIELD_TRANS_DATE_LAST","FIELD_SHOW_DATE_LAST","recordUpdate","UARW_COLUMN_NAME","UARW_PROGRESSES","RandomCardViewer","cardHandleLinkClick","card0","format","countShowed","countAll","handleShow","PageNews","cardsB","showedIxs","isApiKeySetted","errorStr","arr1","getByIndex","recordsGet","countAllGet","statusCode","includes","colination","arr","sortByCount","currElem","retEl","ValCount","needSort","sort","b","ascending","valCounts","map","valCount","ValLabel","SortInfo","label","arrObjectsSortByStringProp","arrObjectsBack","propName","oj1","oj2","v1","v2","selectOptionToVusc","option","b51","Array","isArray","PROGRESS","P1","stJoin","join","SelectMode","RandomMode","ToggleProgresses","ToggleButtonGroup","currValue","onChange","size","vls","vl","ToggleButton","disabled","disable","loading","ReactMarkdown","require","QCard","P2","P3","P4","P5","progressesChange","qcard","qcardProgressChange","progressDisable","res","progressValue","answerShowed","progress","scope","question","handleClick","answer","errMsg","UarwLogic","filterVusc","connectionTableCreate","data","uarwTuples","UarwTuples","qcards","SCOPES","scopes","progresses","b19","scopesVC","progressesVC","cardTid","conn","TID","QCardOj","createMulti","pgs","QUESTION","ANSWER","ID","UarwNavbar","onSelectHandle","eventKey","history","match","Navbar","Brand","Nav","onSelect","Link","UARW_SETTINGS_2","withRouter","UarwSettings","UarwAbout","fnOptionsRefresh","currSelectOption","newVL","np","PageUarw","uarwLogic","hadleQCardProgressChange","qcardTid","newProgress","qcardProgressUpdate","hoggResult","qcardWithErr","JSON","stringify","randomModeChange","mode","randomMode","loaded","loadedScopes","scopesSelectMode","errStr","selectScOptions","selectScSelectedOption","selectPrOptions","selectPrSelectedOption","selectMode","STRICT","A","selectScHandleChange","selectPrHandleChange","handleShowCards","selectModeChange","selectorsDataGetAndUpdate","fnFilterVuscGet","scopesAndProgressesGet","scopesVL","asValLabels","progressesVL","newSelectScSelectedOption","newSelectPrSelectedOption","newState","selectedOption","selectHandleChange","qcardsGet","qcardOjs","Math","B","filterScVusc","filterPrVusc","FREE","exact","render","component","position","top","isMulti","fnRandomModeCommentGet","Button","variant","showRandomHandle","text","App","navSelectHandle","fnMain","Container","fluid","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","defaultActiveKey","activeKey","navEventKey","NavDropdown","navDropdownTitle","active","navDropdownIsActive","Item","location","findOj","pathname","locationHandleToNav","listen","aTagGet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.709a7e4f.chunk.js","sourcesContent":["export const MGXR_APP_REV = '7';\n\nexport const CONF_AIRTABLE_DB_NAME = 'appXv6ry7Vn262nGR';\nexport const CONF_AIRTABLE_TABLE_NAME = 'main';\n\nexport const MGXR_LS_AIRTABLE_API_KEY = 'mgxr_ls_airtable_api_key';\n\nexport enum Paths {\n  MGXR = '/mgxr',\n  UARW = '/uarw',\n  UARW_SETTINGS = '/uarw-settings',\n  UARW_SETTINGS_2 = '/uarw-settings-2',\n  UARW_ABOUT = '/uarw-about',\n  NEWS = '/news',\n  SETTINGS = '/settings',\n  DEBUG = '/debug',\n  SOME = '/some'\n}\n\nexport class Names {\n  static values = [\n    {link: Paths.MGXR, name: \"Главная\"},\n    {link: Paths.UARW, name: `\"Карточки\"`},\n    {link: Paths.UARW_SETTINGS, name: `Настройки`},\n    {link: Paths.UARW_ABOUT, name: `О проекте`},\n    {link: Paths.NEWS, name: `\"Новости\"`},\n    {link: Paths.SETTINGS, name: `Настройки`},\n    {link: Paths.DEBUG, group: 'dropdown-1', name: `Debug`},\n    {link: Paths.SOME, group: 'dropdown-1', name: `Some`},\n  ]\n\n  static aTagGet(path: Paths) {\n    return <div className=\"cls2040\"><a href={path}>{Names.nameGet(path)}</a></div>\n  }\n\n  static nameGet(path: Paths): string {\n    return Names.values.find(el => el.link === path)?.name || 'text'\n  }\n}\n","import _ from 'lodash';\nimport { MGXR_LS_AIRTABLE_API_KEY } from '../consts';\n\nexport class LSApiKey {\n  static apiKeyGet(): string | null {\n    return localStorage.getItem(MGXR_LS_AIRTABLE_API_KEY)\n  }\n\n  static apiKeySet(apiKey?: string): boolean {\n    if (isEmptyOrWhitespaces(apiKey)) {\n      return false\n    } else if (apiKey) {\n      localStorage.setItem(MGXR_LS_AIRTABLE_API_KEY, apiKey);\n      return true\n    }\n    return false\n  }\n}\n\nexport class TpCard {\n  constructor(\n    readonly title?: string,\n    readonly url?: string,\n    readonly comm?: string,\n    readonly body?: string,\n    readonly id?: string,\n    readonly tid?: string,\n    readonly trans_count: number = 0,\n    readonly trans_date_last?: string,\n    readonly show_date_last?: string,\n  ) {\n  }\n}\n\nexport const tpCards = [\n  new TpCard('Российская газета', 'https://rg.ru'),\n  new TpCard('Коммерсант', 'https://www.kommersant.ru/'),\n  new TpCard('РИА Новости', 'https://ria.ru/')\n]\n\n/**\n * Возвращает случайное число в диапазоне 0 .. (1) включая 0 и (1), но отсутствующее в (2).\n * Если такого случайного числа найти невозможно (из-за того что в (2) уже все индексы есть), то возвращает -1\n *\n * ID [[210219210500]], rev.2 1.1 2021-02-19\n *\n * @param ix (1) -- например 3\n * @param arrExcept -- например [0, 1]\n * @return например может вернуть только 2 или 3\n */\nexport function randomExcept(ix: number, arrExcept: [number]): number {\n  if (_.isEmpty(arrExcept)) {\n    return _.random(ix);\n  }\n  const arr0 = [];\n  for (let ix0 = 0; ix0 <= ix; ix0++) {\n    const b0 = arrExcept.some(el => el === ix0);\n    if (!b0) {\n      arr0.push(ix0)\n    }\n  }\n  if (arr0.length > (ix + 1) || arr0.length === 0) {\n    return -1\n  }\n  const rnd = _.random(arr0.length - 1);\n  return arr0[rnd];\n}\n\n/**\n * ID [210217114100], rev.1.0 2021-02-17\n */\nexport function isEmptyOrWhitespaces(str?: string) {\n  return (!str || str.length === 0 || /^\\s*$/.test(str))\n}\n\nexport function utilPathGet(name?: string): string[] {\n  if (!name) {\n    return [\"/\", \"/mgxr\"]\n  }\n  return [`/${name}`, `/mgxr/${name}`]\n}\n\n","import Airtable from 'airtable';\nimport Record from 'airtable/lib/record';\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../consts';\nimport { LSApiKey } from '../utils/app-utils';\n\nexport class MAirtable {\n\n  static init() {\n    const apiKey = LSApiKey.apiKeyGet()\n    if (!apiKey) {\n      alert('please add \"Airtable API Key\" at \"Settings\"')\n    } else {\n      const dc = Airtable.default_config()\n      dc.apiKey = apiKey\n      dc.endpointUrl = 'https://api.airtable.com'\n      Airtable.configure(dc)\n    }\n  }\n\n  /**\n   *\n   * @param maxRecords -- максимальное количество записей которое нужно вернуть, задействуется если > 0\n   */\n  static async recordsGet(maxRecords: number = 0): Promise<Record[]> {\n    return new Promise((resolve, reject) => {\n      const ret: Record[] = [];\n      const selectCfg = {}\n      if (maxRecords > 0) {\n        // @ts-ignore\n        selectCfg.maxRecords = maxRecords\n      }\n      Airtable\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\n        .select(selectCfg)\n        .eachPage(\n          function page(records, fetchNextPage) {\n            records.forEach(function (record) {\n              ret.push(record)\n            });\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              reject(err)\n            }\n            resolve(ret)\n          }\n        )\n    });\n  }\n\n  static async recordUpdate(tid: string, fields: any) {\n    return new Promise((resolve, reject) => {\n      const updOj = {id: tid, fields}\n      Airtable\n        .base(CONF_AIRTABLE_DB_NAME)(CONF_AIRTABLE_TABLE_NAME)\n        .update(\n          [updOj],\n          function (err: any, records: Record[] | undefined) {\n            if (err) {\n              reject(err);\n            }\n            resolve(records);\n          }\n        )\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './styles.css'\nimport { MGXR_APP_REV } from '../../consts';\nimport { LSApiKey } from '../../utils/app-utils';\n\nexport class Settings extends Component<any, any> {\n  private textInput: React.RefObject<HTMLInputElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      apiKey: '',\n      isLoading: true\n    }\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      apiKey: LSApiKey.apiKeyGet(),\n      isLoading: false\n    })\n  }\n\n  handleSave() {\n    const val = this.textInput.current?.value\n    if (LSApiKey.apiKeySet(val)) {\n      this.setState({apiKey: val})\n      alert('saved')\n    } else {\n      alert('invalid value')\n    }\n  }\n\n  render() {\n    const {apiKey, isLoading} = this.state;\n    return (<div className=\"app__settings\">\n      <div>Версия приложения: {MGXR_APP_REV}</div>\n      <div>\n        <label>Airtable API Key: </label>\n        {isLoading ? <span className=\"settings__loading\">Loading ...</span>\n          :\n          (<span>\n          <input className=\"settings__input\" type=\"text\" ref={this.textInput} defaultValue={apiKey}/>\n          <button className=\"settings__button\" onClick={() => this.handleSave()}>Save</button>\n        </span>)\n        }\n      </div>\n    </div>)\n  }\n}\n","export class HoggOffsetCount {\n  /**\n   *\n   * @param getAll (1) -- если TRUE, то это означает \"получить все записи\", тогда параметры (2), (3) должны\n   * игнорироваться\n   * @param offset (2) -- количество записей которые нужно пропустить\n   * набор\n   * @param count (3) -- количество записей которое нужно вернуть\n   */\n  constructor(\n    readonly getAll: boolean = false,\n    readonly offset: number = 0,\n    readonly count: number = 20\n  ) {\n  }\n}\n","import { HoggTupleNT } from '../interfaces/HoggTupleNT';\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\n\nexport class BaseTuple implements HoggTupleNT {\n  private cells: HoggCellNT[] = [];\n\n  create(cells: HoggCellNT[]): HoggTupleNT {\n    this.cells = cells;\n    return this;\n  }\n\n  cellsGet(): HoggCellNT[] {\n    return this.cells;\n  }\n\n  cellAdd(cell: HoggCellNT): HoggTupleNT {\n    this.cells.push(cell);\n    return this;\n  }\n\n}\n","import { HoggCellNT } from '../interfaces/HoggCellNT';\n\nexport class BaseCell implements HoggCellNT {\n  private columnName: string = '';\n  private value: string = '';\n\n  create(columnName: string, value: string): HoggCellNT {\n    this.columnName = columnName;\n    this.value = value;\n    return this;\n  }\n\n  columnNameGet(): string {\n    return this.columnName;\n  }\n\n  valueGet(): string {\n    return this.value;\n  }\n\n}\n","/**\n * Если value === TRUE то это означает успешный результат, иначе в code содержится код ошибки, а в comm - комментарий\n */\nexport class HoggResult<T> {\n  constructor(readonly value: T, readonly code: string = '', readonly comm: string = '') {\n  }\n}\n","import { HoggConnectionNT } from '../interfaces/HoggConnectionNT';\nimport { HoggTupleNT } from '../interfaces/HoggTupleNT';\nimport Airtable from 'airtable';\nimport Record from 'airtable/lib/record';\nimport { HoggCellNT } from '../interfaces/HoggCellNT';\nimport { BaseTuple } from '../base-implements/BaseTuple';\nimport { BaseCell } from '../base-implements/BaseCell';\nimport { HoggOffsetCount } from './HoggOffsetCount';\nimport { HoggResult } from '../utils/HoggResult';\n\n\nexport class HoggConnectionAirtable implements HoggConnectionNT {\n\n  private dbName: string = '';\n  private columnNames: string[] = [];\n  private tableName: string = '';\n  // [vusc]\n  private pFilterVusc: string = '';\n\n  db(dbName: string): HoggConnectionNT {\n    this.dbName = dbName;\n    return this;\n  }\n\n  table(tableName: string): HoggConnectionNT {\n    this.tableName = tableName;\n    return this;\n  }\n\n  columns(columnNames: string[]): HoggConnectionNT {\n    this.columnNames = columnNames;\n    return this;\n  }\n\n  filterVusc(filter: string): HoggConnectionNT {\n    this.pFilterVusc = filter;\n    return this;\n  }\n\n  private static convertRecord(record: Record): HoggTupleNT {\n    const {fields} = record;\n    const cees: HoggCellNT[] = [];\n    for (const [key, value] of Object.entries(fields)) {\n      const cee: HoggCellNT = new BaseCell().create(key, value as string);\n      cees.push(cee);\n    }\n    const tidCee = new BaseCell().create('tid', record.id);\n    cees.push(tidCee);\n    return new BaseTuple().create(cees);\n  }\n\n  // TODO учесть columnNames\n  async query(offsetCount: HoggOffsetCount): Promise<HoggTupleNT[]> {\n    return new Promise((resolve, reject) => {\n      const ret: HoggTupleNT[] = [];\n      const selectCfg = {}\n      if (!offsetCount.getAll) {\n        const maxRecords = offsetCount.offset + offsetCount.count;\n        if (maxRecords > 0) {\n          // @ts-ignore\n          selectCfg.maxRecords = maxRecords;\n          // @ts-ignore\n          selectCfg.pageSize = maxRecords > 100 ? 100 : maxRecords;\n        }\n      }\n      if (this.columnNames && this.columnNames.length > 0) {\n        // @ts-ignore\n        selectCfg.fields = this.columnNames;\n      }\n      if (this.pFilterVusc) {\n        // @ts-ignore\n        selectCfg.filterByFormula = this.pFilterVusc;\n      }\n      let counter = 0;\n      Airtable\n        .base(this.dbName)\n        .table(this.tableName)\n        .select(selectCfg)\n        .eachPage(\n          function page(records, fetchNextPage) {\n            records.forEach(function (record) {\n              counter++;\n              if (counter > offsetCount.offset) {\n                const tup = HoggConnectionAirtable.convertRecord(record);\n                ret.push(tup)\n              }\n            });\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              reject(err)\n            }\n            resolve(ret)\n          }\n        )\n    });\n  }\n\n  init(options: { apiKey: string }): void {\n    const {apiKey} = options;\n    if (apiKey) {\n      const dc = Airtable.default_config()\n      dc.apiKey = apiKey\n      dc.endpointUrl = 'https://api.airtable.com'\n      Airtable.configure(dc)\n    } else {\n      throw new Error(`[hogg]: [[210223092909]] invalid apiKey [${apiKey}]`)\n    }\n  }\n\n  /**\n   * Среди ячеек в (1) должна быть ячейка с именем столбца 'tid'\n   * @param tuples\n   */\n  async update(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\n    console.log(`!!-!!-!! 2357-10 -> :::::::::::::: update() {210302235749}:${Date.now()}`); // del+\n    if (!(tuples && tuples.length > 0)) {\n      return new HoggResult<boolean>(false, '[[210223170254]]', 'tuples is empty')\n    } else {\n      // ---\n      const {updConfs, isOk} = updConfsGet(tuples);\n      // ---\n      if (!isOk) {\n        return new HoggResult(false, '[[210223191902]]', 'tid problem')\n      }\n      try {\n        return new Promise((resolve, reject) => {\n          Airtable\n            .base(this.dbName)\n            .table(this.tableName)\n            .update(updConfs, (err: any) => {\n              console.log('!!-!!-!! 2357-20 err {210302235801}\\n', err); // del+\n              if (err) {\n                resolve(new HoggResult(false, '[[210223202024]]', err.message))\n              } else {\n                resolve(new HoggResult<boolean>(true))\n              }\n            })\n        });\n      } catch (e) {\n        return new HoggResult<boolean>(false, '[[210223193709]]', e.message)\n      }\n    }\n  }\n\n  async create(tuples: HoggTupleNT[]): Promise<HoggResult<boolean>> {\n    if (!(tuples && tuples.length > 0)) {\n      return new HoggResult<boolean>(false, '[[210223170254-2]]', 'tuples is empty')\n    } else {\n      // ---\n      const createData = updConfsAtCreateGet(tuples);\n      // ---\n      try {\n        await Airtable\n          .base(this.dbName)\n          .table(this.tableName)\n          .create(createData, function (err: any) {\n            if (err) {\n              return new HoggResult(false, '[[210223202024-2]]', err.message)\n            }\n          })\n        return new HoggResult<boolean>(true)\n      } catch (e) {\n        return new HoggResult<boolean>(false, '[[210223193709-2]]', e.message)\n      }\n    }\n  }\n\n  async delete(ids: string[]): Promise<HoggResult<boolean>> {\n    await Airtable\n      .base(this.dbName)\n      .table(this.tableName)\n      .destroy(ids, function (err: any) {\n        if (err) {\n          return new HoggResult(false, '[[210223202024-3]]', err.message)\n        }\n      })\n    return new HoggResult(true)\n  }\n\n}\n\nfunction updConfsGet(tuples: HoggTupleNT[]) {\n  const updConfs: any[] = [];\n  const isOk = tuples.every(tuple => { // LOOP\n    const cells: HoggCellNT[] = tuple.cellsGet();\n    const updConf: any = {id: '', fields: {}}\n    cells.forEach(cell => { // LOOP-2\n      const fieldName = cell.columnNameGet()\n      if (fieldName === 'tid') {\n        updConf.id = cell.valueGet();\n      } else {\n        updConf.fields[fieldName] = cell.valueGet()\n      }\n    }) // LOOP-2\n    if (!updConf.id) {\n      return false; // stop loop\n    }\n    updConfs.push(updConf);\n    return true;\n  }) // LOOP\n  return {updConfs, isOk};\n}\n\nfunction updConfsAtCreateGet(tuples: HoggTupleNT[]) {\n  const updConfs: any[] = [];\n  tuples.forEach(tuple => { // LOOP\n    const cells: HoggCellNT[] = tuple.cellsGet();\n    const updConf: any = {fields: {}}\n    cells.forEach(cell => { // LOOP-2\n      const fieldName = cell.columnNameGet()\n      updConf.fields[fieldName] = cell.valueGet()\n    }) // LOOP-2\n    updConfs.push(updConf);\n    return true;\n  }) // LOOP\n  return updConfs;\n}\n","import { Component } from 'react';\nimport './styles.css';\nimport { CONF_AIRTABLE_DB_NAME, CONF_AIRTABLE_TABLE_NAME } from '../../consts';\nimport { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\nimport { HoggOffsetCount } from '../../api/hogg/connections/HoggOffsetCount';\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\nimport { LSApiKey } from '../../utils/app-utils';\n\nexport class PageDebug extends Component<any, any> {\n  private connection?: HoggConnectionAirtable;\n\n  async query() {\n    const connection = new HoggConnectionAirtable();\n    connection.init({apiKey: LSApiKey.apiKeyGet() || ''})\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggTupleNT[] | undefined = await this.connection\n      ?.columns(['id'])\n      .query(new HoggOffsetCount(false, 0, 10));\n  }\n\n  async update() {\n    const tuple = new BaseTuple()\n      .cellAdd(new BaseCell().create('tid', 'rec04BflzOVX54PWs'))\n      .cellAdd(new BaseCell().create('comm', '1-1-3'))\n    // ---\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggResult<boolean> | undefined = await this.connection?.update([tuple])\n  }\n\n  async create() {\n    const tuples = [\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm')).cellAdd(new BaseCell().create('comm', '1-1-4')),\n      new BaseTuple().cellAdd(new BaseCell().create('title', 'mmm-2')).cellAdd(new BaseCell().create('comm', '1-1-5'))\n    ]\n    // ---\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res: HoggResult<boolean> | undefined = await this.connection?.create(tuples)\n  }\n\n  async delete() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const res = await this.connection?.delete(['recgsvfjiB1rDtNP5', 'recNGoZaZe7pPfzOH'])\n  }\n\n  componentDidMount() {\n    this.connection = new HoggConnectionAirtable();\n    this.connection.init({apiKey: LSApiKey.apiKeyGet() || ''});\n    this.connection\n      .db(CONF_AIRTABLE_DB_NAME)\n      .table(CONF_AIRTABLE_TABLE_NAME);\n  }\n\n  nx() {\n    return (\n      <div>\n        <button onClick={() => this.query()}>Query</button>\n        <button onClick={() => this.update()}>Update</button>\n        <button onClick={() => this.create()}>Create</button>\n        <button onClick={() => this.delete()}>Delete</button>\n      </div>\n    )\n  }\n\n  render() {\n    return <div className=\"page_debug\">{\n      this.nx()\n    }</div>\n  }\n}\n","import { Component } from 'react';\nimport './card.css';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TpCard } from '../../utils/app-utils';\n\nexport interface CardProps {\n  card: TpCard,\n  handleLinkClick: (card: TpCard) => void\n}\n\nfunction DateFieldShow(name: string, dateSt?: string) {\n  return (<div>\n    {name}: {dateSt ?\n    (`${dateSt} (прошло дней: ${dayjs().diff(dateSt, 'day')})`)\n    : '-'}\n  </div>)\n}\n\nexport class Card extends Component<CardProps, any> {\n\n  constructor(props: CardProps) {\n    super(props);\n    this.handleLinkPress = this.handleLinkPress.bind(this);\n    dayjs.extend(relativeTime)\n    dayjs.extend(isBetween)\n  }\n\n  // @ts-ignore\n  async handleLinkPress(e) {\n    const {card, handleLinkClick} = this.props;\n    handleLinkClick(card);\n  }\n\n  render() {\n    const {card} = this.props;\n    if (!card) {\n      return <div>card is null</div>\n    }\n    // ---\n    return (<div className=\"card\">\n      <div className=\"card__title\">{card.title}</div>\n      <div className=\"card__link\">\n        <a\n          href={card.url}\n          onClick={this.handleLinkPress}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          {card.url}\n        </a>\n      </div>\n      <div>{card.comm}</div>\n      <div>{card.body}</div>\n      <div className=\"card__infos\">\n        <div>Число переходов: {card.trans_count}</div>\n        {DateFieldShow('Дата последнего перехода: ', card.trans_date_last)}\n        {DateFieldShow('Дата последнего показа: ', card.show_date_last)}\n      </div>\n    </div>);\n  }\n\n}\n","import cards from './cards.json';\nimport Record from 'airtable/lib/record';\nimport { MAirtable } from './airtable-api';\nimport { TpCard } from '../utils/app-utils';\n\nexport class Cards {\n  static allGet(): TpCard[] {\n    // @ts-ignore\n    return cards.cards.map(el => {\n      return el\n    })\n  }\n\n  static countAllGet(): number {\n    return cards.cards.length\n  }\n\n  static getByIndex(index: number): TpCard {\n    // @ts-ignore\n    return cards.cards[index]\n  }\n}\n\nexport class CardsB {\n  private FIELD_ID = 'id';\n  private FIELD_TID = 'tid';\n  private FIELD_TITLE = 'title';\n  private FIELD_URL = 'url';\n  private FIELD_COMM = 'comm';\n  private FIELD_BODY = 'body';\n  public static FIELD_TRANS_COUNT = 'trans_count';\n  // type - Date\n  public static FIELD_TRANS_DATE_LAST = 'trans_date_last';\n  public static FIELD_SHOW_DATE_LAST = 'show_date_last';\n\n  constructor(readonly records: Record[]) {\n  }\n\n  countAllGet(): number {\n    return this.records.length\n  }\n\n  // [[210222111416]]\n  getByIndex(index: number): TpCard {\n    const record = this.records[index]\n    return new TpCard(\n      record.get(this.FIELD_TITLE),\n      record.get(this.FIELD_URL),\n      record.get(this.FIELD_COMM),\n      record.get(this.FIELD_BODY),\n      record.get(this.FIELD_ID),\n      record.id,\n      record.get(CardsB.FIELD_TRANS_COUNT),\n      record.get(CardsB.FIELD_TRANS_DATE_LAST),\n      record.get(CardsB.FIELD_SHOW_DATE_LAST),\n    )\n  }\n\n  static async update(tid: string, card: TpCard) {\n    const fields = {\n      [CardsB.FIELD_TRANS_COUNT]: card.trans_count + 1,\n      [CardsB.FIELD_TRANS_DATE_LAST]: card.trans_date_last,\n      [CardsB.FIELD_SHOW_DATE_LAST]: card.show_date_last,\n    }\n    await MAirtable.recordUpdate(tid, fields)\n  }\n\n}\n","import { Component } from 'react';\nimport { Card } from '../Card';\nimport './styles.css'\nimport { CardsB } from '../../api/cards-api';\nimport dayjs from 'dayjs';\nimport { TpCard } from '../../utils/app-utils';\n\n\nexport class RandomCardViewer extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.cardHandleLinkClick.bind(this);\n  }\n\n  async cardHandleLinkClick(card: TpCard) {\n    const card0 = {\n      ...card,\n      [CardsB.FIELD_TRANS_DATE_LAST]: dayjs(Date.now()).format('YYYY-MM-DD')\n    }\n    await CardsB.update(card.tid || '', card0);\n  }\n\n  render() {\n    return (<div className=\"rc-viewer\">\n      <div>Показано: {this.props.countShowed} / {this.props.countAll}</div>\n      <button className=\"rc-viewer__button\" onClick={this.props.handleShow}>Show</button>\n      {\n        this.props.card ?\n          <div className=\"rc-viewer__card\">\n            <Card\n              card={this.props.card}\n              handleLinkClick={this.cardHandleLinkClick}\n            />\n          </div>\n          : null\n      }\n    </div>);\n  }\n}\n","export const UARW_CONF_AIRTABLE_DB_NAME = 'appL0eof6VFTiPyjm';\nexport const UARW_CONF_AIRTABLE_TABLE_NAME = 'main';\n// export const UARW_CONF_AIRTABLE_TABLE_NAME = 'main-test';\n\n// --- airtable fields\nexport enum UARW_COLUMN_NAME {\n  SCOPES = 'scopes',\n  QUESTION = 'question',\n  ANSWER = 'answer',\n  PROGRESS = 'progress',\n  TID = 'tid',\n  ID = 'id',\n}\n\n// --- field \"progress\" values\nexport enum UARW_PROGRESSES {\n  P1 = '1',\n  P2 = '2',\n  P3 = '3',\n  P4 = '4',\n  P5 = '5'\n}\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { RandomCardViewer } from '../RandomCardViewer';\nimport { CardsB } from '../../api/cards-api';\nimport dayjs from 'dayjs';\nimport { MAirtable } from '../../api/airtable-api';\nimport { LSApiKey, randomExcept, TpCard } from '../../utils/app-utils';\n\nexport class PageNews extends Component<any, any> {\n\n  private cardsB?: CardsB;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      card: null,\n      countShowed: 0,\n      countAll: 0,\n      showedIxs: [],\n      isLoading: true,\n      isApiKeySetted: false,\n      errorStr: ''\n    }\n  }\n\n  async handleShow() {\n    const rnd = randomExcept(this.state.countAll - 1, this.state.showedIxs);\n    if (rnd !== -1) {\n      const arr1 = [...this.state.showedIxs, rnd];\n      if (this.cardsB) {\n        const card: TpCard = this.cardsB.getByIndex(rnd);\n        this.setState({\n          card,\n          countShowed: this.state.countShowed + 1,\n          showedIxs: arr1\n        })\n        // ---\n        const card0 = {...card, [CardsB.FIELD_SHOW_DATE_LAST]: dayjs().format('YYYY-MM-DD')};\n        await CardsB.update(card.tid || '', card0);\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const apiKey = LSApiKey.apiKeyGet()\n    if (apiKey) {\n      try {\n        this.setState({isApiKeySetted: true});\n        // ---\n        // [[210222113321]]\n        const records = await MAirtable.recordsGet();\n        this.cardsB = new CardsB(records);\n        this.setState({\n          isLoading: false,\n          countAll: this.cardsB.countAllGet()\n        });\n      } catch (err) {\n        if (err.statusCode === 401 && err.message.includes('provide valid api key')) {\n          this.setState({errorStr: 'invalid Airtable API Key'})\n        } else {\n          throw new Error(err);\n        }\n      }\n    }\n  }\n\n  render() {\n    const {isApiKeySetted, isLoading, errorStr} = this.state;\n    // ---\n    return (\n      <div>{\n        errorStr ? <div className=\"app__error_string\">{errorStr}</div>\n          : isLoading ?\n          (<div>\n            {\n              isApiKeySetted ?\n                <div>Loading...</div> :\n                <div>please provide \"Airtable API Key\" at \"Settings\"</div>\n            }\n          </div>)\n          : <RandomCardViewer countAll={this.state.countAll} countShowed={this.state.countShowed}\n                              card={this.state.card}\n                              handleShow={() => this.handleShow()}/>\n      }\n      </div>\n    )\n\n  }\n}\n","import { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\n\nexport function colination(arr: string[], sortByCount?: SortInfo): ValCount[] {\n  const ret: ValCount[] = [];\n  if (arr && arr.length > 0) {\n    arr.forEach(val => {\n      const currElem = ret.find(retEl => retEl.value === val)\n      if (!currElem) {\n        ret.push(new ValCount(val, 1))\n      } else {\n        currElem.count++\n      }\n    })\n    // ---\n    if (sortByCount && sortByCount.needSort) {\n      ret.sort((a, b) => {\n        if (sortByCount.ascending) {\n          return a.count - b.count\n        }\n        return b.count - a.count\n      })\n    }\n  }\n  return ret;\n}\n\nexport class ValCount {\n  public count: number;\n\n  constructor(readonly value: string, count: number) {\n    this.count = count;\n  }\n\n  static asValLabels(valCounts: ValCount[]): ValLabel[] {\n    return valCounts.map(valCount => {\n      return new ValLabel(valCount.value, `${valCount.value} (${valCount.count})`)\n    })\n  }\n\n}\n\nexport class SortInfo {\n  constructor(readonly needSort: boolean = false, readonly ascending: boolean = true) {\n  }\n}\n\nexport class ValLabel {\n  constructor(readonly value: string, readonly label: string) {\n  }\n}\n\nexport function arrObjectsSortByStringProp(arrObjectsBack: object[], propName: string, ascending: boolean = true): void {\n  arrObjectsBack.sort((oj1, oj2) => {\n    // @ts-ignore\n    const v1 = oj1[propName];\n    // @ts-ignore\n    const v2 = oj2[propName];\n    if (v1 < v2) {\n      return ascending ? -1 : 1\n    }\n    if (v1 > v2) {\n      return ascending ? 1 : -1\n    }\n    return 0\n  })\n}\n\nexport function selectOptionToVusc(fieldName: string, option: { value: string } | { value: string }[] | null): string {\n  // --- values\n  const values = [];\n  let b51 = false;\n  if (option) {\n    if (Array.isArray(option)) {\n      option.forEach(el => {\n        values.push(el.value)\n        if (fieldName === UARW_COLUMN_NAME.PROGRESS && el.value === UARW_PROGRESSES.P1) {\n          b51 = true;\n        }\n      })\n    } else {\n      values.push(option.value)\n      if (fieldName === UARW_COLUMN_NAME.PROGRESS && option.value === UARW_PROGRESSES.P1) {\n        b51 = true;\n      }\n    }\n  }\n  // ---\n  const arr = values.map(val => `{${fieldName}} = '${val}'`)\n  if (b51) {\n    arr.push(`{${fieldName}} = ''`)\n  }\n  const stJoin = arr.join(', ')\n  return arr.length > 0 ? `OR(${stJoin})` : ''\n}\n\n","import React, { Component } from 'react';\nimport Loader from 'react-loader';\nimport { selectOptionToVusc, ValCount, ValLabel } from '../../utils/uarw/uarw-utils';\nimport Select from 'react-select';\nimport './styles.scss'\nimport { QCard } from './QCard';\nimport { QCardOj, UarwLogic, UarwTuples } from '../../utils/uarw/uarw-logic';\nimport { Button, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { UARW_COLUMN_NAME, UARW_PROGRESSES } from '../../consts-uarw';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { Paths } from '../../consts';\nimport UarwNavbar from './UarwNavbar';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { UarwSettings } from './UarwSettings';\nimport { UarwAbout } from './UarwAbout';\n\ninterface UarwState {\n  uarwTuples: UarwTuples | null,\n  loaded: boolean,\n  loadedScopes: boolean,\n  scopesSelectMode: boolean,\n  errStr: string,\n  selectScOptions: object[],\n  selectScSelectedOption: object | object[] | null,\n  selectPrOptions: object[],\n  selectPrSelectedOption: object | object[] | null,\n  qcards: QCardOj[],\n  countAll: number,\n  selectMode: number,\n  randomMode: number,\n}\n\nenum SelectMode {\n  STRICT = 1,\n  FREE = 2\n}\n\nenum RandomMode {\n  /**\n   * Показать все карточки в случайном порядке\n   */\n  A = 1,\n  B\n}\n\nfunction fnOptionsRefresh(currSelectOption: object | object[] | null, newVL: ValLabel[]): object | object[] | null {\n  if (currSelectOption && newVL && newVL.length > 0) {\n    if (Array.isArray(currSelectOption)) {\n      return currSelectOption.map(el => {\n        // @ts-ignore\n        const np = newVL.find(nx => nx.value === el.value)\n        return np ? np : el\n      })\n    } else {\n      // @ts-ignore\n      const np = newVL.find(nx => nx.value === currSelectOption.value)\n      return np ? np : currSelectOption\n    }\n  }\n  return currSelectOption\n}\n\nclass PageUarw extends Component<any, UarwState> {\n  private uarwLogic?: UarwLogic;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loadedScopes: false,\n      scopesSelectMode: true,\n      uarwTuples: null,\n      errStr: '',\n      selectScOptions: [],\n      selectScSelectedOption: null,\n      selectPrOptions: [],\n      selectPrSelectedOption: null,\n      qcards: [],\n      countAll: 0,\n      selectMode: SelectMode.STRICT,\n      randomMode: RandomMode.A,\n    }\n    this.selectScHandleChange = this.selectScHandleChange.bind(this);\n    this.selectPrHandleChange = this.selectPrHandleChange.bind(this);\n    this.handleShowCards = this.handleShowCards.bind(this);\n    this.selectModeChange = this.selectModeChange.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log('!!-!!-!! this.props {210308092038}\\n', this.props); // del+\n    this.setState({loaded: true});\n    this.uarwLogic = new UarwLogic();\n    await this.selectorsDataGetAndUpdate();\n  }\n\n  hadleQCardProgressChange = async (qcardTid: string, newProgress: UARW_PROGRESSES): Promise<boolean> => {\n    console.log(`!!-!!-!! -> :::::::::::::: hadleQCardProgressChange() {210302225851}:${Date.now()}`); // del+\n    // --- обновление прогресса *карточки на сервере\n    const hoggResult: HoggResult<boolean> = await UarwLogic.qcardProgressUpdate(qcardTid, newProgress)\n    console.log('!!-!!-!! hoggResult {210302225339}\\n', hoggResult); // del+\n    // ---\n    if (!hoggResult.value) {\n      const qcardWithErr = this.state.qcards.find(qcard => qcard.tid === qcardTid)\n      if (qcardWithErr) {\n        qcardWithErr.errMsg = JSON.stringify(hoggResult);\n        console.log('!!-!!-!! qcardWithErr {210303001137}\\n', qcardWithErr); // del+\n        this.setState({qcards: [...this.state.qcards]})\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Получение списка *скоупов и *прогрессов, в соответствии с выбранными в текущий момент *скоупами и *прогрессами\n   * @private\n   */\n  private async selectorsDataGetAndUpdate() {\n    if (this.uarwLogic) {\n      try {\n        this.setState({loadedScopes: false})\n        // ---\n        // получение текущих *скоупов/*прогрессов и формирование на их базе [vusc]-строки\n        const filterVusc = this.fnFilterVuscGet();\n        const {scopes, progresses, countAll} = await this.uarwLogic.scopesAndProgressesGet(filterVusc);\n        this.setState({loadedScopes: true, countAll});\n        // ---\n        const scopesVL: ValLabel[] = ValCount.asValLabels(scopes)\n        const progressesVL: ValLabel[] = ValCount.asValLabels(progresses)\n        // ---\n        const newSelectScSelectedOption = fnOptionsRefresh(this.state.selectScSelectedOption, scopesVL)\n        const newSelectPrSelectedOption = fnOptionsRefresh(this.state.selectPrSelectedOption, progressesVL)\n        const newState = {\n          selectScOptions: scopesVL,\n          selectScSelectedOption: newSelectScSelectedOption,\n          selectPrOptions: progressesVL,\n          selectPrSelectedOption: newSelectPrSelectedOption\n        };\n        this.setState(newState)\n      } catch (err) {\n        this.setState({errStr: err.message})\n      }\n    }\n  }\n\n  async selectScHandleChange(selectedOption: any) {\n    this.setState({selectScSelectedOption: selectedOption, qcards: []}, async () => {\n      await this.selectHandleChange()\n    })\n  }\n\n  async selectPrHandleChange(selectedOption: any) {\n    this.setState({selectPrSelectedOption: selectedOption, qcards: []}, async () => {\n      await this.selectHandleChange()\n    })\n  }\n\n  async selectHandleChange() {\n    if (this.state.selectMode === SelectMode.STRICT) {\n      await this.selectorsDataGetAndUpdate();\n    }\n  }\n\n  async handleShowCards(random: boolean = false) {\n    try {\n      this.setState({loaded: false});\n      let filterVusc = this.fnFilterVuscGet();\n      const qcardOjs = await this.uarwLogic?.qcardsGet(filterVusc);\n      if (random) {\n        if (this.state.randomMode === RandomMode.A) {\n          qcardOjs?.sort(() => Math.random() - 0.5)\n        }\n        if (this.state.randomMode === RandomMode.B) {\n          alert('no realised!')\n        }\n      }\n      this.setState({\n        qcards: qcardOjs || [],\n        loaded: true,\n      })\n    } catch (err) {\n      this.setState({loaded: true, errStr: err.message})\n    }\n  }\n\n  private fnFilterVuscGet() {\n    let filterScVusc = selectOptionToVusc(UARW_COLUMN_NAME.SCOPES, this.state.selectScSelectedOption as { value: string });\n    let filterPrVusc = selectOptionToVusc(UARW_COLUMN_NAME.PROGRESS, this.state.selectPrSelectedOption as { value: string });\n    if (filterScVusc && filterPrVusc) {\n      return `AND(${filterScVusc}, ${filterPrVusc})`\n    } else if (filterScVusc) {\n      return filterScVusc\n    } else {\n      return filterPrVusc\n    }\n  }\n\n  async selectModeChange(mode: SelectMode) {\n    this.setState({\n      selectMode: mode,\n      selectScSelectedOption: null,\n      selectPrSelectedOption: null,\n      qcards: []\n    }, () => {\n      if (mode === SelectMode.FREE) {\n        this.selectorsDataGetAndUpdate()\n      }\n    })\n  }\n\n  render() {\n    const {\n      selectScOptions,\n      selectScSelectedOption,\n      selectPrOptions,\n      selectPrSelectedOption,\n      qcards,\n      countAll\n    } = this.state;\n    return <div>\n      <UarwNavbar/>\n      <Switch>\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS_2} exact render={() => (<div>111-111</div>)}/>\n        <Route path={Paths.UARW + Paths.UARW_SETTINGS} exact component={UarwSettings}/>\n        <Route path={Paths.UARW + Paths.UARW_ABOUT} exact component={UarwAbout}/>\n        <Route path={Paths.UARW} exact>\n          {this.state.errStr\n            ? <div>{this.state.errStr}</div>\n            :\n            <div className=\"uarw-container\">\n              <div className=\"cards-count\">Карточек: {countAll}</div>\n              <Loader loaded={this.state.loadedScopes} position=\"relative\" top=\"30px\">\n                <div className=\"selects-container\">\n                  <Select\n                    className=\"select-scopes\"\n                    value={selectScSelectedOption}\n                    options={selectScOptions}\n                    onChange={this.selectScHandleChange}\n                    isMulti\n                  />\n                  <Select\n                    className=\"select-progresses\"\n                    value={selectPrSelectedOption}\n                    options={selectPrOptions}\n                    onChange={this.selectPrHandleChange}\n                    isMulti\n                  />\n                  <ToggleButtonGroup\n                    className=\"uarw-select-mode\"\n                    name=\"value\"\n                    type=\"radio\"\n                    value={this.state.selectMode}\n                    onChange={this.selectModeChange}\n                  >\n                    <ToggleButton value={SelectMode.STRICT} size=\"sm\">strict</ToggleButton>\n                    <ToggleButton value={SelectMode.FREE} size=\"sm\">free</ToggleButton>\n                  </ToggleButtonGroup>\n                </div>\n                <div className=\"random-mode-container\">\n                  <div>random mode:</div>\n                  <ToggleButtonGroup\n                    className=\"random-mode-select\"\n                    name=\"value\"\n                    type=\"radio\"\n                    value={this.state.randomMode}\n                    onChange={this.randomModeChange}\n                  >\n                    <ToggleButton value={RandomMode.A} size=\"sm\">A</ToggleButton>\n                    <ToggleButton value={RandomMode.B} size=\"sm\">B</ToggleButton>\n                  </ToggleButtonGroup>\n                  {this.fnRandomModeCommentGet()}\n                </div>\n                <div className=\"buttons\">\n                  <div className=\"show-random-btn\">\n                    <Button\n                      variant=\"success\"\n                      size=\"sm\"\n                      onClick={() => this.showRandomHandle()}\n                      disabled={this.state.randomMode === RandomMode.B}\n                    >show random</Button>\n                  </div>\n                  <div className=\"get-button\">\n                    <Button onClick={() => this.handleShowCards()} variant=\"success\" size=\"sm\">show all</Button>\n                  </div>\n                </div>\n              </Loader>\n              <Loader loaded={this.state.loaded} position='relative'>\n                <div className=\"qcards\">\n                  {\n                    qcards.map((qcard, index) => {\n                      return <QCard\n                        key={index}\n                        qcard={qcard}\n                        qcardProgressChange={this.hadleQCardProgressChange}\n                      />\n                    })\n                  }\n                </div>\n              </Loader>\n            </div>\n          }\n        </Route>\n      </Switch>\n    </div>\n  }\n\n  private fnRandomModeCommentGet() {\n    let text = '';\n    switch (this.state.randomMode) {\n      case RandomMode.A:\n        text = 'показ всех карточек, в случайном порядке'\n        break;\n      case RandomMode.B:\n        text = '-';\n        break;\n    }\n    return <div className=\"cls2121\">{text}</div>\n  }\n\n  randomModeChange = (mode: RandomMode) => {\n    this.setState({randomMode: mode})\n  }\n\n  async showRandomHandle() {\n    await this.handleShowCards(true)\n  }\n}\n\nexport default withRouter(PageUarw);\n","import { Component } from 'react';\nimport './styles.scss';\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { UARW_PROGRESSES } from '../../../../consts-uarw';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass Props {\n  vls: { value: string, label: string }[] = []\n  currValue: string = UARW_PROGRESSES.P1\n  onChange?: (val: string) => void = () => {\n  }\n  disable: boolean = false\n}\n\nclass State {\n\n}\n\nexport class ToggleProgresses extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return <div className=\"cls2255-container\">\n      <ToggleButtonGroup\n        name=\"value\"\n        type=\"radio\"\n        value={this.props.currValue}\n        onChange={this.props.onChange}\n        size=\"sm\"\n      >\n        {\n          this.props.vls.map((vl, index) => {\n            return <ToggleButton key={index} value={vl.value} disabled={this.props.disable}>\n              {vl.label}\n            </ToggleButton>\n          })\n        }\n      </ToggleButtonGroup>\n      <div className=\"cls2255-spinner\">\n        <ClipLoader loading={this.props.disable} size={16}/>\n      </div>\n    </div>\n  }\n}\n","import { Component } from 'react';\nimport './styles.scss';\nimport { QCardOj } from '../../../utils/uarw/uarw-logic';\nimport { ToggleProgresses } from './ToggleProgresses';\nimport {\n  UARW_PROGRESSES,\n} from '../../../consts-uarw';\n\nconst ReactMarkdown = require('react-markdown');\n\nclass QCardProps {\n  qcard?: QCardOj\n  qcardProgressChange?: (qcardTid: string, newProgress: UARW_PROGRESSES) => Promise<boolean>\n}\n\nclass QCardState {\n  answerShowed: boolean = false\n  progressValue: string = UARW_PROGRESSES.P1\n  progressDisable: boolean = false\n}\n\nexport class QCard extends Component<QCardProps, QCardState> {\n  private vls: { value: string, label: string }[] = [\n    {value: UARW_PROGRESSES.P1, label: UARW_PROGRESSES.P1},\n    {value: UARW_PROGRESSES.P2, label: UARW_PROGRESSES.P2},\n    {value: UARW_PROGRESSES.P3, label: UARW_PROGRESSES.P3},\n    {value: UARW_PROGRESSES.P4, label: UARW_PROGRESSES.P4},\n    {value: UARW_PROGRESSES.P5, label: UARW_PROGRESSES.P5},\n  ];\n\n  constructor(props: QCardProps) {\n    super(props);\n    this.state = {\n      answerShowed: false,\n      progressValue: this.props.qcard?.progress || UARW_PROGRESSES.P1,\n      progressDisable: false\n    }\n  }\n\n  handleClick() {\n    this.setState({answerShowed: true})\n  }\n\n  progressesChange = async (val: string) => {\n    console.log(`!!-!!-!! -> :::::::::::::: progressesChange() {210301223647}:${Date.now()}`); // del+\n    console.log('!!-!!-!! val {210301223735}\\n', val); // del+\n    console.log('!!-!!-!! qcard {210302214154}\\n', this.props.qcard); // del+\n    if (this.props.qcardProgressChange) {\n      this.setState({progressDisable: true});\n      const res = await this.props.qcardProgressChange(this.props.qcard?.tid || '', val as UARW_PROGRESSES);\n      console.log('!!-!!-!! res {210303002044}\\n', res); // del+\n      this.setState({progressDisable: false});\n      if (res) {\n        this.setState({progressValue: val})\n      }\n    }\n  }\n\n  render() {\n    const {qcard} = this.props;\n    const {answerShowed} = this.state;\n    return (\n      <div className=\"qcard\">\n        <div className=\"qcard__scope\">{qcard?.scope}</div>\n        <ReactMarkdown className=\"qcard__question\">{qcard?.question}</ReactMarkdown>\n        <input className=\"qcard__button\" type=\"button\" value=\"show answer\" onClick={() => this.handleClick()}/>\n        {!answerShowed || <ReactMarkdown className=\"qcard__answer\">{this.props.qcard?.answer}</ReactMarkdown>}\n        <div className=\"toggle-progresses\">\n          <ToggleProgresses\n            vls={this.vls}\n            currValue={this.state.progressValue}\n            onChange={this.progressesChange}\n            disable={this.state.progressDisable}\n          />\n        </div>\n        {this.props.qcard?.errMsg && <div className=\"err-msg\">{this.props.qcard?.errMsg}</div>}\n      </div>\n    )\n  }\n}\n","import { HoggTupleNT } from '../../api/hogg/interfaces/HoggTupleNT';\nimport {\n  UARW_COLUMN_NAME,\n  UARW_CONF_AIRTABLE_DB_NAME,\n  UARW_CONF_AIRTABLE_TABLE_NAME,\n  UARW_PROGRESSES\n} from '../../consts-uarw';\nimport { arrObjectsSortByStringProp, colination, SortInfo, ValCount } from './uarw-utils';\nimport { HoggConnectionAirtable } from '../../api/hogg/connections/HoggConnectionAirtable';\nimport { HoggOffsetCount } from '../../api/hogg/connections/HoggOffsetCount';\nimport { HoggConnectionNT } from '../../api/hogg/interfaces/HoggConnectionNT';\nimport { BaseTuple } from '../../api/hogg/base-implements/BaseTuple';\nimport { BaseCell } from '../../api/hogg/base-implements/BaseCell';\nimport { HoggResult } from '../../api/hogg/utils/HoggResult';\nimport { LSApiKey } from '../app-utils';\n\nexport class UarwLogic {\n\n  private static connectionTableCreate(): HoggConnectionNT {\n    const connection = new HoggConnectionAirtable();\n    const apiKey = LSApiKey.apiKeyGet() || '';\n    connection.init({apiKey});\n    return connection\n      .db(UARW_CONF_AIRTABLE_DB_NAME)\n      .table(UARW_CONF_AIRTABLE_TABLE_NAME)\n  }\n\n  async qcardsGet(filterVusc: string): Promise<QCardOj[]> {\n    const data: HoggTupleNT[] = await UarwLogic.connectionTableCreate()\n      .filterVusc(filterVusc)\n      .query(new HoggOffsetCount(true))\n    const uarwTuples = new UarwTuples(data)\n    return uarwTuples.qcards\n  }\n\n  static async qcardProgressUpdate(cardTid: string, progress: UARW_PROGRESSES): Promise<HoggResult<boolean>> {\n    const conn = UarwLogic.connectionTableCreate();\n    const tuple = new BaseTuple()\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.TID, cardTid))\n      .cellAdd(new BaseCell().create(UARW_COLUMN_NAME.PROGRESS, progress))\n    const res = await conn.update([tuple])\n    console.log('!!-!!-!! res {210302224128}\\n', res); // del+\n    return res;\n  }\n\n  async scopesAndProgressesGet(filterVusc: string = ''): Promise<{ scopes: ValCount[], progresses: ValCount[], countAll: number }> {\n    const tuples = await UarwLogic.connectionTableCreate()\n      .columns([UARW_COLUMN_NAME.SCOPES, UARW_COLUMN_NAME.PROGRESS])\n      .filterVusc(filterVusc)\n      .query(new HoggOffsetCount(true))\n    // ---\n    const scopes: string[] = []\n    const progresses: string[] = []\n    tuples.forEach(tuple => {\n      let b19 = false;\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet();\n        const value = cell.valueGet();\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\n          scopes.push(value)\n        }\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\n          progresses.push(value)\n          b19 = true\n        }\n      })\n      if (!b19) {\n        progresses.push(UARW_PROGRESSES.P1)\n      }\n    })\n    // ---\n    const scopesVC = colination(scopes, new SortInfo(false))\n    arrObjectsSortByStringProp(scopesVC, 'value', true)\n    const progressesVC = colination(progresses, new SortInfo(false))\n    arrObjectsSortByStringProp(progressesVC, 'value', true)\n    // ---\n    return {scopes: scopesVC, progresses: progressesVC, countAll: tuples.length}\n  }\n}\n\nexport class UarwTuples {\n  public qcards: QCardOj[];\n\n  constructor(readonly tuples: HoggTupleNT[]) {\n    this.qcards = QCardOj.createMulti(this.tuples)\n  }\n\n  scopesGet(): ValCount[] {\n    const scopes: string[] = [];\n    this.tuples.forEach(tuple => {\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet()\n        const value = cell.valueGet()\n        if (columnName === UARW_COLUMN_NAME.SCOPES) {\n          scopes.push(value)\n        }\n      })\n    })\n    // ---\n    return colination(scopes, new SortInfo(true, false))\n  }\n\n  progressesGet(): ValCount[] {\n    const pgs: string[] = [];\n    this.tuples.forEach(tuple => {\n      tuple.cellsGet().forEach(cell => {\n        const columnName = cell.columnNameGet()\n        const value = cell.valueGet()\n        if (columnName === UARW_COLUMN_NAME.PROGRESS) {\n          pgs.push(value)\n        }\n      })\n    })\n    // ---\n    const valCounts = colination(pgs);\n    arrObjectsSortByStringProp(valCounts, 'value', true);\n    return valCounts\n  }\n\n}\n\nexport class QCardOj {\n  question: string = ''\n  answer: string = ''\n  progress: string = ''\n  scope: string = ''\n  id: string = ''\n  tid: string = ''\n  errMsg: string = ''\n\n  static create(tuple: HoggTupleNT): QCardOj {\n    const cells = tuple.cellsGet()\n    const qcard = new QCardOj();\n    cells.forEach(cell => {\n      const columnName = cell.columnNameGet()\n      const value = cell.valueGet()\n      switch (columnName) {\n        case UARW_COLUMN_NAME.QUESTION:\n          qcard.question = value;\n          break;\n        case UARW_COLUMN_NAME.ANSWER:\n          qcard.answer = value;\n          break;\n        case UARW_COLUMN_NAME.PROGRESS:\n          qcard.progress = value;\n          break;\n        case UARW_COLUMN_NAME.SCOPES:\n          qcard.scope = value;\n          break;\n        case UARW_COLUMN_NAME.TID:\n          qcard.tid = value;\n          break;\n        case UARW_COLUMN_NAME.ID:\n          qcard.id = value;\n          break;\n      }\n    })\n    if (!qcard.progress) {\n      qcard.progress = UARW_PROGRESSES.P1;\n    }\n    return qcard\n  }\n\n  static createMulti(tuples: HoggTupleNT[]): QCardOj[] {\n    return tuples.map(tuple => QCardOj.create(tuple))\n  }\n}\n","import { Component } from 'react';\nimport './styles.scss';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Names, Paths } from '../../../consts';\nimport { withRouter } from 'react-router-dom';\n\nclass State {\n\n}\n\nclass UarwNavbar extends Component<any, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  private onSelectHandle = (eventKey: string | null) => {\n    this.props.history.push(eventKey || '');\n  };\n\n  render() {\n    const {path} = this.props.match;\n    return <>\n      <Navbar>\n        <Navbar.Brand href={Paths.UARW}>UARW</Navbar.Brand>\n        <Nav onSelect={this.onSelectHandle}>\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS}>{Names.nameGet(Paths.UARW_SETTINGS)}</Nav.Link>\n          <Nav.Link eventKey={path + Paths.UARW_ABOUT}>{Names.nameGet(Paths.UARW_ABOUT)}</Nav.Link>\n          <Nav.Link eventKey={path + Paths.UARW_SETTINGS_2}>Settings-2</Nav.Link>\n        </Nav>\n      </Navbar>\n    </>\n  }\n}\n\nexport default withRouter(UarwNavbar);\n","import { Component } from 'react';\nimport './styles.scss';\n\nclass Props {\n\n}\n\nclass State {\n\n}\n\nexport class UarwSettings extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return <div>UarwSettings</div>\n  }\n}\n","import { Component } from 'react';\nimport './styles.scss';\n\nclass Props {\n\n}\n\nclass State {\n\n}\n\nexport class UarwAbout extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return <div>UarwAbout</div>\n  }\n}\n","import React from 'react';\nimport { Route, Router, Switch, withRouter } from 'react-router-dom';\nimport { Location as HLocation } from \"history\";\nimport { MAirtable } from './api/airtable-api';\nimport { Settings } from './components/Settings';\nimport { PageDebug } from './components/PageDebug';\nimport { PageNews } from './components/PageNews';\nimport PageUarw from './components/PageUarw';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport './App.scss';\nimport { Names, Paths } from './consts';\n\nMAirtable.init();\n\n\ninterface State {\n  navEventKey: string | null,\n  navDropdownTitle: string,\n  navDropdownIsActive: boolean\n}\n\nclass App extends React.Component<any, State> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      navEventKey: Paths.MGXR,\n      navDropdownTitle: 'Другое',\n      navDropdownIsActive: false\n    }\n  }\n\n  locationHandleToNav(location: HLocation<unknown>) {\n    const findOj = Names.values.find(el => {\n      return el.link === location.pathname && el.group === 'dropdown-1';\n    });\n    this.setState({\n      navEventKey: location.pathname,\n      navDropdownTitle: findOj?.name || 'Другое',\n      navDropdownIsActive: !!findOj\n    })\n  }\n\n  componentDidMount() {\n    console.log('!!-!!-!! this.props {210308091043}\\n', this.props); // del+\n    this.locationHandleToNav(this.props.history.location);\n    this.props.history.listen((location: HLocation<unknown>) => {\n      this.locationHandleToNav(location)\n    })\n  }\n\n  navSelectHandle = (eventKey: string | null) => {\n    this.props.history.push(eventKey || Paths.MGXR);\n  }\n\n  fnMain = () => {\n    return <div>\n      <div className=\"appRoutes\">\n        <Container fluid>\n          <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\">\n            <Navbar.Brand href={Paths.MGXR}>MGXR</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav\n                variant=\"pills\"\n                className=\"mr-auto\"\n                defaultActiveKey={Paths.MGXR}\n                activeKey={this.state.navEventKey}\n                onSelect={this.navSelectHandle}\n              >\n                <Nav.Link eventKey={Paths.MGXR}>Главная</Nav.Link>\n                <Nav.Link eventKey={Paths.UARW}>\"Карточки\"</Nav.Link>\n                <Nav.Link eventKey={Paths.NEWS}>\"Новости\"</Nav.Link>\n                <Nav.Link eventKey={Paths.MGXR + Paths.SETTINGS}>Настройки</Nav.Link>\n                <NavDropdown\n                  id=\"elem1224\"\n                  title={this.state.navDropdownTitle}\n                  active={this.state.navDropdownIsActive}\n                >\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.DEBUG}>Debug</NavDropdown.Item>\n                  <NavDropdown.Item eventKey={Paths.MGXR + Paths.SOME}>Some</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </Container>\n      </div>\n\n    </div>\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        {/* // --- */}\n        <Route path={Paths.MGXR}>\n          {this.fnMain()}\n        </Route>\n        <Route path={Paths.MGXR} exact>\n          <div>Проекты</div>\n          {Names.aTagGet(Paths.UARW)}\n          {Names.aTagGet(Paths.NEWS)}\n        </Route>\n        <Route path={Paths.MGXR + Paths.SETTINGS} exact>\n          <Settings/>\n        </Route>\n        <Route path={Paths.MGXR + Paths.DEBUG} exact>\n          <PageDebug/>\n        </Route>\n        <Route path={Paths.NEWS} exact>\n          {/* \"Новости\" */}\n          <PageNews/>\n        </Route>\n        <Route path={Paths.UARW}>\n          {/* \"Карточки\" */}\n          <PageUarw/>\n        </Route>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}