{"version":3,"sources":["components/Card/index.tsx","components/RandomCardViewer/index.tsx","utils/utils.tsx","api/cards-api.ts","consts.ts","api/airtable-api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","this","card","url","length","substr","className","title","href","target","rel","comm","body","Component","RandomCardViewer","countShowed","countAll","onClick","handleShow","TpCard","CardsB","records","FIELD_TITLE","FIELD_URL","FIELD_COMM","FIELD_BODY","index","record","get","CONF_AIRTABLE_BASE","CONF_AIRTABLE_TABLE_NAME","MAirtable","dc","Airtable","default_config","apiKey","endpointUrl","configure","maxRecords","Promise","resolve","reject","ret","selectCfg","base","select","eachPage","fetchNextPage","console","count","log","forEach","push","err","error","customHistory","createBrowserHistory","init","App","cardsB","state","showedIxs","isLoading","do","bind","rnd","ix","arrExcept","_","isEmpty","random","arr0","ix0","some","el","randomExcept","arr1","setState","getByIndex","a","recordsGet","countAllGet","Error","history","to","path","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea789ee9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './card.css';\n\nexport class Card extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    if (!this.props.card) {\n      return <div>card is null</div>\n    }\n    // ---\n    let url = this.props.card.url;\n    const ln = 47;\n    if (url && url.length > ln) {\n      url = url.substr(0, ln) + '...';\n    }\n    // ---\n    return (<div className=\"card\">\n      <div className=\"card__title\">{this.props.card.title}</div>\n      <div className=\"card__link\"><a href={this.props.card.url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\n      </div>\n      <div>{this.props.card.comm}</div>\n      <div>{this.props.card.body}</div>\n    </div>);\n  }\n}\n","import { Component } from 'react';\nimport { Card } from '../Card';\nimport './styles.css'\n\n\nexport class RandomCardViewer extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (<div className=\"rc-viewer\">\n      <div>Показано: {this.props.countShowed} / {this.props.countAll}</div>\n      <button className=\"rc-viewer__button\" onClick={this.props.handleShow}>Show</button>\n      {this.props.card ? <div className=\"rc-viewer__card\"><Card card={this.props.card}/></div> : null}\n    </div>);\n  }\n}\n","import _ from 'lodash';\n\nexport class TpCard {\n  constructor(\n    readonly title?: string,\n    readonly url?: string,\n    readonly comm?: string,\n    readonly body?: string\n  ) {\n  }\n}\n\nexport const tpCards = [\n  new TpCard('Российская газета', 'https://rg.ru'),\n  new TpCard('Коммерсант', 'https://www.kommersant.ru/'),\n  new TpCard('РИА Новости', 'https://ria.ru/')\n]\n\n/**\n * Возвращает случайное число в диапазоне 0 .. (1) включая 0 и (1), но отсутствующее в (2).\n * Если такого случайного числа найти невозможно (из-за того что в (2) уже все индексы есть), то возвращает -1\n *\n * ID [[210219210500]], rev.2 1.1 2021-02-19\n *\n * @param ix (1) -- например 3\n * @param arrExcept -- например [0, 1]\n * @return например может вернуть только 2 или 3\n */\nexport function randomExcept(ix: number, arrExcept: [number]): number {\n  if (_.isEmpty(arrExcept)) {\n    return _.random(ix);\n  }\n  const arr0 = [];\n  for (let ix0 = 0; ix0 <= ix; ix0++) {\n    const b0 = arrExcept.some(el => el === ix0);\n    if (!b0) {\n      arr0.push(ix0)\n    }\n  }\n  if (arr0.length > (ix + 1) || arr0.length === 0) {\n    return -1\n  }\n  const rnd = _.random(arr0.length - 1);\n  return arr0[rnd];\n}\n","import cards from './cards.json';\nimport { TpCard } from '../utils/utils';\nimport Record from 'airtable/lib/record';\n\nexport class Cards {\n  static allGet(): TpCard[] {\n    return cards.cards.map(el => {\n      return el\n    })\n  }\n\n  static countAllGet(): number {\n    return cards.cards.length\n  }\n\n  static getByIndex(index: number): TpCard {\n    return cards.cards[index]\n  }\n}\n\nexport class CardsB {\n  private FIELD_TITLE = 'title';\n  private FIELD_URL = 'url';\n  private FIELD_COMM = 'comm';\n  private FIELD_BODY = 'body';\n\n  constructor(readonly records: Record[]) {\n  }\n\n  countAllGet(): number {\n    return this.records.length\n  }\n\n  getByIndex(index: number): TpCard {\n    const record = this.records[index]\n    return new TpCard(\n      record.get(this.FIELD_TITLE),\n      record.get(this.FIELD_URL),\n      record.get(this.FIELD_COMM),\n      record.get(this.FIELD_BODY)\n    )\n  }\n\n}\n","export const CONF_AIRTABLE_API_KEY = 'keyzbjKNgu52lb9D3';\nexport const CONF_AIRTABLE_BASE = 'appXv6ry7Vn262nGR';\nexport const CONF_AIRTABLE_TABLE_NAME = 'main';\n","import Airtable from 'airtable';\nimport Record from 'airtable/lib/record';\nimport { CONF_AIRTABLE_API_KEY, CONF_AIRTABLE_BASE, CONF_AIRTABLE_TABLE_NAME } from '../consts';\n\nexport class MAirtable {\n\n  static init() {\n    const dc = Airtable.default_config()\n    dc.apiKey = CONF_AIRTABLE_API_KEY\n    dc.endpointUrl = 'https://api.airtable.com'\n    Airtable.configure(dc)\n  }\n\n  /**\n   *\n   * @param maxRecords -- максимальное количество записей которое нужно вернуть, задействуется если > 0\n   */\n  static async recordsGet(maxRecords: number = 0): Promise<Record[]> {\n    return new Promise((resolve, reject) => {\n      const ret: Record[] = [];\n      const selectCfg = {}\n      if (maxRecords > 0) {\n        // @ts-ignore\n        selectCfg.maxRecords = maxRecords\n      }\n      Airtable\n        .base(CONF_AIRTABLE_BASE)(CONF_AIRTABLE_TABLE_NAME)\n        .select(selectCfg)\n        .eachPage(\n          function page(records, fetchNextPage) {\n            console.count('page')\n            console.log('!!-!!-!! records.length {210221000727}\\n', records.length); // del+\n            records.forEach(function (record) {\n              ret.push(record)\n            });\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              reject(err)\n            }\n            resolve(ret)\n          }\n        )\n    });\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { RandomCardViewer } from './components/RandomCardViewer';\nimport { randomExcept } from './utils/utils';\nimport { Cards, CardsB } from './api/cards-api';\nimport { Router, Link, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { MAirtable } from './api/airtable-api';\n\nconst customHistory = createBrowserHistory();\n\nMAirtable.init();\n\n\nclass App extends React.Component<any, any> {\n  private cardsB?: CardsB;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      card: null,\n      countShowed: 0,\n      countAll: 0,\n      showedIxs: [],\n      isLoading: true\n    }\n    this.do = this.do.bind(this);\n  }\n\n  handleShow() {\n    const rnd = randomExcept(this.state.countAll - 1, this.state.showedIxs);\n    if (rnd !== -1) {\n      const arr1 = [...this.state.showedIxs, rnd];\n      this.setState({\n        card: this.cardsB ? this.cardsB.getByIndex(rnd) : {},\n        countShowed: this.state.countShowed + 1,\n        showedIxs: arr1\n      })\n    }\n  }\n\n  do() {\n  }\n\n  async componentDidMount() {\n    try {\n      const records = await MAirtable.recordsGet();\n      console.log('!!-!!-!! 2358-10 records {210220235848}\\n', records); // del+\n      this.cardsB = new CardsB(records);\n      this.setState({isLoading: false, countAll: this.cardsB.countAllGet()});\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    return (\n      <Router history={customHistory}>\n        <div className=\"App\">\n          <div>rev.2</div>\n          <Link to=\"/\">App</Link>\n          <Switch>\n            <Route path=\"/\">\n              {\n                this.state.isLoading ?\n                  <div>Loading...</div> :\n                  <RandomCardViewer countAll={this.state.countAll} countShowed={this.state.countShowed}\n                                    card={this.state.card}\n                                    handleShow={() => this.handleShow()}/>\n              }\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}